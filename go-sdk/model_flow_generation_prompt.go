/*
Kestra EE

All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kestra_api_client

import (
	"encoding/json"
	"fmt"
)

// checks if the FlowGenerationPrompt type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FlowGenerationPrompt{}

// FlowGenerationPrompt struct for FlowGenerationPrompt
type FlowGenerationPrompt struct {
	ConversationId       string `json:"conversationId"`
	UserPrompt           string `json:"userPrompt"`
	FlowYaml             string `json:"flowYaml"`
	AdditionalProperties map[string]interface{}
}

type _FlowGenerationPrompt FlowGenerationPrompt

// NewFlowGenerationPrompt instantiates a new FlowGenerationPrompt object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFlowGenerationPrompt(conversationId string, userPrompt string, flowYaml string) *FlowGenerationPrompt {
	this := FlowGenerationPrompt{}
	this.ConversationId = conversationId
	this.UserPrompt = userPrompt
	this.FlowYaml = flowYaml
	return &this
}

// NewFlowGenerationPromptWithDefaults instantiates a new FlowGenerationPrompt object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlowGenerationPromptWithDefaults() *FlowGenerationPrompt {
	this := FlowGenerationPrompt{}
	return &this
}

// GetConversationId returns the ConversationId field value
func (o *FlowGenerationPrompt) GetConversationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConversationId
}

// GetConversationIdOk returns a tuple with the ConversationId field value
// and a boolean to check if the value has been set.
func (o *FlowGenerationPrompt) GetConversationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConversationId, true
}

// SetConversationId sets field value
func (o *FlowGenerationPrompt) SetConversationId(v string) {
	o.ConversationId = v
}

// GetUserPrompt returns the UserPrompt field value
func (o *FlowGenerationPrompt) GetUserPrompt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserPrompt
}

// GetUserPromptOk returns a tuple with the UserPrompt field value
// and a boolean to check if the value has been set.
func (o *FlowGenerationPrompt) GetUserPromptOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserPrompt, true
}

// SetUserPrompt sets field value
func (o *FlowGenerationPrompt) SetUserPrompt(v string) {
	o.UserPrompt = v
}

// GetFlowYaml returns the FlowYaml field value
func (o *FlowGenerationPrompt) GetFlowYaml() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FlowYaml
}

// GetFlowYamlOk returns a tuple with the FlowYaml field value
// and a boolean to check if the value has been set.
func (o *FlowGenerationPrompt) GetFlowYamlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FlowYaml, true
}

// SetFlowYaml sets field value
func (o *FlowGenerationPrompt) SetFlowYaml(v string) {
	o.FlowYaml = v
}

func (o FlowGenerationPrompt) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FlowGenerationPrompt) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["conversationId"] = o.ConversationId
	toSerialize["userPrompt"] = o.UserPrompt
	toSerialize["flowYaml"] = o.FlowYaml

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FlowGenerationPrompt) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"conversationId",
		"userPrompt",
		"flowYaml",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFlowGenerationPrompt := _FlowGenerationPrompt{}

	err = json.Unmarshal(data, &varFlowGenerationPrompt)

	if err != nil {
		return err
	}

	*o = FlowGenerationPrompt(varFlowGenerationPrompt)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "conversationId")
		delete(additionalProperties, "userPrompt")
		delete(additionalProperties, "flowYaml")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFlowGenerationPrompt struct {
	value *FlowGenerationPrompt
	isSet bool
}

func (v NullableFlowGenerationPrompt) Get() *FlowGenerationPrompt {
	return v.value
}

func (v *NullableFlowGenerationPrompt) Set(val *FlowGenerationPrompt) {
	v.value = val
	v.isSet = true
}

func (v NullableFlowGenerationPrompt) IsSet() bool {
	return v.isSet
}

func (v *NullableFlowGenerationPrompt) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlowGenerationPrompt(val *FlowGenerationPrompt) *NullableFlowGenerationPrompt {
	return &NullableFlowGenerationPrompt{value: val, isSet: true}
}

func (v NullableFlowGenerationPrompt) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlowGenerationPrompt) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
