/**
 * Kestra EE
 * All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InstanceControllerApiWorkerGroupItem from './InstanceControllerApiWorkerGroupItem';

/**
 * The InstanceControllerApiWorkerGroupList model module.
 * @module model/InstanceControllerApiWorkerGroupList
 * @version 1.0.0
 */
class InstanceControllerApiWorkerGroupList {
    /**
     * Constructs a new <code>InstanceControllerApiWorkerGroupList</code>.
     * ApiWorkerGroupList.
     * @alias module:model/InstanceControllerApiWorkerGroupList
     * @param workerGroups {Array.<module:model/InstanceControllerApiWorkerGroupItem>} The list of worker groups.
     */
    constructor(workerGroups) { 
        
        InstanceControllerApiWorkerGroupList.initialize(this, workerGroups);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, workerGroups) { 
        obj['workerGroups'] = workerGroups;
    }

    /**
     * Constructs a <code>InstanceControllerApiWorkerGroupList</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InstanceControllerApiWorkerGroupList} obj Optional instance to populate.
     * @return {module:model/InstanceControllerApiWorkerGroupList} The populated <code>InstanceControllerApiWorkerGroupList</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InstanceControllerApiWorkerGroupList();

            if (data.hasOwnProperty('workerGroups')) {
                obj['workerGroups'] = ApiClient.convertToType(data['workerGroups'], [InstanceControllerApiWorkerGroupItem]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InstanceControllerApiWorkerGroupList</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InstanceControllerApiWorkerGroupList</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of InstanceControllerApiWorkerGroupList.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['workerGroups']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['workerGroups'])) {
                throw new Error("Expected the field `workerGroups` to be an array in the JSON data but got " + data['workerGroups']);
            }
            // validate the optional field `workerGroups` (array)
            for (const item of data['workerGroups']) {
                InstanceControllerApiWorkerGroupItem.validateJSON(item);
            };
        }

        return true;
    }


}

InstanceControllerApiWorkerGroupList.RequiredProperties = ["workerGroups"];

/**
 * The list of worker groups.
 * @member {Array.<module:model/InstanceControllerApiWorkerGroupItem>} workerGroups
 */
InstanceControllerApiWorkerGroupList.prototype['workerGroups'] = undefined;






export default InstanceControllerApiWorkerGroupList;

