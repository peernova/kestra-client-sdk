/**
 * Kestra EE
 * All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MeControllerApiUserDetailsRequest model module.
 * @module model/MeControllerApiUserDetailsRequest
 * @version 1.0.0
 */
class MeControllerApiUserDetailsRequest {
    /**
     * Constructs a new <code>MeControllerApiUserDetailsRequest</code>.
     * @alias module:model/MeControllerApiUserDetailsRequest
     * @param firstName {String} 
     * @param lastName {String} 
     * @param email {String} 
     */
    constructor(firstName, lastName, email) { 
        
        MeControllerApiUserDetailsRequest.initialize(this, firstName, lastName, email);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, firstName, lastName, email) { 
        obj['firstName'] = firstName;
        obj['lastName'] = lastName;
        obj['email'] = email;
    }

    /**
     * Constructs a <code>MeControllerApiUserDetailsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MeControllerApiUserDetailsRequest} obj Optional instance to populate.
     * @return {module:model/MeControllerApiUserDetailsRequest} The populated <code>MeControllerApiUserDetailsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MeControllerApiUserDetailsRequest();

            if (data.hasOwnProperty('firstName')) {
                obj['firstName'] = ApiClient.convertToType(data['firstName'], 'String');
            }
            if (data.hasOwnProperty('lastName')) {
                obj['lastName'] = ApiClient.convertToType(data['lastName'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MeControllerApiUserDetailsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MeControllerApiUserDetailsRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MeControllerApiUserDetailsRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['firstName'] && !(typeof data['firstName'] === 'string' || data['firstName'] instanceof String)) {
            throw new Error("Expected the field `firstName` to be a primitive type in the JSON string but got " + data['firstName']);
        }
        // ensure the json data is a string
        if (data['lastName'] && !(typeof data['lastName'] === 'string' || data['lastName'] instanceof String)) {
            throw new Error("Expected the field `lastName` to be a primitive type in the JSON string but got " + data['lastName']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }

        return true;
    }


}

MeControllerApiUserDetailsRequest.RequiredProperties = ["firstName", "lastName", "email"];

/**
 * @member {String} firstName
 */
MeControllerApiUserDetailsRequest.prototype['firstName'] = undefined;

/**
 * @member {String} lastName
 */
MeControllerApiUserDetailsRequest.prototype['lastName'] = undefined;

/**
 * @member {String} email
 */
MeControllerApiUserDetailsRequest.prototype['email'] = undefined;






export default MeControllerApiUserDetailsRequest;

