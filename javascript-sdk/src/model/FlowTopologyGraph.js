/**
 * Kestra EE
 * All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FlowNode from './FlowNode';
import FlowTopologyGraphEdge from './FlowTopologyGraphEdge';

/**
 * The FlowTopologyGraph model module.
 * @module model/FlowTopologyGraph
 * @version 1.0.0
 */
class FlowTopologyGraph {
    /**
     * Constructs a new <code>FlowTopologyGraph</code>.
     * @alias module:model/FlowTopologyGraph
     * @param nodes {Array.<module:model/FlowNode>} 
     * @param edges {Array.<module:model/FlowTopologyGraphEdge>} 
     */
    constructor(nodes, edges) { 
        
        FlowTopologyGraph.initialize(this, nodes, edges);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, nodes, edges) { 
        obj['nodes'] = nodes;
        obj['edges'] = edges;
    }

    /**
     * Constructs a <code>FlowTopologyGraph</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FlowTopologyGraph} obj Optional instance to populate.
     * @return {module:model/FlowTopologyGraph} The populated <code>FlowTopologyGraph</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FlowTopologyGraph();

            if (data.hasOwnProperty('nodes')) {
                obj['nodes'] = ApiClient.convertToType(data['nodes'], [FlowNode]);
            }
            if (data.hasOwnProperty('edges')) {
                obj['edges'] = ApiClient.convertToType(data['edges'], [FlowTopologyGraphEdge]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FlowTopologyGraph</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FlowTopologyGraph</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FlowTopologyGraph.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['nodes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['nodes'])) {
                throw new Error("Expected the field `nodes` to be an array in the JSON data but got " + data['nodes']);
            }
            // validate the optional field `nodes` (array)
            for (const item of data['nodes']) {
                FlowNode.validateJSON(item);
            };
        }
        if (data['edges']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['edges'])) {
                throw new Error("Expected the field `edges` to be an array in the JSON data but got " + data['edges']);
            }
            // validate the optional field `edges` (array)
            for (const item of data['edges']) {
                FlowTopologyGraphEdge.validateJSON(item);
            };
        }

        return true;
    }


}

FlowTopologyGraph.RequiredProperties = ["nodes", "edges"];

/**
 * @member {Array.<module:model/FlowNode>} nodes
 */
FlowTopologyGraph.prototype['nodes'] = undefined;

/**
 * @member {Array.<module:model/FlowTopologyGraphEdge>} edges
 */
FlowTopologyGraph.prototype['edges'] = undefined;






export default FlowTopologyGraph;

