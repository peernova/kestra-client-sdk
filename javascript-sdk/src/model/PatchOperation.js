/**
 * Kestra EE
 * All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PatchOperationPath from './PatchOperationPath';
import PatchOperationType from './PatchOperationType';

/**
 * The PatchOperation model module.
 * @module model/PatchOperation
 * @version 1.0.0
 */
class PatchOperation {
    /**
     * Constructs a new <code>PatchOperation</code>.
     * @alias module:model/PatchOperation
     */
    constructor() { 
        
        PatchOperation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PatchOperation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PatchOperation} obj Optional instance to populate.
     * @return {module:model/PatchOperation} The populated <code>PatchOperation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PatchOperation();

            if (data.hasOwnProperty('operation')) {
                obj['operation'] = PatchOperationType.constructFromObject(data['operation']);
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = PatchOperationPath.constructFromObject(data['path']);
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PatchOperation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PatchOperation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `path`
        if (data['path']) { // data not null
          PatchOperationPath.validateJSON(data['path']);
        }

        return true;
    }


}



/**
 * @member {module:model/PatchOperationType} operation
 */
PatchOperation.prototype['operation'] = undefined;

/**
 * @member {module:model/PatchOperationPath} path
 */
PatchOperation.prototype['path'] = undefined;

/**
 * @member {Object} value
 */
PatchOperation.prototype['value'] = undefined;






export default PatchOperation;

