/**
 * Kestra EE
 * All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import QueryFilterField from './QueryFilterField';
import QueryFilterOp from './QueryFilterOp';

/**
 * The QueryFilter model module.
 * @module model/QueryFilter
 * @version 1.0.0
 */
class QueryFilter {
    /**
     * Constructs a new <code>QueryFilter</code>.
     * @alias module:model/QueryFilter
     * @param field {module:model/QueryFilterField} 
     * @param operation {module:model/QueryFilterOp} 
     * @param value {Object} 
     */
    constructor(field, operation, value) { 
        
        QueryFilter.initialize(this, field, operation, value);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, field, operation, value) { 
        obj['field'] = field;
        obj['operation'] = operation;
        obj['value'] = value;
    }

    /**
     * Constructs a <code>QueryFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QueryFilter} obj Optional instance to populate.
     * @return {module:model/QueryFilter} The populated <code>QueryFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QueryFilter();

            if (data.hasOwnProperty('field')) {
                obj['field'] = QueryFilterField.constructFromObject(data['field']);
            }
            if (data.hasOwnProperty('operation')) {
                obj['operation'] = QueryFilterOp.constructFromObject(data['operation']);
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QueryFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QueryFilter</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of QueryFilter.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

QueryFilter.RequiredProperties = ["field", "operation", "value"];

/**
 * @member {module:model/QueryFilterField} field
 */
QueryFilter.prototype['field'] = undefined;

/**
 * @member {module:model/QueryFilterOp} operation
 */
QueryFilter.prototype['operation'] = undefined;

/**
 * @member {Object} value
 */
QueryFilter.prototype['value'] = undefined;






export default QueryFilter;

