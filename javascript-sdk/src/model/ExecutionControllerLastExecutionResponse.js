/**
 * Kestra EE
 * All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StateType from './StateType';

/**
 * The ExecutionControllerLastExecutionResponse model module.
 * @module model/ExecutionControllerLastExecutionResponse
 * @version 1.0.0
 */
class ExecutionControllerLastExecutionResponse {
    /**
     * Constructs a new <code>ExecutionControllerLastExecutionResponse</code>.
     * @alias module:model/ExecutionControllerLastExecutionResponse
     * @param id {String} 
     * @param flowId {String} 
     * @param namespace {String} 
     * @param startDate {Date} 
     * @param status {module:model/StateType} 
     */
    constructor(id, flowId, namespace, startDate, status) { 
        
        ExecutionControllerLastExecutionResponse.initialize(this, id, flowId, namespace, startDate, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, flowId, namespace, startDate, status) { 
        obj['id'] = id;
        obj['flowId'] = flowId;
        obj['namespace'] = namespace;
        obj['startDate'] = startDate;
        obj['status'] = status;
    }

    /**
     * Constructs a <code>ExecutionControllerLastExecutionResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExecutionControllerLastExecutionResponse} obj Optional instance to populate.
     * @return {module:model/ExecutionControllerLastExecutionResponse} The populated <code>ExecutionControllerLastExecutionResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExecutionControllerLastExecutionResponse();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('flowId')) {
                obj['flowId'] = ApiClient.convertToType(data['flowId'], 'String');
            }
            if (data.hasOwnProperty('namespace')) {
                obj['namespace'] = ApiClient.convertToType(data['namespace'], 'String');
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = StateType.constructFromObject(data['status']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExecutionControllerLastExecutionResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExecutionControllerLastExecutionResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ExecutionControllerLastExecutionResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['flowId'] && !(typeof data['flowId'] === 'string' || data['flowId'] instanceof String)) {
            throw new Error("Expected the field `flowId` to be a primitive type in the JSON string but got " + data['flowId']);
        }
        // ensure the json data is a string
        if (data['namespace'] && !(typeof data['namespace'] === 'string' || data['namespace'] instanceof String)) {
            throw new Error("Expected the field `namespace` to be a primitive type in the JSON string but got " + data['namespace']);
        }

        return true;
    }


}

ExecutionControllerLastExecutionResponse.RequiredProperties = ["id", "flowId", "namespace", "startDate", "status"];

/**
 * @member {String} id
 */
ExecutionControllerLastExecutionResponse.prototype['id'] = undefined;

/**
 * @member {String} flowId
 */
ExecutionControllerLastExecutionResponse.prototype['flowId'] = undefined;

/**
 * @member {String} namespace
 */
ExecutionControllerLastExecutionResponse.prototype['namespace'] = undefined;

/**
 * @member {Date} startDate
 */
ExecutionControllerLastExecutionResponse.prototype['startDate'] = undefined;

/**
 * @member {module:model/StateType} status
 */
ExecutionControllerLastExecutionResponse.prototype['status'] = undefined;






export default ExecutionControllerLastExecutionResponse;

