/**
 * Kestra EE
 * All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ServerConfigLiveness from './ServerConfigLiveness';
import WorkerTaskRestartStrategy from './WorkerTaskRestartStrategy';

/**
 * The ServerConfig model module.
 * @module model/ServerConfig
 * @version 1.0.0
 */
class ServerConfig {
    /**
     * Constructs a new <code>ServerConfig</code>.
     * @alias module:model/ServerConfig
     * @param terminationGracePeriod {String} 
     * @param liveness {module:model/ServerConfigLiveness} 
     */
    constructor(terminationGracePeriod, liveness) { 
        
        ServerConfig.initialize(this, terminationGracePeriod, liveness);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, terminationGracePeriod, liveness) { 
        obj['terminationGracePeriod'] = terminationGracePeriod || '5m';
        obj['liveness'] = liveness;
    }

    /**
     * Constructs a <code>ServerConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServerConfig} obj Optional instance to populate.
     * @return {module:model/ServerConfig} The populated <code>ServerConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServerConfig();

            if (data.hasOwnProperty('workerTaskRestartStrategy')) {
                obj['workerTaskRestartStrategy'] = ApiClient.convertToType(data['workerTaskRestartStrategy'], WorkerTaskRestartStrategy);
            }
            if (data.hasOwnProperty('terminationGracePeriod')) {
                obj['terminationGracePeriod'] = ApiClient.convertToType(data['terminationGracePeriod'], 'String');
            }
            if (data.hasOwnProperty('liveness')) {
                obj['liveness'] = ServerConfigLiveness.constructFromObject(data['liveness']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServerConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServerConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ServerConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['terminationGracePeriod'] && !(typeof data['terminationGracePeriod'] === 'string' || data['terminationGracePeriod'] instanceof String)) {
            throw new Error("Expected the field `terminationGracePeriod` to be a primitive type in the JSON string but got " + data['terminationGracePeriod']);
        }
        // validate the optional field `liveness`
        if (data['liveness']) { // data not null
          ServerConfigLiveness.validateJSON(data['liveness']);
        }

        return true;
    }


}

ServerConfig.RequiredProperties = ["terminationGracePeriod", "liveness"];

/**
 * @member {module:model/WorkerTaskRestartStrategy} workerTaskRestartStrategy
 */
ServerConfig.prototype['workerTaskRestartStrategy'] = undefined;

/**
 * @member {String} terminationGracePeriod
 * @default '5m'
 */
ServerConfig.prototype['terminationGracePeriod'] = '5m';

/**
 * @member {module:model/ServerConfigLiveness} liveness
 */
ServerConfig.prototype['liveness'] = undefined;






export default ServerConfig;

