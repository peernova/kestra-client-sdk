/**
 * Kestra EE
 * All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ExecutionUsage from './ExecutionUsage';
import FlowUsage from './FlowUsage';
import GroupUsage from './GroupUsage';
import MiscControllerApiUsage from './MiscControllerApiUsage';
import RoleUsage from './RoleUsage';
import TenantUsage from './TenantUsage';
import UserUsage from './UserUsage';

/**
 * The UsageEE model module.
 * @module model/UsageEE
 * @version 1.0.0
 */
class UsageEE {
    /**
     * Constructs a new <code>UsageEE</code>.
     * @alias module:model/UsageEE
     * @implements module:model/MiscControllerApiUsage
     */
    constructor() { 
        MiscControllerApiUsage.initialize(this);
        UsageEE.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UsageEE</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UsageEE} obj Optional instance to populate.
     * @return {module:model/UsageEE} The populated <code>UsageEE</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UsageEE();
            MiscControllerApiUsage.constructFromObject(data, obj);

            if (data.hasOwnProperty('groups')) {
                obj['groups'] = GroupUsage.constructFromObject(data['groups']);
            }
            if (data.hasOwnProperty('users')) {
                obj['users'] = UserUsage.constructFromObject(data['users']);
            }
            if (data.hasOwnProperty('roles')) {
                obj['roles'] = RoleUsage.constructFromObject(data['roles']);
            }
            if (data.hasOwnProperty('tenants')) {
                obj['tenants'] = TenantUsage.constructFromObject(data['tenants']);
            }
            if (data.hasOwnProperty('flows')) {
                obj['flows'] = FlowUsage.constructFromObject(data['flows']);
            }
            if (data.hasOwnProperty('executions')) {
                obj['executions'] = ExecutionUsage.constructFromObject(data['executions']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UsageEE</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UsageEE</code>.
     */
    static validateJSON(data) {
        // validate the optional field `groups`
        if (data['groups']) { // data not null
          GroupUsage.validateJSON(data['groups']);
        }
        // validate the optional field `users`
        if (data['users']) { // data not null
          UserUsage.validateJSON(data['users']);
        }
        // validate the optional field `roles`
        if (data['roles']) { // data not null
          RoleUsage.validateJSON(data['roles']);
        }
        // validate the optional field `tenants`
        if (data['tenants']) { // data not null
          TenantUsage.validateJSON(data['tenants']);
        }
        // validate the optional field `flows`
        if (data['flows']) { // data not null
          FlowUsage.validateJSON(data['flows']);
        }
        // validate the optional field `executions`
        if (data['executions']) { // data not null
          ExecutionUsage.validateJSON(data['executions']);
        }

        return true;
    }


}



/**
 * @member {module:model/GroupUsage} groups
 */
UsageEE.prototype['groups'] = undefined;

/**
 * @member {module:model/UserUsage} users
 */
UsageEE.prototype['users'] = undefined;

/**
 * @member {module:model/RoleUsage} roles
 */
UsageEE.prototype['roles'] = undefined;

/**
 * @member {module:model/TenantUsage} tenants
 */
UsageEE.prototype['tenants'] = undefined;

/**
 * @member {module:model/FlowUsage} flows
 */
UsageEE.prototype['flows'] = undefined;

/**
 * @member {module:model/ExecutionUsage} executions
 */
UsageEE.prototype['executions'] = undefined;


// Implement MiscControllerApiUsage interface:
/**
 * @member {module:model/FlowUsage} flows
 */
MiscControllerApiUsage.prototype['flows'] = undefined;
/**
 * @member {module:model/ExecutionUsage} executions
 */
MiscControllerApiUsage.prototype['executions'] = undefined;




export default UsageEE;

