/**
 * Kestra EE
 * All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Relation from './Relation';

/**
 * The FlowGraphEdge model module.
 * @module model/FlowGraphEdge
 * @version 1.0.0
 */
class FlowGraphEdge {
    /**
     * Constructs a new <code>FlowGraphEdge</code>.
     * @alias module:model/FlowGraphEdge
     * @param source {String} 
     * @param target {String} 
     * @param relation {module:model/Relation} 
     */
    constructor(source, target, relation) { 
        
        FlowGraphEdge.initialize(this, source, target, relation);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, source, target, relation) { 
        obj['source'] = source;
        obj['target'] = target;
        obj['relation'] = relation;
    }

    /**
     * Constructs a <code>FlowGraphEdge</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FlowGraphEdge} obj Optional instance to populate.
     * @return {module:model/FlowGraphEdge} The populated <code>FlowGraphEdge</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FlowGraphEdge();

            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
            if (data.hasOwnProperty('target')) {
                obj['target'] = ApiClient.convertToType(data['target'], 'String');
            }
            if (data.hasOwnProperty('relation')) {
                obj['relation'] = Relation.constructFromObject(data['relation']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FlowGraphEdge</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FlowGraphEdge</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FlowGraphEdge.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['source'] && !(typeof data['source'] === 'string' || data['source'] instanceof String)) {
            throw new Error("Expected the field `source` to be a primitive type in the JSON string but got " + data['source']);
        }
        // ensure the json data is a string
        if (data['target'] && !(typeof data['target'] === 'string' || data['target'] instanceof String)) {
            throw new Error("Expected the field `target` to be a primitive type in the JSON string but got " + data['target']);
        }
        // validate the optional field `relation`
        if (data['relation']) { // data not null
          Relation.validateJSON(data['relation']);
        }

        return true;
    }


}

FlowGraphEdge.RequiredProperties = ["source", "target", "relation"];

/**
 * @member {String} source
 */
FlowGraphEdge.prototype['source'] = undefined;

/**
 * @member {String} target
 */
FlowGraphEdge.prototype['target'] = undefined;

/**
 * @member {module:model/Relation} relation
 */
FlowGraphEdge.prototype['relation'] = undefined;






export default FlowGraphEdge;

