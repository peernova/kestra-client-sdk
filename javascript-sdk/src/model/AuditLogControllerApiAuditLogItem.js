/**
 * Kestra EE
 * All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiUser from './ApiUser';
import AuditLog from './AuditLog';

/**
 * The AuditLogControllerApiAuditLogItem model module.
 * @module model/AuditLogControllerApiAuditLogItem
 * @version 1.0.0
 */
class AuditLogControllerApiAuditLogItem {
    /**
     * Constructs a new <code>AuditLogControllerApiAuditLogItem</code>.
     * @alias module:model/AuditLogControllerApiAuditLogItem
     * @param auditLog {module:model/AuditLog} 
     * @param user {module:model/ApiUser} 
     */
    constructor(auditLog, user) { 
        
        AuditLogControllerApiAuditLogItem.initialize(this, auditLog, user);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, auditLog, user) { 
        obj['auditLog'] = auditLog;
        obj['user'] = user;
    }

    /**
     * Constructs a <code>AuditLogControllerApiAuditLogItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AuditLogControllerApiAuditLogItem} obj Optional instance to populate.
     * @return {module:model/AuditLogControllerApiAuditLogItem} The populated <code>AuditLogControllerApiAuditLogItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AuditLogControllerApiAuditLogItem();

            if (data.hasOwnProperty('auditLog')) {
                obj['auditLog'] = AuditLog.constructFromObject(data['auditLog']);
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = ApiUser.constructFromObject(data['user']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AuditLogControllerApiAuditLogItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AuditLogControllerApiAuditLogItem</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AuditLogControllerApiAuditLogItem.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `auditLog`
        if (data['auditLog']) { // data not null
          AuditLog.validateJSON(data['auditLog']);
        }
        // validate the optional field `user`
        if (data['user']) { // data not null
          ApiUser.validateJSON(data['user']);
        }

        return true;
    }


}

AuditLogControllerApiAuditLogItem.RequiredProperties = ["auditLog", "user"];

/**
 * @member {module:model/AuditLog} auditLog
 */
AuditLogControllerApiAuditLogItem.prototype['auditLog'] = undefined;

/**
 * @member {module:model/ApiUser} user
 */
AuditLogControllerApiAuditLogItem.prototype['user'] = undefined;






export default AuditLogControllerApiAuditLogItem;

