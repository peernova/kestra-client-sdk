/**
 * Kestra EE
 * All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UserUsage model module.
 * @module model/UserUsage
 * @version 1.0.0
 */
class UserUsage {
    /**
     * Constructs a new <code>UserUsage</code>.
     * @alias module:model/UserUsage
     * @param count {Number} 
     * @param apiKeyCount {Number} 
     * @param oidcCount {Number} 
     * @param basicAuthCount {Number} 
     */
    constructor(count, apiKeyCount, oidcCount, basicAuthCount) { 
        
        UserUsage.initialize(this, count, apiKeyCount, oidcCount, basicAuthCount);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, count, apiKeyCount, oidcCount, basicAuthCount) { 
        obj['count'] = count;
        obj['apiKeyCount'] = apiKeyCount;
        obj['oidcCount'] = oidcCount;
        obj['basicAuthCount'] = basicAuthCount;
    }

    /**
     * Constructs a <code>UserUsage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserUsage} obj Optional instance to populate.
     * @return {module:model/UserUsage} The populated <code>UserUsage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserUsage();

            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('apiKeyCount')) {
                obj['apiKeyCount'] = ApiClient.convertToType(data['apiKeyCount'], 'Number');
            }
            if (data.hasOwnProperty('oidcCount')) {
                obj['oidcCount'] = ApiClient.convertToType(data['oidcCount'], 'Number');
            }
            if (data.hasOwnProperty('basicAuthCount')) {
                obj['basicAuthCount'] = ApiClient.convertToType(data['basicAuthCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserUsage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserUsage</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UserUsage.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

UserUsage.RequiredProperties = ["count", "apiKeyCount", "oidcCount", "basicAuthCount"];

/**
 * @member {Number} count
 */
UserUsage.prototype['count'] = undefined;

/**
 * @member {Number} apiKeyCount
 */
UserUsage.prototype['apiKeyCount'] = undefined;

/**
 * @member {Number} oidcCount
 */
UserUsage.prototype['oidcCount'] = undefined;

/**
 * @member {Number} basicAuthCount
 */
UserUsage.prototype['basicAuthCount'] = undefined;






export default UserUsage;

