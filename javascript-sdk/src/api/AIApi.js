/**
 * Kestra EE
 * All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import FlowGenerationPrompt from '../model/FlowGenerationPrompt';

/**
* AI service.
* @module api/AIApi
* @version 1.0.0
*/
export default class AIApi {

    /**
    * Constructs a new AIApi. 
    * @alias module:api/AIApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the generateFlow operation.
     * @callback module:api/AIApi~generateFlowCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate or regenerate a flow based on a prompt
     * @param {String} tenant 
     * @param {module:model/FlowGenerationPrompt} flowGenerationPrompt Prompt and context required for flow generation
     * @param {module:api/AIApi~generateFlowCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    generateFlow(tenant, flowGenerationPrompt, callback) {
      let postBody = flowGenerationPrompt;
      // verify the required parameter 'tenant' is set
      if (tenant === undefined || tenant === null) {
        throw new Error("Missing the required parameter 'tenant' when calling generateFlow");
      }
      // verify the required parameter 'flowGenerationPrompt' is set
      if (flowGenerationPrompt === undefined || flowGenerationPrompt === null) {
        throw new Error("Missing the required parameter 'flowGenerationPrompt' when calling generateFlow");
      }

      let pathParams = {
        'tenant': tenant
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/yaml'];
      let returnType = 'String';
      return this.apiClient.callApi(
        '/api/v1/{tenant}/ai/generate/flow', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
