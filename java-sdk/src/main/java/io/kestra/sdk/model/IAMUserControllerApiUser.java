/*
 * Kestra EE
 * All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kestra.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.kestra.sdk.model.ApiTenantSummary;
import io.kestra.sdk.model.IAMUserControllerApiGroup;
import io.kestra.sdk.model.IAMUserControllerApiUserAuth;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * IAMUserControllerApiUser
 */
@JsonPropertyOrder({
  IAMUserControllerApiUser.JSON_PROPERTY_ID,
  IAMUserControllerApiUser.JSON_PROPERTY_USERNAME,
  IAMUserControllerApiUser.JSON_PROPERTY_DISPLAY_NAME,
  IAMUserControllerApiUser.JSON_PROPERTY_FIRST_NAME,
  IAMUserControllerApiUser.JSON_PROPERTY_LAST_NAME,
  IAMUserControllerApiUser.JSON_PROPERTY_EMAIL,
  IAMUserControllerApiUser.JSON_PROPERTY_TENANTS,
  IAMUserControllerApiUser.JSON_PROPERTY_AUTHS,
  IAMUserControllerApiUser.JSON_PROPERTY_GROUPS,
  IAMUserControllerApiUser.JSON_PROPERTY_SUPER_ADMIN,
  IAMUserControllerApiUser.JSON_PROPERTY_RESTRICTED
})
@JsonTypeName("IAMUserController.ApiUser")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.16.0-SNAPSHOT")
public class IAMUserControllerApiUser {
  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nonnull
  private String id;

  public static final String JSON_PROPERTY_USERNAME = "username";
  @javax.annotation.Nonnull
  private String username;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  @javax.annotation.Nonnull
  private String displayName;

  public static final String JSON_PROPERTY_FIRST_NAME = "firstName";
  @javax.annotation.Nonnull
  private String firstName;

  public static final String JSON_PROPERTY_LAST_NAME = "lastName";
  @javax.annotation.Nonnull
  private String lastName;

  public static final String JSON_PROPERTY_EMAIL = "email";
  @javax.annotation.Nonnull
  private String email;

  public static final String JSON_PROPERTY_TENANTS = "tenants";
  @javax.annotation.Nonnull
  private List<ApiTenantSummary> tenants = new ArrayList<>();

  public static final String JSON_PROPERTY_AUTHS = "auths";
  @javax.annotation.Nonnull
  private List<IAMUserControllerApiUserAuth> auths = new ArrayList<>();

  public static final String JSON_PROPERTY_GROUPS = "groups";
  @javax.annotation.Nonnull
  private List<IAMUserControllerApiGroup> groups = new ArrayList<>();

  public static final String JSON_PROPERTY_SUPER_ADMIN = "superAdmin";
  @javax.annotation.Nonnull
  private Boolean superAdmin;

  public static final String JSON_PROPERTY_RESTRICTED = "restricted";
  @javax.annotation.Nonnull
  private Boolean restricted;

  public IAMUserControllerApiUser() {
  }

  public IAMUserControllerApiUser id(@javax.annotation.Nonnull String id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@javax.annotation.Nonnull String id) {
    this.id = id;
  }

  public IAMUserControllerApiUser username(@javax.annotation.Nonnull String username) {
    
    this.username = username;
    return this;
  }

  /**
   * Get username
   * @return username
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUsername() {
    return username;
  }


  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUsername(@javax.annotation.Nonnull String username) {
    this.username = username;
  }

  public IAMUserControllerApiUser displayName(@javax.annotation.Nonnull String displayName) {
    
    this.displayName = displayName;
    return this;
  }

  /**
   * Get displayName
   * @return displayName
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDisplayName(@javax.annotation.Nonnull String displayName) {
    this.displayName = displayName;
  }

  public IAMUserControllerApiUser firstName(@javax.annotation.Nonnull String firstName) {
    
    this.firstName = firstName;
    return this;
  }

  /**
   * Get firstName
   * @return firstName
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFirstName() {
    return firstName;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFirstName(@javax.annotation.Nonnull String firstName) {
    this.firstName = firstName;
  }

  public IAMUserControllerApiUser lastName(@javax.annotation.Nonnull String lastName) {
    
    this.lastName = lastName;
    return this;
  }

  /**
   * Get lastName
   * @return lastName
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLastName() {
    return lastName;
  }


  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLastName(@javax.annotation.Nonnull String lastName) {
    this.lastName = lastName;
  }

  public IAMUserControllerApiUser email(@javax.annotation.Nonnull String email) {
    
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmail(@javax.annotation.Nonnull String email) {
    this.email = email;
  }

  public IAMUserControllerApiUser tenants(@javax.annotation.Nonnull List<ApiTenantSummary> tenants) {
    
    this.tenants = tenants;
    return this;
  }

  public IAMUserControllerApiUser addTenantsItem(ApiTenantSummary tenantsItem) {
    if (this.tenants == null) {
      this.tenants = new ArrayList<>();
    }
    this.tenants.add(tenantsItem);
    return this;
  }

  /**
   * Get tenants
   * @return tenants
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TENANTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ApiTenantSummary> getTenants() {
    return tenants;
  }


  @JsonProperty(JSON_PROPERTY_TENANTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTenants(@javax.annotation.Nonnull List<ApiTenantSummary> tenants) {
    this.tenants = tenants;
  }

  public IAMUserControllerApiUser auths(@javax.annotation.Nonnull List<IAMUserControllerApiUserAuth> auths) {
    
    this.auths = auths;
    return this;
  }

  public IAMUserControllerApiUser addAuthsItem(IAMUserControllerApiUserAuth authsItem) {
    if (this.auths == null) {
      this.auths = new ArrayList<>();
    }
    this.auths.add(authsItem);
    return this;
  }

  /**
   * Get auths
   * @return auths
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AUTHS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<IAMUserControllerApiUserAuth> getAuths() {
    return auths;
  }


  @JsonProperty(JSON_PROPERTY_AUTHS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAuths(@javax.annotation.Nonnull List<IAMUserControllerApiUserAuth> auths) {
    this.auths = auths;
  }

  public IAMUserControllerApiUser groups(@javax.annotation.Nonnull List<IAMUserControllerApiGroup> groups) {
    
    this.groups = groups;
    return this;
  }

  public IAMUserControllerApiUser addGroupsItem(IAMUserControllerApiGroup groupsItem) {
    if (this.groups == null) {
      this.groups = new ArrayList<>();
    }
    this.groups.add(groupsItem);
    return this;
  }

  /**
   * Get groups
   * @return groups
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<IAMUserControllerApiGroup> getGroups() {
    return groups;
  }


  @JsonProperty(JSON_PROPERTY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGroups(@javax.annotation.Nonnull List<IAMUserControllerApiGroup> groups) {
    this.groups = groups;
  }

  public IAMUserControllerApiUser superAdmin(@javax.annotation.Nonnull Boolean superAdmin) {
    
    this.superAdmin = superAdmin;
    return this;
  }

  /**
   * Get superAdmin
   * @return superAdmin
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SUPER_ADMIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getSuperAdmin() {
    return superAdmin;
  }


  @JsonProperty(JSON_PROPERTY_SUPER_ADMIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSuperAdmin(@javax.annotation.Nonnull Boolean superAdmin) {
    this.superAdmin = superAdmin;
  }

  public IAMUserControllerApiUser restricted(@javax.annotation.Nonnull Boolean restricted) {
    
    this.restricted = restricted;
    return this;
  }

  /**
   * Get restricted
   * @return restricted
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RESTRICTED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getRestricted() {
    return restricted;
  }


  @JsonProperty(JSON_PROPERTY_RESTRICTED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRestricted(@javax.annotation.Nonnull Boolean restricted) {
    this.restricted = restricted;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IAMUserControllerApiUser iaMUserControllerApiUser = (IAMUserControllerApiUser) o;
    return Objects.equals(this.id, iaMUserControllerApiUser.id) &&
        Objects.equals(this.username, iaMUserControllerApiUser.username) &&
        Objects.equals(this.displayName, iaMUserControllerApiUser.displayName) &&
        Objects.equals(this.firstName, iaMUserControllerApiUser.firstName) &&
        Objects.equals(this.lastName, iaMUserControllerApiUser.lastName) &&
        Objects.equals(this.email, iaMUserControllerApiUser.email) &&
        Objects.equals(this.tenants, iaMUserControllerApiUser.tenants) &&
        Objects.equals(this.auths, iaMUserControllerApiUser.auths) &&
        Objects.equals(this.groups, iaMUserControllerApiUser.groups) &&
        Objects.equals(this.superAdmin, iaMUserControllerApiUser.superAdmin) &&
        Objects.equals(this.restricted, iaMUserControllerApiUser.restricted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, username, displayName, firstName, lastName, email, tenants, auths, groups, superAdmin, restricted);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IAMUserControllerApiUser {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    tenants: ").append(toIndentedString(tenants)).append("\n");
    sb.append("    auths: ").append(toIndentedString(auths)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    superAdmin: ").append(toIndentedString(superAdmin)).append("\n");
    sb.append("    restricted: ").append(toIndentedString(restricted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

