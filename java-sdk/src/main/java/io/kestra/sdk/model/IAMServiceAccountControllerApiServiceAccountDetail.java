/*
 * Kestra EE
 * All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kestra.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.kestra.sdk.model.ApiTenantSummary;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * A User Service Account.
 */
@JsonPropertyOrder({
  IAMServiceAccountControllerApiServiceAccountDetail.JSON_PROPERTY_ID,
  IAMServiceAccountControllerApiServiceAccountDetail.JSON_PROPERTY_NAME,
  IAMServiceAccountControllerApiServiceAccountDetail.JSON_PROPERTY_DESCRIPTION,
  IAMServiceAccountControllerApiServiceAccountDetail.JSON_PROPERTY_TENANTS,
  IAMServiceAccountControllerApiServiceAccountDetail.JSON_PROPERTY_SUPER_ADMIN
})
@JsonTypeName("IAMServiceAccountController.ApiServiceAccountDetail")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.16.0-SNAPSHOT")
public class IAMServiceAccountControllerApiServiceAccountDetail {
  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nonnull
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  @javax.annotation.Nonnull
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @javax.annotation.Nonnull
  private String description;

  public static final String JSON_PROPERTY_TENANTS = "tenants";
  @javax.annotation.Nonnull
  private List<ApiTenantSummary> tenants = new ArrayList<>();

  public static final String JSON_PROPERTY_SUPER_ADMIN = "superAdmin";
  @javax.annotation.Nonnull
  private Boolean superAdmin;

  public IAMServiceAccountControllerApiServiceAccountDetail() {
  }

  public IAMServiceAccountControllerApiServiceAccountDetail id(@javax.annotation.Nonnull String id) {
    
    this.id = id;
    return this;
  }

  /**
   * the identifier of this service account.
   * @return id
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@javax.annotation.Nonnull String id) {
    this.id = id;
  }

  public IAMServiceAccountControllerApiServiceAccountDetail name(@javax.annotation.Nonnull String name) {
    
    this.name = name;
    return this;
  }

  /**
   * the name of this service account.
   * @return name
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(@javax.annotation.Nonnull String name) {
    this.name = name;
  }

  public IAMServiceAccountControllerApiServiceAccountDetail description(@javax.annotation.Nonnull String description) {
    
    this.description = description;
    return this;
  }

  /**
   * the description of this service account.
   * @return description
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(@javax.annotation.Nonnull String description) {
    this.description = description;
  }

  public IAMServiceAccountControllerApiServiceAccountDetail tenants(@javax.annotation.Nonnull List<ApiTenantSummary> tenants) {
    
    this.tenants = tenants;
    return this;
  }

  public IAMServiceAccountControllerApiServiceAccountDetail addTenantsItem(ApiTenantSummary tenantsItem) {
    if (this.tenants == null) {
      this.tenants = new ArrayList<>();
    }
    this.tenants.add(tenantsItem);
    return this;
  }

  /**
   * Get tenants
   * @return tenants
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TENANTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ApiTenantSummary> getTenants() {
    return tenants;
  }


  @JsonProperty(JSON_PROPERTY_TENANTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTenants(@javax.annotation.Nonnull List<ApiTenantSummary> tenants) {
    this.tenants = tenants;
  }

  public IAMServiceAccountControllerApiServiceAccountDetail superAdmin(@javax.annotation.Nonnull Boolean superAdmin) {
    
    this.superAdmin = superAdmin;
    return this;
  }

  /**
   * Get superAdmin
   * @return superAdmin
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SUPER_ADMIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getSuperAdmin() {
    return superAdmin;
  }


  @JsonProperty(JSON_PROPERTY_SUPER_ADMIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSuperAdmin(@javax.annotation.Nonnull Boolean superAdmin) {
    this.superAdmin = superAdmin;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IAMServiceAccountControllerApiServiceAccountDetail iaMServiceAccountControllerApiServiceAccountDetail = (IAMServiceAccountControllerApiServiceAccountDetail) o;
    return Objects.equals(this.id, iaMServiceAccountControllerApiServiceAccountDetail.id) &&
        Objects.equals(this.name, iaMServiceAccountControllerApiServiceAccountDetail.name) &&
        Objects.equals(this.description, iaMServiceAccountControllerApiServiceAccountDetail.description) &&
        Objects.equals(this.tenants, iaMServiceAccountControllerApiServiceAccountDetail.tenants) &&
        Objects.equals(this.superAdmin, iaMServiceAccountControllerApiServiceAccountDetail.superAdmin);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, tenants, superAdmin);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IAMServiceAccountControllerApiServiceAccountDetail {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    tenants: ").append(toIndentedString(tenants)).append("\n");
    sb.append("    superAdmin: ").append(toIndentedString(superAdmin)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

