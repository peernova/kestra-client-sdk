plugins {
    id "com.vanniktech.maven.publish" version "0.33.0"
    id 'java-library'
    id "idea"
    id 'jacoco'
    id "com.adarshr.test-logger" version "4.0.0"

    id 'signing'

    id "com.github.ben-manes.versions" version "0.51.0"
    id 'net.researchgate.release' version '3.1.0'
}

group 'io.kestra'
description 'Kestra SDK to interact with the API through Java.'

def isBuildSnapshot = version.toString().endsWith("-SNAPSHOT")

repositories {
    mavenLocal()
    mavenCentral()
    if (isBuildSnapshot) {
        maven { url "https://s01.oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://central.sonatype.com/repository/maven-snapshots/" }
    }
}


tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs.add("-parameters")
}

// force the version for testing
allprojects {
    if (gradle.startParameter.projectProperties.containsKey('ciVersionOverride')) {
        version = gradle.startParameter.projectProperties['ciVersionOverride']
    }
}

/**********************************************************************************************************************\
 * Publish
 **********************************************************************************************************************/
mavenPublishing {
    // Only sign for real releases (skip when doing CI-local publishes)
    if (!project.hasProperty('ciVersionOverride')) {
        publishToMavenCentral(true)
        signAllPublications()
    }
    coordinates("${project.group}", "${project.name}", "${project.version}")
    pom {
        name = "${project.name}"
        description = "${project.group}:${project.name}:${project.version}"
        url = "https://github.com/kestra-io/${project.name}"
        licenses {
            license {
                name = 'The Apache License, Version 2.0'
                url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            }
        }
        developers {
            developer {
                id = 'tchiotludo'
                name = 'Dehon'
                email = 'ldehon@kestra.io'
            }
        }
        scm {
            connection = 'scm:git:'
            url = "https://github.com/kestra-io/${project.name}"
        }
    }
}

tasks.withType(GenerateModuleMetadata).configureEach {
    // Suppression this validation error as we want to enforce the Kestra platform
    suppressedValidationErrors.add('enforced-platform')
}


jar {
    manifest {
        attributes(
            "X-Kestra-Name": project.name,
            "X-Kestra-Title": "Kestra SDK",
            "X-Kestra-Group": project.group,
            "X-Kestra-Description": project.description,
            "X-Kestra-Version": project.version
        )
    }
}

ext {
    swagger_annotations_version = "1.6.6"
    swagger_v3_annotations_version = "2.2.1"
    jackson_version = "2.17.1"
    jackson_databind_version = "2.17.1"
    jackson_databind_nullable_version = "0.2.6"
    jakarta_annotation_version = "1.3.5"
    httpclient_version = "5.1.3"
    jodatime_version = "2.9.9"
    junit_version = "4.13.2"
    slf4j = "2.0.17"
    lombok = "1.18.38"
}

dependencies {
    implementation "io.swagger:swagger-annotations:$swagger_annotations_version"
    implementation "com.google.code.findbugs:jsr305:3.0.2"
    implementation "org.apache.httpcomponents.client5:httpclient5:$httpclient_version"
    implementation "com.fasterxml.jackson.core:jackson-core:$jackson_version"
    implementation "com.fasterxml.jackson.core:jackson-annotations:$jackson_version"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jackson_databind_version"
    implementation "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:$jackson_version"
    implementation "org.openapitools:jackson-databind-nullable:$jackson_databind_nullable_version"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version"
    implementation "jakarta.annotation:jakarta.annotation-api:$jakarta_annotation_version"
    testImplementation "junit:junit:$junit_version"
    implementation "io.swagger.core.v3:swagger-annotations:$swagger_v3_annotations_version"

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation("org.slf4j:slf4j-api:2.0.17")

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

}

configurations.all {
    resolutionStrategy {
        force("org.slf4j:slf4j-api:2.0.17")
    }
}
