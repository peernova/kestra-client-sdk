openapi: 3.0.1
info:
  description: |-
    All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/>
    Endpoints designated as Superadmin-only are not tenant-scoped.
  title: Kestra EE
  version: v1
servers:
- url: /
tags:
- description: Flows api
  name: Flows
- description: Templates api
  name: Templates
- description: Executions api
  name: Executions
- description: Logs api
  name: Logs
- description: Namespaces api
  name: Namespaces
- description: Users api
  name: Users
- description: Groups api
  name: Groups
- description: Bindings api
  name: Bindings
- description: Roles api
  name: Roles
- description: Audit Logs api
  name: Audit Logs
- description: Auth api
  name: Auths
- description: Stats api
  name: Stats
- description: Tenants api
  name: Tenants
- description: Misc api
  name: Misc
paths:
  /api/v1/auditlogs/search:
    get:
      operationId: searchAuditLogsForAllTenants
      parameters:
      - description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: false
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: false
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: false
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: A namespace filter
        explode: false
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: false
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: An execution filter
        explode: false
        in: query
        name: executionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A user id filter
        explode: false
        in: query
        name: userId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A id filter
        explode: false
        in: query
        name: id
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A resource filter
        explode: false
        in: query
        name: resource
        required: false
        schema:
          allOf:
          - $ref: "#/components/schemas/ResourceType_1"
          nullable: true
        style: form
      - description: The start datetime
        explode: false
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: false
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A list of auditLog details
        explode: false
        in: query
        name: details
        required: false
        schema:
          additionalProperties:
            type: string
          nullable: true
          type: object
        style: form
      - description: The event that create the audit log
        explode: false
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: "#/components/schemas/CrudEventType"
          nullable: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_AuditLogController.ApiAuditLogItem_"
          description: searchAuditLogsForAllTenants 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: "Search for audit logs across all tenants, required to be SuperAdmin"
      tags:
      - Audit Logs
      x-accepts:
      - application/json
  /api/v1/auditlogs/{id}/diff:
    get:
      description: Retrieves the diff between the current version and a selected previous
        version of a given resource based on audit logs.
      operationId: getGlobalResourceDiffFromAuditLog
      parameters:
      - description: The id of the audit log
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The id of a previous audit log to compare with
        explode: false
        in: query
        name: previousId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuditLogController.AuditLogDiff"
          description: getGlobalResourceDiffFromAuditLog 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Retrieve the diff between audit logs from global resource like users
      tags:
      - Audit Logs
      x-accepts:
      - application/json
  /api/v1/auths:
    get:
      operationId: index
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthController.Auth"
          description: index 200 response
      summary: Retrieve list of authentication methods
      tags:
      - Auths
      x-accepts:
      - application/json
  /api/v1/banners:
    post:
      description: Superadmin-only. Creates a global announcement banner visible to
        all tenants.
      operationId: createBanner
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Banner"
        description: The announcement banner to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Banner"
          description: createBanner 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Create an announcement banner
      tags:
      - Banners
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/banners/search:
    get:
      description: Superadmin-only. Returns all global announcement banners.
      operationId: searchBanners
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Banner"
                type: array
          description: searchBanners 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Retrieve all announcement banners
      tags:
      - Banners
      x-accepts:
      - application/json
  /api/v1/banners/{id}:
    delete:
      description: Superadmin-only. Deletes a global announcement banner by its ID.
      operationId: deleteBanner
      parameters:
      - description: The banner id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: deleteBanner 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Delete an announcement banner
      tags:
      - Banners
      x-accepts:
      - application/json
    put:
      description: Superadmin-only. Updates a global announcement banner by its ID.
      operationId: updateBanner
      parameters:
      - description: The banner id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Banner"
        description: The banner to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Banner"
          description: updateBanner 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Update an announcement banner
      tags:
      - Banners
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/basicAuthValidationErrors:
    get:
      description: Global endpoint available to all users.
      operationId: getBasicAuthConfigErrors
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: getBasicAuthConfigErrors 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Retrieve the instance configuration.
      tags:
      - Misc
      x-accepts:
      - application/json
  /api/v1/configs:
    get:
      description: Global endpoint available to all users.
      operationId: getConfiguration
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MiscController.EEConfiguration"
          description: getConfiguration 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Retrieve the instance configuration.
      tags:
      - Misc
      x-accepts:
      - application/json
  /api/v1/forgotten-password:
    get:
      description: "Sends an email to reset a password. Note that whatever the username\
        \ is found or not, the response will always be 200 to avoid leaking information."
      operationId: forgottenPassword
      parameters:
      - description: User that has forgotten his password
        explode: false
        in: query
        name: username
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: forgottenPassword 200 response
      summary: Sends an email to reset a password.
      x-accepts:
      - application/json
  /api/v1/instance/maintenance/enter:
    post:
      description: Requires a role with the INFRASTRUCTURE permission (Superadmin-only).
      operationId: enterMaintenance
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: enterMaintenance 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Enter cluster maintenance mode
      tags:
      - Cluster
      - Maintenance
      x-accepts:
      - application/json
  /api/v1/instance/maintenance/exit:
    post:
      description: Requires a role with the INFRASTRUCTURE permission (Superadmin-only).
      operationId: exitMaintenance
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: exitMaintenance 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Exit cluster maintenance mode
      tags:
      - Cluster
      - Maintenance
      x-accepts:
      - application/json
  /api/v1/instance/services/active:
    get:
      description: Requires a role with the INFRASTRUCTURE permission (Superadmin-only).
      operationId: getActiveServices
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceController.ApiActiveServiceList"
          description: getActiveServices 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: List all active services
      tags:
      - Services
      x-accepts:
      - application/json
  /api/v1/instance/services/search:
    get:
      description: Requires a role with the INFRASTRUCTURE permission (Superadmin-only).
      operationId: searchServices
      parameters:
      - description: The current page
        explode: false
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: false
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: false
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The state filter
        explode: false
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: "#/components/schemas/Service.ServiceState"
          nullable: true
          type: array
        style: form
      - description: The server type filter
        explode: false
        in: query
        name: type
        required: false
        schema:
          items:
            $ref: "#/components/schemas/ServiceType"
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_InstanceController.ApiServiceInstance_"
          description: searchServices 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: "Search for a service (e.g. Worker, Executor, etc)"
      tags:
      - Services
      x-accepts:
      - application/json
  /api/v1/instance/services/{id}:
    get:
      description: Requires a role with the INFRASTRUCTURE permission (Superadmin-only).
      operationId: getService
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceInstance"
          description: getService 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Retrieve details of a specific service
      tags:
      - Services
      x-accepts:
      - application/json
  /api/v1/instance/versioned-plugins:
    get:
      description: Superadmin-only. Lists all currently installed plugin artifacts.
        Requires INFRASTRUCTURE permission.
      operationId: listVersionedPlugin
      parameters:
      - description: The current page
        explode: false
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: false
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: false
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The query
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_InstanceController.ApiPluginArtifact_"
          description: listVersionedPlugin 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: List installed plugin artifacts
      tags:
      - Plugins
      x-accepts:
      - application/json
  /api/v1/instance/versioned-plugins/available:
    get:
      description: Superadmin-only. Lists all plugin artifacts available for installation.
        Requires INFRASTRUCTURE permission.
      operationId: listAvailableVersionedPlugins
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: listAvailableVersionedPlugins 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: List available plugin artifacts
      tags:
      - Plugins
      x-accepts:
      - application/json
  /api/v1/instance/versioned-plugins/available/secrets-managers:
    get:
      description: Superadmin-only. Lists all secret managers available for installation.
        Requires INFRASTRUCTURE permission.
      operationId: listAvailableVersionedPluginsForSecretManager
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: listAvailableVersionedPluginsForSecretManager 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: List available plugin artifacts for Kestra Secret Manager
      tags:
      - Plugins
      x-accepts:
      - application/json
  /api/v1/instance/versioned-plugins/available/storages:
    get:
      description: Superadmin-only. Lists all internal storages available for installation.
        Requires INFRASTRUCTURE permission.
      operationId: listAvailableVersionedPluginsForStorage
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: listAvailableVersionedPluginsForStorage 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: List available plugin artifacts for Kestra Internal Storage
      tags:
      - Plugins
      x-accepts:
      - application/json
  /api/v1/instance/versioned-plugins/install:
    post:
      description: Superadmin-only. Installs one or more plugin artifacts. Requires
        INFRASTRUCTURE permission.
      operationId: installVersionedPlugins
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstanceController.ApiPluginListRequest"
        description: List of plugins
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceController.ApiPluginArtifactList_PluginArtifact_"
          description: installVersionedPlugins 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Install specified plugin artifacts
      tags:
      - Plugins
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/instance/versioned-plugins/resolve:
    post:
      description: Superadmin-only. Resolves compatible versions for a list of plugin
        artifacts. Requires INFRASTRUCTURE permission.
      operationId: resolveVersionedPlugins
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstanceController.ApiPluginListRequest"
        description: List of plugins
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceController.ApiPluginArtifactList_PluginResolutionResult_"
          description: resolveVersionedPlugins 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Resolve versions for specified plugin artifacts
      tags:
      - Plugins
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/instance/versioned-plugins/uninstall:
    delete:
      description: Superadmin-only. Uninstalls one or more plugin artifacts. Requires
        INFRASTRUCTURE permission.
      operationId: uninstallVersionedPlugins
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstanceController.ApiPluginListRequest"
        description: List of plugins
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceController.ApiPluginArtifactList_PluginArtifact_"
          description: uninstallVersionedPlugins 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Uninstall plugin artifacts
      tags:
      - Plugins
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/instance/versioned-plugins/upload:
    post:
      description: Superadmin-only. Uploads a plugin JAR file for installation. Requires
        INFRASTRUCTURE permission.
      operationId: uploadVersionedPlugins
      requestBody:
        content:
          multipart/form-data:
            encoding:
              file:
                contentType: application/octet-stream
                explode: false
                style: form
            schema:
              $ref: "#/components/schemas/uploadVersionedPlugins_request"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PluginArtifact"
          description: uploadVersionedPlugins 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Upload a plugin artifact JAR file
      tags:
      - Plugins
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/instance/versioned-plugins/{groupId}/{artifactId}:
    get:
      description: Superadmin-only. Retrieves metadata and available versions for
        a given plugin artifact. Requires INFRASTRUCTURE permission.
      operationId: getVersionedPluginDetails
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: artifactId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceController.ApiPluginVersions"
          description: getVersionedPluginDetails 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Retrieve details of a plugin artifact
      tags:
      - Plugins
      x-accepts:
      - application/json
  /api/v1/instance/versioned-plugins/{groupId}/{artifactId}/{version}:
    get:
      description: Superadmin-only. Retrieves metadata for a specific version of a
        plugin artifact. Requires INFRASTRUCTURE permission.
      operationId: getVersionedPluginDetailsFromVersion
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: artifactId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceController.ApiPluginVersionDetails"
          description: getVersionedPluginDetailsFromVersion 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Retrieve details of a specific plugin artifact version
      tags:
      - Plugins
      x-accepts:
      - application/json
  /api/v1/instance/workergroups:
    get:
      description: Requires a role with the INFRASTRUCTURE permission (Superadmin-only).
      operationId: listWorkerGroups
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceController.ApiWorkerGroupList"
          description: listWorkerGroups 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: List all worker groups
      tags:
      - WorkerGroups
      x-accepts:
      - application/json
    post:
      description: Requires a role with the INFRASTRUCTURE permission (Superadmin-only).
      operationId: createWorkerGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstanceController.ApiCreateOrUpdateWorkerGroupRequest"
        description: The worker group definition
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceController.ApiWorkerGroup"
          description: createWorkerGroup 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Create a worker group
      tags:
      - WorkerGroups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/instance/workergroups/{id}:
    delete:
      description: Requires a role with the INFRASTRUCTURE permission (Superadmin-only).
      operationId: deleteWorkerGroupById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: deleteWorkerGroupById 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Delete a worker group
      tags:
      - WorkerGroups
      x-accepts:
      - application/json
    get:
      description: Requires a role with the INFRASTRUCTURE permission (Superadmin-only).
      operationId: getWorkerGroupById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceController.ApiWorkerGroupDetails"
          description: getWorkerGroupById 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Retrieve details of a specific worker group
      tags:
      - WorkerGroups
      x-accepts:
      - application/json
    put:
      description: Requires a role with the INFRASTRUCTURE permission (Superadmin-only).
      operationId: updateWorkerGroupById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstanceController.ApiCreateOrUpdateWorkerGroupRequest"
        description: The worker group definition
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceController.ApiWorkerGroup"
          description: updateWorkerGroupById 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Update a worker group
      tags:
      - WorkerGroups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/invitation/accept/{invitationId}:
    post:
      operationId: acceptInvitation
      parameters:
      - explode: false
        in: path
        name: invitationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: acceptInvitation 200 response
      x-accepts:
      - application/json
  /api/v1/invitation/create/{invitationId}:
    post:
      operationId: createFromInvitation
      parameters:
      - explode: false
        in: path
        name: invitationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthController.InvitationUserRequest"
        description: The basic information to create an account from an invitation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: createFromInvitation 200 response
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/license-info:
    get:
      description: "Global endpoint, available to any authenticated user."
      operationId: licenseInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MiscController.LicenseInfo"
          description: licenseInfo 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Retrieve license information
      tags:
      - Misc
      x-accepts:
      - application/json
  /api/v1/me:
    get:
      description: Requires the ME permission.
      operationId: getCurrentUser
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MeController.ApiMe"
          description: getCurrentUser 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get details about the authenticated user
      tags:
      - Auths
      x-accepts:
      - application/json
    patch:
      description: Updates the authenticated user's profile information and returns
        the updated user.
      operationId: patchCurrentUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MeController.ApiUserDetailsRequest"
        description: The user details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: patchCurrentUser 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Update authenticated user details
      tags:
      - Auths
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/me/api-tokens:
    get:
      description: Returns all API tokens belonging to the authenticated user.
      operationId: listApiTokensForCurrentUser
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: listApiTokensForCurrentUser 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: List API tokens for authenticated user
      tags:
      - Auths
      x-accepts:
      - application/json
    post:
      operationId: createApiTokenForCurrentUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateApiTokenRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: createApiTokenForCurrentUser 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Create API token for the authenticated user
      tags:
      - Auths
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/me/api-tokens/{tokenId}:
    delete:
      operationId: deleteApiTokenForCurrentUser
      parameters:
      - description: The token id
        explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: deleteApiTokenForCurrentUser 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Delete API token for the authenticated user
      tags:
      - Auths
      x-accepts:
      - application/json
  /api/v1/me/invitations:
    get:
      description: Returns all invitations for the authenticated user's email across
        all tenants.
      operationId: findAllInvitationsForCurrentUser
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Invitation"
                type: array
          description: findAllInvitationsForCurrentUser 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: List invitations for the authenticated user
      tags:
      - Invitations
      x-accepts:
      - application/json
  /api/v1/me/password:
    put:
      description: Changes the login password for the authenticated user.
      operationId: updateCurrentUserPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MeController.ApiUpdatePasswordRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: updateCurrentUserPassword 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Update authenticated user password
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/plugins:
    get:
      operationId: listPlugins
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Plugin"
                type: array
          description: listPlugins 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get list of plugins
      tags:
      - Plugins
      x-accepts:
      - application/json
  /api/v1/plugins/groups/subgroups:
    get:
      operationId: getPluginBySubgroups
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Plugin"
                type: array
          description: getPluginBySubgroups 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get plugins group by subgroups
      tags:
      - Plugins
      x-accepts:
      - application/json
  /api/v1/plugins/icons:
    get:
      operationId: getPluginIcons
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: "#/components/schemas/PluginIcon"
                type: object
          description: getPluginIcons 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get plugins icons
      tags:
      - Plugins
      x-accepts:
      - application/json
  /api/v1/plugins/icons/groups:
    get:
      operationId: getPluginGroupIcons
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: "#/components/schemas/PluginIcon"
                type: object
          description: getPluginGroupIcons 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get plugins icons
      tags:
      - Plugins
      x-accepts:
      - application/json
  /api/v1/plugins/inputs:
    get:
      operationId: getAllInputTypes
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/InputType"
                type: array
          description: getAllInputTypes 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get all types for an inputs
      tags:
      - Plugins
      x-accepts:
      - application/json
  /api/v1/plugins/inputs/{type}:
    get:
      description: "The schema will be a [JSON Schema Draft 7](http://json-schema.org/draft-07/schema)"
      operationId: getSchemaFromInputType
      parameters:
      - description: The schema needed
        explode: false
        in: path
        name: type
        required: true
        schema:
          $ref: "#/components/schemas/Type"
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentationWithSchema"
          description: getSchemaFromInputType 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get the JSON schema for an input type
      tags:
      - Plugins
      x-accepts:
      - application/json
  /api/v1/plugins/properties/{type}:
    get:
      description: "The schema will be a [JSON Schema Draft 7](http://json-schema.org/draft-07/schema)"
      operationId: getPropertiesFromType
      parameters:
      - description: The schema needed
        explode: false
        in: path
        name: type
        required: true
        schema:
          $ref: "#/components/schemas/SchemaType"
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: getPropertiesFromType 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get the properties part of the JSON schema for a type
      tags:
      - Plugins
      x-accepts:
      - application/json
  /api/v1/plugins/schemas/{type}:
    get:
      description: "The schema will be a [JSON Schema Draft 7](http://json-schema.org/draft-07/schema)"
      operationId: getSchemasFromType
      parameters:
      - description: The schema needed
        explode: false
        in: path
        name: type
        required: true
        schema:
          $ref: "#/components/schemas/SchemaType"
        style: simple
      - description: If schema should be an array of requested type
        explode: false
        in: query
        name: arrayOf
        required: true
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: getSchemasFromType 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get the JSON schema for a type
      tags:
      - Plugins
      x-accepts:
      - application/json
  /api/v1/plugins/{cls}:
    get:
      operationId: getPluginDocumentation
      parameters:
      - description: The plugin full class name
        explode: false
        in: path
        name: cls
        required: true
        schema:
          type: string
        style: simple
      - description: Include all the properties
        explode: false
        in: query
        name: all
        required: true
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentationWithSchema"
          description: getPluginDocumentation 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get plugin documentation
      tags:
      - Plugins
      x-accepts:
      - application/json
  /api/v1/plugins/{cls}/versions:
    get:
      operationId: getPluginVersions
      parameters:
      - description: The plugin type
        explode: false
        in: path
        name: cls
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PluginController.ApiPluginVersions"
          description: getPluginVersions 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get all versions for a plugin
      tags:
      - Plugins
      x-accepts:
      - application/json
  /api/v1/plugins/{cls}/versions/{version}:
    get:
      operationId: getPluginDocumentationFromVersion
      parameters:
      - description: The plugin type
        explode: false
        in: path
        name: cls
        required: true
        schema:
          type: string
        style: simple
      - description: The plugin version
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - description: Include all the properties
        explode: false
        in: query
        name: all
        required: true
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentationWithSchema"
          description: getPluginDocumentationFromVersion 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get plugin documentation
      tags:
      - Plugins
      x-accepts:
      - application/json
  /api/v1/reset-password:
    post:
      description: "Change a password for given token. If password does not match\
        \ password policy, use can still retry."
      operationId: resetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthController.ResetPasswordRequest"
        description: The password
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: resetPassword 200 response
      summary: Change a password for given token.
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/service-accounts:
    get:
      operationId: listServiceAccounts
      parameters:
      - description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: false
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: false
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: false
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_IAMServiceAccountController.ApiServiceAccountDetail_"
          description: Service account successfully created
        "404":
          description: Group not found
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: 'List service accounts. Superadmin-only. '
      tags:
      - ServiceAccount
      x-accepts:
      - application/json
    post:
      description: Superadmin-only. CReate service account with access to multiple
        tenants.
      operationId: createServiceAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IAMServiceAccountController.ApiCreateServiceAccountRequest"
        description: The service account
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IAMServiceAccountController.ApiServiceAccountDetail"
          description: Service account successfully created
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Create a service account
      tags:
      - ServiceAccount
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/service-accounts/{id}:
    delete:
      description: Superadmin-only. Delete a service account including all its access.
      operationId: deleteServiceAccount
      parameters:
      - description: The service account id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Service account successfully deleted
        "404":
          description: Service account not found
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Delete a service account
      tags:
      - ServiceAccount
      x-accepts:
      - application/json
    get:
      description: Superadmin-only. Get user account details.
      operationId: getServiceAccount
      parameters:
      - description: The service account id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          description: User not found
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IAMServiceAccountController.ApiServiceAccountDetail"
          description: getServiceAccount 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get a service account
      tags:
      - ServiceAccount
      x-accepts:
      - application/json
    patch:
      description: Superadmin-only. Updates the details of a service account.
      operationId: patchServiceAccountDetails
      parameters:
      - description: The service account id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IAMServiceAccountController.ApiPatchServiceAccountRequest"
        description: The service account details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IAMServiceAccountController.ApiServiceAccountDetail"
          description: patchServiceAccountDetails 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Update service account details
      tags:
      - ServiceAccount
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/service-accounts/{id}/api-tokens:
    get:
      operationId: listApiTokens
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: listApiTokens 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: List API tokens for a specific user
      tags:
      - Users
      x-accepts:
      - application/json
    post:
      operationId: createApiTokensForUser
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateApiTokenRequest"
        description: The create api-token request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: createApiTokensForUser 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Create new API Token for a specific user
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/service-accounts/{id}/api-tokens/{tokenId}:
    delete:
      operationId: deleteApiToken
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The token id
        explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: deleteApiToken 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Delete an API Token for specific user and token id
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/service-accounts/{id}/superadmin:
    patch:
      description: Superadmin-only. Updates whether a service account is a superadmin.
      operationId: patchServiceAccountSuperAdmin
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiPatchSuperAdminRequest"
        required: true
      responses:
        "200":
          description: Service account successfully updated
        "404":
          description: Service account not found
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Update service account superadmin privileges
      tags:
      - ServiceAccount
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/setup:
    get:
      operationId: setupConfiguration
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SetupConfiguration"
          description: setupConfiguration 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Retrieve current setup configuration
      tags:
      - Misc
      x-accepts:
      - application/json
    post:
      description: Only used during initial instance setup.
      operationId: setupKestra
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetupConfiguration.SetupData"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiUser"
          description: setupKestra 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Create the first Superadmin user
      tags:
      - Misc
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants:
    post:
      description: Superadmin-only.
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Tenant"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tenant"
          description: create 200 response
      summary: Create a tenant
      tags:
      - Tenants
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/search:
    get:
      description: Superadmin-only.
      operationId: find
      parameters:
      - description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: false
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: false
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: false
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_Tenant_"
          description: find 200 response
      summary: Search for tenants
      tags:
      - Tenants
      x-accepts:
      - application/json
  /api/v1/tenants/{id}:
    delete:
      description: "Superadmin-only. Deletes all resources linked to the tenant, including\
        \ flows, namespaces, apps, etc."
      operationId: delete
      parameters:
      - description: The tenant id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
      summary: Delete a tenant and all its resources
      tags:
      - Tenants
      x-accepts:
      - application/json
    get:
      description: Superadmin-only.
      operationId: get
      parameters:
      - description: The tenant id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tenant"
          description: get 200 response
      summary: Retrieve a tenant
      tags:
      - Tenants
      x-accepts:
      - application/json
    put:
      description: Superadmin-only.
      operationId: update
      parameters:
      - description: The tenant id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Tenant"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tenant"
          description: update 200 response
      summary: Update a tenant
      tags:
      - Tenants
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/{id}/logo:
    post:
      description: Superadmin-only.
      operationId: setLogo
      parameters:
      - description: The tenant id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            encoding:
              logo:
                contentType: application/octet-stream
                explode: false
                style: form
            schema:
              $ref: "#/components/schemas/setLogo_request"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiTenant"
          description: setLogo 200 response
      summary: Set a tenant logo
      tags:
      - Tenants
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/users:
    get:
      operationId: listUsers
      parameters:
      - description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: false
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: false
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: false
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_IAMUserController.ApiUserSummary_"
          description: listUsers 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Retrieve users
      tags:
      - Users
      x-accepts:
      - application/json
    post:
      description: Superadmin-only. Create a new user account with an optional password
        based authentication method.
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IAMUserController.ApiCreateOrUpdateUserRequest"
        required: true
      responses:
        "201":
          description: User was successfully created
        "404":
          description: "Tenant, or group not found"
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Create a new user account
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/users/{id}:
    delete:
      description: Superadmin-only. Delete a user including all its access.
      operationId: deleteUser
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: User successfully deleted
        "404":
          description: User not found
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Delete a user
      tags:
      - Users
      x-accepts:
      - application/json
    get:
      description: Superadmin-only. Get user account details.
      operationId: getUser
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          description: User not found
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IAMUserController.ApiUser"
          description: getUser 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get a user
      tags:
      - Users
      x-accepts:
      - application/json
    patch:
      description: Superadmin-only. Updates the the details of a user.
      operationId: patchUser
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MeController.ApiUserDetailsRequest"
        description: The user details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IAMUserController.ApiUser"
          description: patchUser 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Update user details
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Superadmin-only. Update an existing user account with an optional
        password based authentication method.
      operationId: updateUser
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IAMUserController.ApiCreateOrUpdateUserRequest"
        required: true
      responses:
        "404":
          description: "Tenant, or group not found"
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IAMUserController.ApiUser"
          description: updateUser 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Update a user account
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/users/{id}/api-tokens:
    get:
      description: Superadmin-only. Get all API token existing for a user.
      operationId: listApiTokens_1
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          description: User not found
        "200":
          content:
            application/json:
              schema:
                type: object
          description: listApiTokens_1 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: List API tokens for a specific user
      tags:
      - Users
      x-accepts:
      - application/json
    post:
      description: Superadmin-only. Create a new API token for a user.
      operationId: createApiTokensForUser_1
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateApiTokenRequest"
        description: The create api-token request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateApiTokenResponse"
          description: API token successfully created
        "404":
          description: User not found
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Create new API Token for a specific user
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/users/{id}/api-tokens/{tokenId}:
    delete:
      description: Superadmin-only. Delete an API token for a user.
      operationId: deleteApiToken_1
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The token id
        explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: API token successfully deleted
        "404":
          description: "User, or API Token not found"
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Delete an API Token for specific user and token id
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/users/{id}/auths/{auth}:
    delete:
      description: Superadmin-only. Updates whether a user is a superadmin.
      operationId: deleteUserAuthMethod
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The user auth method id
        explode: false
        in: path
        name: auth
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IAMUserController.ApiUser"
          description: User auth method successfully updated
        "404":
          description: User or auth method not found
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Update user password
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/users/{id}/impersonate:
    post:
      description: Superadmin-only. Allows an admin to impersonate another user.
      operationId: impersonate
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          description: User not found
        "200":
          content:
            application/json:
              schema:
                type: object
          description: impersonate 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Impersonate a user
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/users/{id}/password:
    patch:
      description: Superadmin-only. Updates whether a user is a superadmin.
      operationId: patchUserPassword
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IAMUserController.ApiPatchUserPasswordRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: User successfully updated
        "404":
          description: User not found
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Update user password
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/users/{id}/refresh-token:
    delete:
      operationId: deleteRefreshToken
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Refresh token successfully deleted
        "404":
          description: User not found
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Delete a user refresh token
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/users/{id}/restricted:
    patch:
      description: Superadmin-only. Updates whether a user is for demo.
      operationId: patchUserDemo
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IAMUserController.ApiPatchRestrictedRequest"
        required: true
      responses:
        "200":
          description: User successfully updated
        "404":
          description: User not found
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Update user demo
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/users/{id}/superadmin:
    patch:
      description: Superadmin-only. Updates whether a user is a superadmin.
      operationId: patchUserSuperAdmin
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiPatchSuperAdminRequest"
        required: true
      responses:
        "200":
          description: User successfully updated
        "404":
          description: User not found
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Update user superadmin privileges
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/acls/actions:
    get:
      description: "Actions are used to restrict possible operations for each permission.\
        \ Each action must be one of the following: CREATE, READ, UPDATE, DELETE.\
        \ Using permissions and actions together, you can control access to resources\
        \ e.g. only allow a user to read a flow, but not update or delete it."
      operationId: listActions
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Action"
                type: array
          description: listActions 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Retrieve list of actions
      tags:
      - Misc
      x-accepts:
      - application/json
  /api/v1/{tenant}/acls/permissions:
    get:
      description: "Permissions are used to control access to resources within the\
        \ Kestra platform. Example of permissions are: FLOW, EXECUTION, NAMESPACE,\
        \ APP, TEST, etc."
      operationId: listPermissions
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Permission"
                type: array
          description: listPermissions 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Retrieve list of permissions
      tags:
      - Misc
      x-accepts:
      - application/json
  /api/v1/{tenant}/ai/generate/flow:
    post:
      operationId: generateFlow
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FlowGenerationPrompt"
        description: Prompt and context required for flow generation
        required: true
      responses:
        "200":
          content:
            application/yaml:
              schema:
                type: string
          description: generateFlow 200 response
      summary: Generate or regenerate a flow based on a prompt
      tags:
      - AI
      x-content-type: application/json
      x-accepts:
      - application/yaml
  /api/v1/{tenant}/apps:
    delete:
      operationId: bulkDeleteApps
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppsController.ApiBulkOperationRequest"
        description: The list of Apps UID
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: bulkDeleteApps 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Delete existing apps
      tags:
      - Apps
      x-content-type: application/json
      x-accepts:
      - application/json
    post:
      operationId: createApp
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
        description: The app
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppsController.ApiAppSource"
          description: createApp 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Create a new app
      tags:
      - Apps
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/{tenant}/apps/catalog:
    get:
      operationId: searchAppsFromCatalog
      parameters:
      - description: The current page
        explode: false
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: false
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: Tags filter
        explode: false
        in: query
        name: tags
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: String filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_AppsController.ApiAppCatalogItem_"
          description: searchAppsFromCatalog 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Search for apps from catalog
      tags:
      - Apps
      x-accepts:
      - application/json
  /api/v1/{tenant}/apps/disable:
    post:
      operationId: bulkDisableApps
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppsController.ApiBulkOperationRequest"
        description: The list of Apps UID
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: bulkDisableApps 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Disable existing apps
      tags:
      - Apps
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/apps/enable:
    post:
      operationId: bulkEnableApps
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppsController.ApiBulkOperationRequest"
        description: The list of Apps UID
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: bulkEnableApps 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Enable existing apps
      tags:
      - Apps
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/apps/export:
    post:
      operationId: bulkExportApps
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppsController.ApiBulkOperationRequest"
        description: The list of Apps UID
        required: true
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: byte
                type: string
          description: bulkExportApps 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Export apps as a ZIP archive of YAML sources.
      tags:
      - Apps
      x-content-type: application/json
      x-accepts:
      - application/octet-stream
  /api/v1/{tenant}/apps/import:
    post:
      operationId: bulkImportApps
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            encoding:
              fileUpload:
                contentType: application/octet-stream
                explode: false
                style: form
            schema:
              $ref: "#/components/schemas/bulkImportApps_request"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppsController.ApiBulkImportResponse"
          description: On success
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: |2
            Import apps as a ZIP archive of yaml sources or a multi-objects YAML file.
            When sending a Yaml that contains one or more apps, a list of index is returned.
            When sending a ZIP archive, a list of files that couldn't be imported is returned.
      tags:
      - Flows
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/{tenant}/apps/preview:
    post:
      operationId: previewApp
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-yaml:
            schema:
              $ref: "#/components/schemas/previewApp_request"
        description: The app
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppResponse"
          description: previewApp 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Open the app for the given source
      tags:
      - Apps
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/{tenant}/apps/search:
    get:
      operationId: searchApps
      parameters:
      - description: The current page
        explode: false
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: false
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: false
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: A tags filter
        explode: false
        in: query
        name: tags
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter prefix
        explode: false
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: false
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_AppsController.ApiApp_"
          description: searchApps 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Search for apps
      tags:
      - Apps
      x-accepts:
      - application/json
  /api/v1/{tenant}/apps/tags:
    get:
      operationId: listTags
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppsController.ApiAppTags"
          description: listTags 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get all the app tags
      tags:
      - Apps
      x-accepts:
      - application/json
  /api/v1/{tenant}/apps/view/{id}/dispatch/{dispatch}:
    post:
      operationId: dispatchApp
      parameters:
      - description: The ID of the app.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID to dispatch
        explode: false
        in: path
        name: dispatch
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            encoding: {}
            schema:
              items:
                format: binary
                type: string
              properties:
                parameters:
                  $ref: "#/components/schemas/HttpParameters"
              type: array
        description: The data of the app
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppResponse"
          description: dispatchApp 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Dispatch for a given app.
      tags:
      - Apps
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/{tenant}/apps/view/{id}/file/download:
    get:
      operationId: downloadFileFromAppExecution
      parameters:
      - description: The ID of the app.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri
        explode: false
        in: query
        name: path
        required: true
        schema:
          format: uri
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
          description: downloadFileFromAppExecution 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Download file from an app execution
      tags:
      - Apps
      x-accepts:
      - application/json
  /api/v1/{tenant}/apps/view/{id}/file/meta:
    get:
      operationId: getFileMetaFromAppExecution
      parameters:
      - description: The ID of the app.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri
        explode: false
        in: query
        name: path
        required: true
        schema:
          format: uri
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileMetas"
          description: getFileMetaFromAppExecution 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get file meta information from an app execution
      tags:
      - Apps
      x-accepts:
      - application/json
  /api/v1/{tenant}/apps/view/{id}/file/preview:
    get:
      operationId: getFilePreviewFromAppExecution
      parameters:
      - description: The ID of the app.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri
        explode: false
        in: query
        name: path
        required: true
        schema:
          format: uri
          type: string
        style: form
      - description: The max row returns
        explode: false
        in: query
        name: maxRows
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - description: The file encoding as Java charset name. Defaults to UTF-8
        example: ISO-8859-1
        explode: false
        in: query
        name: encoding
        required: true
        schema:
          default: UTF-8
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: getFilePreviewFromAppExecution 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get file preview from an app execution
      tags:
      - Apps
      x-accepts:
      - application/json
  /api/v1/{tenant}/apps/view/{id}/streams/{stream}:
    get:
      operationId: getStreamEventsFromApp
      parameters:
      - description: The ID of the app.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the stream to get
        explode: false
        in: path
        name: stream
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: query
        name: parameters
        required: true
        schema:
          $ref: "#/components/schemas/HttpParameters"
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/event-stream:
              schema:
                $ref: "#/components/schemas/Event_AppResponse_"
          description: getStreamEventsFromApp 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get an event stream from a given app.
      tags:
      - Apps
      x-accepts:
      - text/event-stream
  /api/v1/{tenant}/apps/view/{uid}:
    get:
      operationId: openApp
      parameters:
      - description: The ID of the app
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: query
        name: parameters
        required: true
        schema:
          $ref: "#/components/schemas/HttpParameters"
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppResponse"
          description: openApp 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Open an app
      tags:
      - Apps
      x-accepts:
      - application/json
  /api/v1/{tenant}/apps/view/{uid}/logs/download:
    get:
      operationId: getLogsFromAppExecution
      parameters:
      - description: The ID of the app.
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the execution.
        explode: false
        in: query
        name: executionId
        required: true
        schema:
          type: string
        style: form
      - description: The min log level filter
        explode: false
        in: query
        name: minLevel
        required: false
        schema:
          allOf:
          - $ref: "#/components/schemas/Level"
          nullable: true
        style: form
      - description: The tasks' IDs
        explode: false
        in: query
        name: taskIds
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: getLogsFromAppExecution 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Download logs for an app execution
      tags:
      - Apps
      x-accepts:
      - application/octet-stream
  /api/v1/{tenant}/apps/{uid}:
    delete:
      operationId: deleteApp
      parameters:
      - description: The ID of the app
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: deleteApp 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Delete an existing app
      tags:
      - Apps
      x-accepts:
      - application/json
    get:
      operationId: getApp
      parameters:
      - description: The ID of the app
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppsController.ApiAppSource"
          description: getApp 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Retrieve an app
      tags:
      - Apps
      x-accepts:
      - application/json
    put:
      operationId: updateApp
      parameters:
      - description: The ID of the app
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
        description: The app
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppsController.ApiAppSource"
          description: updateApp 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Update an existing app
      tags:
      - Apps
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/{tenant}/apps/{uid}/disable:
    post:
      operationId: disableApp
      parameters:
      - description: The ID of app
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppsController.ApiApp"
          description: disableApp 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Disable the app.
      tags:
      - Apps
      x-accepts:
      - application/json
  /api/v1/{tenant}/apps/{uid}/enable:
    post:
      operationId: enableApp
      parameters:
      - description: The ID of app
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppsController.ApiApp"
          description: enableApp 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Enable the app.
      tags:
      - Apps
      x-accepts:
      - application/json
  /api/v1/{tenant}/auditlogs/export:
    get:
      operationId: exportAuditLogs
      parameters:
      - description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter
        explode: false
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: false
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: An execution filter
        explode: false
        in: query
        name: executionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A user id filter
        explode: false
        in: query
        name: userId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A id filter
        explode: false
        in: query
        name: id
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A resource filter
        explode: false
        in: query
        name: resources
        required: false
        schema:
          items:
            $ref: "#/components/schemas/ResourceType_1"
          nullable: true
          type: array
        style: form
      - description: The start datetime
        explode: false
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: false
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A list of auditLog details
        explode: false
        in: query
        name: details
        required: false
        schema:
          additionalProperties:
            type: string
          nullable: true
          type: object
        style: form
      - description: The event that create the audit log
        explode: false
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: "#/components/schemas/CrudEventType"
          nullable: true
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/csv:
              schema:
                items:
                  type: object
                type: array
          description: exportAuditLogs 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Export all audit logs as a streamed CSV file
      tags:
      - Audit Logs
      x-accepts:
      - text/csv
  /api/v1/{tenant}/auditlogs/find:
    post:
      operationId: findAuditLog
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuditLogController.FindRequest"
        description: The find request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuditLogController.ApiAuditLogItem"
          description: findAuditLog 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Find a specific audit log
      tags:
      - Audit Logs
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/auditlogs/history/{detailId}:
    get:
      operationId: listAuditLogFromResourceId
      parameters:
      - description: The resource Id
        explode: false
        in: path
        name: detailId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/AuditLogController.AuditLogOption"
                type: array
          description: listAuditLogFromResourceId 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Find all audit logs about a specific resource.
      tags:
      - Audit Logs
      x-accepts:
      - application/json
  /api/v1/{tenant}/auditlogs/search:
    get:
      operationId: searchAuditLogs
      parameters:
      - description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: false
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: false
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: false
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: A namespace filter
        explode: false
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: false
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: An execution filter
        explode: false
        in: query
        name: executionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A user id filter
        explode: false
        in: query
        name: userId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A id filter
        explode: false
        in: query
        name: id
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A resource filter
        explode: false
        in: query
        name: resources
        required: false
        schema:
          items:
            $ref: "#/components/schemas/ResourceType_1"
          nullable: true
          type: array
        style: form
      - description: The start datetime
        explode: false
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: false
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A list of auditLog details
        explode: false
        in: query
        name: details
        required: false
        schema:
          additionalProperties:
            type: string
          nullable: true
          type: object
        style: form
      - description: The event that create the audit log
        explode: false
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: "#/components/schemas/CrudEventType"
          nullable: true
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_AuditLogController.ApiAuditLogItem_"
          description: searchAuditLogs 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Search for audit logs
      tags:
      - Audit Logs
      x-accepts:
      - application/json
  /api/v1/{tenant}/auditlogs/{id}/diff:
    get:
      description: Retrieves the diff between the current version and a selected previous
        version of a given resource based on audit logs.
      operationId: getResourceDiffFromAuditLog
      parameters:
      - description: The id of the audit log
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The id of a previous audit log to compare with
        explode: false
        in: query
        name: previousId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuditLogController.AuditLogDiff"
          description: getResourceDiffFromAuditLog 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Retrieve the diff between audit logs
      tags:
      - Audit Logs
      x-accepts:
      - application/json
  /api/v1/{tenant}/basicAuth:
    post:
      description: Sets up basic authentication credentials.
      operationId: createBasicAuth
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MiscController.BasicAuthCredentials"
        required: true
      responses:
        "200":
          description: createBasicAuth 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Configure basic authentication for the instance.
      tags:
      - Misc
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/bindings:
    post:
      operationId: createBinding
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IAMBindingController.ApiCreateBindingRequest"
        description: The binding
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IAMBindingController.ApiBindingDetail"
          description: createBinding 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Create a binding
      tags:
      - Bindings
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/bindings/bulk:
    post:
      operationId: bulkCreateBinding
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/IAMBindingController.ApiCreateBindingRequest"
              type: array
        description: The bindings
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/IAMBindingController.ApiBindingDetail"
                type: array
          description: bulkCreateBinding 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Create multiple bindings
      tags:
      - Bindings
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/bindings/search:
    get:
      operationId: searchBindings
      parameters:
      - description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: false
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: false
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: false
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: Binding type filter
        explode: false
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: "#/components/schemas/Binding.Type"
          nullable: true
        style: form
      - description: External id filter
        explode: false
        in: query
        name: id
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter
        explode: false
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_IAMBindingController.ApiBindingDetail_"
          description: searchBindings 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Search for bindings
      tags:
      - Bindings
      x-accepts:
      - application/json
  /api/v1/{tenant}/bindings/{id}:
    delete:
      operationId: deleteBinding
      parameters:
      - description: The binding id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Delete a binding
      tags:
      - Bindings
      x-accepts:
      - application/json
    get:
      operationId: getBinding
      parameters:
      - description: The binding id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IAMBindingController.ApiBindingDetail"
          description: getBinding 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Retrieve a binding
      tags:
      - Bindings
      x-accepts:
      - application/json
  /api/v1/{tenant}/blueprints/community/{kind}:
    get:
      description: Lists all community blueprints of the specified kind. Community
        blueprints are shared and versioned.
      operationId: searchBlueprints
      parameters:
      - description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The sort of current page
        explode: false
        in: query
        name: sort
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A tags filter
        explode: false
        in: query
        name: tags
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The current page
        explode: false
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: false
        in: query
        name: size
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The blueprint kind
        explode: false
        in: path
        name: kind
        required: true
        schema:
          $ref: "#/components/schemas/BlueprintController.Kind"
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_BlueprintController.ApiBlueprintItem_"
          description: searchBlueprints 200 response
      summary: List all blueprints
      tags:
      - Blueprints
      x-accepts:
      - application/json
  /api/v1/{tenant}/blueprints/community/{kind}/tags:
    get:
      description: "Lists tags for community blueprints of the specified kind, optionally\
        \ filtered by query."
      operationId: listBlueprintTags
      parameters:
      - description: The blueprint kind
        explode: false
        in: path
        name: kind
        required: true
        schema:
          $ref: "#/components/schemas/BlueprintController.Kind"
        style: simple
      - description: A string filter to get tags with matching blueprints only
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/BlueprintController.ApiBlueprintTagItem"
                type: array
          description: listBlueprintTags 200 response
      summary: List blueprint tags matching the filter
      tags:
      - Blueprint Tags
      x-accepts:
      - application/json
  /api/v1/{tenant}/blueprints/community/{kind}/{id}:
    get:
      description: Retrieves details of a specific community blueprint.
      operationId: getBlueprint
      parameters:
      - description: The blueprint id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The blueprint kind
        explode: false
        in: path
        name: kind
        required: true
        schema:
          $ref: "#/components/schemas/BlueprintController.Kind"
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlueprintController.ApiBlueprintItemWithSource"
          description: getBlueprint 200 response
      summary: Retrieve a blueprint
      tags:
      - Blueprints
      x-accepts:
      - application/json
  /api/v1/{tenant}/blueprints/community/{kind}/{id}/graph:
    get:
      description: Retrieves the topology graph representation of a specific community
        blueprint.
      operationId: getBlueprintGraph
      parameters:
      - description: The blueprint id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The blueprint kind
        explode: false
        in: path
        name: kind
        required: true
        schema:
          $ref: "#/components/schemas/BlueprintController.Kind"
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: getBlueprintGraph 200 response
      summary: Retrieve a blueprint graph
      tags:
      - Blueprints
      x-accepts:
      - application/json
  /api/v1/{tenant}/blueprints/community/{kind}/{id}/source:
    get:
      description: Retrieves the YAML source code for a specific community blueprint.
      operationId: getBlueprintSource
      parameters:
      - description: The blueprint id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The blueprint kind
        explode: false
        in: path
        name: kind
        required: true
        schema:
          $ref: "#/components/schemas/BlueprintController.Kind"
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/yaml:
              schema:
                type: string
          description: getBlueprintSource 200 response
      summary: Retrieve a blueprint source code
      tags:
      - Blueprints
      x-accepts:
      - application/yaml
  /api/v1/{tenant}/blueprints/custom:
    get:
      description: Lists all internal (custom) blueprints for the current tenant.
        Requires BLUEPRINT permission.
      operationId: searchInternalBlueprints
      parameters:
      - description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The sort of current page
        explode: false
        in: query
        name: sort
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A tags filter
        explode: false
        in: query
        name: tags
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The current page
        explode: false
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: false
        in: query
        name: size
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_Blueprint_"
          description: searchInternalBlueprints 200 response
      summary: List all internal blueprints
      tags:
      - Blueprints
      x-accepts:
      - application/json
    post:
      description: Creates a new internal (custom) blueprint for the current tenant.
        Requires BLUEPRINT permission.
      operationId: createInternalBlueprints
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BlueprintController.ApiBlueprintItemWithSource"
        description: The internal blueprint to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlueprintController.ApiBlueprintItemWithSource"
          description: createInternalBlueprints 200 response
      summary: Create a new internal blueprint
      tags:
      - Blueprints
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/blueprints/custom/tags:
    get:
      description: Lists all tags used by internal (custom) blueprints for the current
        tenant.
      operationId: internalBlueprintTags
      parameters:
      - description: A string filter to get tags with matching blueprints only
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: internalBlueprintTags 200 response
      summary: List all internal blueprint tags
      tags:
      - Blueprint Tags
      x-accepts:
      - application/json
  /api/v1/{tenant}/blueprints/custom/{id}:
    delete:
      description: Deletes an internal (custom) blueprint for the current tenant.
        Requires BLUEPRINT permission.
      operationId: deleteInternalBlueprints
      parameters:
      - description: The internal blueprint id to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: deleteInternalBlueprints 200 response
      summary: Delete an internal blueprint
      tags:
      - Blueprints
      x-accepts:
      - application/json
    get:
      description: Retrieves details of a specific internal (custom) blueprint. Requires
        BLUEPRINT permission.
      operationId: internalBlueprint
      parameters:
      - description: The blueprint id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlueprintController.ApiBlueprintItemWithSource"
          description: internalBlueprint 200 response
      summary: Retrieve an internal blueprint
      tags:
      - Blueprints
      x-accepts:
      - application/json
    put:
      description: Updates an existing internal (custom) blueprint for the current
        tenant. Requires BLUEPRINT permission.
      operationId: updateInternalBlueprints
      parameters:
      - description: The id of the internal blueprint to update
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BlueprintController.ApiBlueprintItemWithSource"
        description: The new internal blueprint for update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlueprintWithFlow"
          description: updateInternalBlueprints 200 response
      summary: Update an internal blueprint
      tags:
      - Blueprints
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/blueprints/custom/{id}/source:
    get:
      description: Retrieves the YAML source code for a specific internal (custom)
        blueprint. Requires BLUEPRINT permission.
      operationId: internalBlueprintFlow
      parameters:
      - description: The blueprint id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/yaml:
              schema:
                type: string
          description: internalBlueprintFlow 200 response
      summary: Retrieve an internal blueprint source code
      tags:
      - Blueprints
      x-accepts:
      - application/yaml
  /api/v1/{tenant}/dashboards:
    get:
      operationId: searchDashboards
      parameters:
      - description: The current page
        explode: false
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: false
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The filter query
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The sort of current page
        explode: false
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_Dashboard_"
          description: searchDashboards 200 response
      summary: Search for dashboards
      tags:
      - Dashboards
      x-accepts:
      - application/json
    post:
      operationId: createDashboard
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
        description: The dashboard definition as YAML
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dashboard"
          description: createDashboard 200 response
      summary: Create a dashboard from yaml source
      tags:
      - Dashboards
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/{tenant}/dashboards/charts/export/to-csv:
    post:
      operationId: exportChartToCsv
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DashboardController.PreviewRequest"
        required: true
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: byte
                type: string
          description: exportChartToCsv 200 response
      summary: Export a table chart data to CSV
      tags:
      - Dashboards
      x-content-type: application/json
      x-accepts:
      - application/octet-stream
  /api/v1/{tenant}/dashboards/charts/preview:
    post:
      operationId: previewChart
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DashboardController.PreviewRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_Map_String.Object__"
          description: previewChart 200 response
      summary: Preview a chart data
      tags:
      - Dashboards
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/dashboards/validate:
    post:
      operationId: validateDashboard
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
        description: The dashboard definition as YAML
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidateConstraintViolation"
          description: validateDashboard 200 response
      summary: Validate dashboard from yaml source
      tags:
      - Dashboards
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/{tenant}/dashboards/validate/chart:
    post:
      operationId: validateChart
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
        description: The chart definition as YAML
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidateConstraintViolation"
          description: validateChart 200 response
      summary: Validate a chart from yaml source
      tags:
      - Dashboards
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/{tenant}/dashboards/{id}:
    delete:
      operationId: deleteDashboard
      parameters:
      - description: The dashboard id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: deleteDashboard 200 response
      summary: Delete a dashboard
      tags:
      - Dashboards
      x-accepts:
      - application/json
    get:
      operationId: getDashboard
      parameters:
      - description: The dashboard id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dashboard"
          description: getDashboard 200 response
      summary: Get a dashboard
      tags:
      - Dashboards
      x-accepts:
      - application/json
    put:
      operationId: updateDashboard
      parameters:
      - description: The dashboard id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
        description: The dashboard definition as YAML
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dashboard"
          description: updateDashboard 200 response
      summary: Update a dashboard
      tags:
      - Dashboards
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/{tenant}/dashboards/{id}/charts/{chartId}:
    post:
      operationId: getDashboardChartData
      parameters:
      - description: The dashboard id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The chart id
        explode: false
        in: path
        name: chartId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChartFiltersOverrides"
        description: "The filters to apply, some can override chart definition like\
          \ labels & namespace"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_Map_String.Object__"
          description: getDashboardChartData 200 response
      summary: Generate a dashboard chart data
      tags:
      - Dashboards
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/dashboards/{id}/charts/{chartId}/export/to-csv:
    post:
      operationId: exportDashboardChartDataToCSV
      parameters:
      - description: The dashboard id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The chart id
        explode: false
        in: path
        name: chartId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChartFiltersOverrides"
        description: "The filters to apply, some can override chart definition like\
          \ labels & namespace"
        required: true
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: byte
                type: string
          description: exportDashboardChartDataToCSV 200 response
      summary: Export a dashboard chart data to CSV
      tags:
      - Dashboards
      x-content-type: application/json
      x-accepts:
      - application/octet-stream
  /api/v1/{tenant}/dependencies:
    get:
      operationId: getFlowDependenciesFromTenant
      parameters:
      - description: "if true, list only destination dependencies, otherwise list\
          \ also source dependencies"
        explode: false
        in: query
        name: destinationOnly
        required: true
        schema:
          default: false
          type: boolean
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlowTopologyGraph"
          description: getFlowDependenciesFromTenant 200 response
      summary: Get tenant dependencies
      tags:
      - Tenants
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions:
    get:
      operationId: searchExecutionsByFlowId
      parameters:
      - description: The flow namespace
        explode: false
        in: query
        name: namespace
        required: true
        schema:
          type: string
        style: form
      - description: The flow id
        explode: false
        in: query
        name: flowId
        required: true
        schema:
          type: string
        style: form
      - description: The current page
        explode: false
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: false
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_Execution_"
          description: searchExecutionsByFlowId 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Search for executions for a flow
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/by-ids:
    delete:
      operationId: deleteExecutionsByIds
      parameters:
      - description: Whether to delete non-terminated executions
        explode: false
        in: query
        name: includeNonTerminated
        required: false
        schema:
          default: false
          nullable: true
          type: boolean
        style: form
      - description: Whether to delete execution logs
        explode: false
        in: query
        name: deleteLogs
        required: true
        schema:
          default: true
          type: boolean
        style: form
      - description: Whether to delete execution metrics
        explode: false
        in: query
        name: deleteMetrics
        required: true
        schema:
          default: true
          type: boolean
        style: form
      - description: Whether to delete execution files in the internal storage
        explode: false
        in: query
        name: deleteStorage
        required: true
        schema:
          default: true
          type: boolean
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: The execution id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
          description: On success
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkErrorResponse"
          description: Deleted with errors
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Delete a list of executions
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/by-query:
    delete:
      operationId: deleteExecutionsByQuery
      parameters:
      - description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the executions to include
        explode: false
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: "#/components/schemas/FlowScope"
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: false
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: false
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: false
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: false
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: "#/components/schemas/State.Type"
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: false
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: false
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: "#/components/schemas/ExecutionRepositoryInterface.ChildFilter"
          nullable: true
        style: form
      - description: Whether to delete non-terminated executions
        explode: false
        in: query
        name: includeNonTerminated
        required: false
        schema:
          default: false
          nullable: true
          type: boolean
        style: form
      - description: Whether to delete execution logs
        explode: false
        in: query
        name: deleteLogs
        required: true
        schema:
          default: true
          type: boolean
        style: form
      - description: Whether to delete execution metrics
        explode: false
        in: query
        name: deleteMetrics
        required: true
        schema:
          default: true
          type: boolean
        style: form
      - description: Whether to delete execution files in the internal storage
        explode: false
        in: query
        name: deleteStorage
        required: true
        schema:
          default: true
          type: boolean
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/deleteExecutionsByQuery_request"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: deleteExecutionsByQuery 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Delete executions filter by query parameters
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/change-status/by-ids:
    post:
      operationId: updateExecutionsStatusByIds
      parameters:
      - description: The new state of the executions
        explode: false
        in: query
        name: newStatus
        required: true
        schema:
          $ref: "#/components/schemas/State.Type"
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: The list of executions id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
          description: On success
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkErrorResponse"
          description: Changed state with errors
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Change executions state by id
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/change-status/by-query:
    post:
      operationId: updateExecutionsStatusByQuery
      parameters:
      - description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the executions to include
        explode: false
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: "#/components/schemas/FlowScope"
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: false
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: false
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: false
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: false
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: "#/components/schemas/State.Type"
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: false
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: false
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: "#/components/schemas/ExecutionRepositoryInterface.ChildFilter"
          nullable: true
        style: form
      - description: The new state of the executions
        explode: false
        in: query
        name: newStatus
        required: true
        schema:
          $ref: "#/components/schemas/State.Type"
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/deleteExecutionsByQuery_request"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
          description: On success
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkErrorResponse"
          description: Changed state with errors
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Change executions state by query parameters
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/flows/{namespace}/{flowId}:
    get:
      operationId: getFlowFromExecution
      parameters:
      - description: The namespace of the flow
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: flowId
        required: true
        schema:
          type: string
        style: simple
      - description: The flow revision
        explode: false
        in: query
        name: revision
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlowForExecution"
          description: getFlowFromExecution 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get flow information's for an execution
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/force-run/by-ids:
    post:
      operationId: forceRunByIds
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: The list of executions id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
          description: On success
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkErrorResponse"
          description: Force run with errors
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Force run a list of executions
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/force-run/by-query:
    post:
      operationId: forceRunExecutionsByQuery
      parameters:
      - description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the executions to include
        explode: false
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: "#/components/schemas/FlowScope"
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: false
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: false
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: false
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: false
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: "#/components/schemas/State.Type"
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: false
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: false
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: "#/components/schemas/ExecutionRepositoryInterface.ChildFilter"
          nullable: true
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/deleteExecutionsByQuery_request"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: forceRunExecutionsByQuery 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Force run executions filter by query parameters
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/kill/by-ids:
    delete:
      operationId: killExecutionsByIds
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: The list of executions id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
          description: On success
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkErrorResponse"
          description: Killed with errors
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Kill a list of executions
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/kill/by-query:
    delete:
      operationId: killExecutionsByQuery
      parameters:
      - description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the executions to include
        explode: false
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: "#/components/schemas/FlowScope"
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: false
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: false
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: false
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: false
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: "#/components/schemas/State.Type"
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: false
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: false
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: "#/components/schemas/ExecutionRepositoryInterface.ChildFilter"
          nullable: true
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/deleteExecutionsByQuery_request"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: killExecutionsByQuery 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Kill executions filter by query parameters
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/labels/by-ids:
    post:
      operationId: setLabelsOnTerminatedExecutionsByIds
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExecutionController.SetLabelsByIdsRequest"
        description: The request containing a list of labels and a list of executions
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
          description: On success
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkErrorResponse"
          description: Killed with errors
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Set labels on a list of executions
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/labels/by-query:
    post:
      operationId: setLabelsOnTerminatedExecutionsByQuery
      parameters:
      - description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the executions to include
        explode: false
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: "#/components/schemas/FlowScope"
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: false
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: false
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: false
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: false
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: "#/components/schemas/State.Type"
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: false
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: false
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: "#/components/schemas/ExecutionRepositoryInterface.ChildFilter"
          nullable: true
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/Label"
              properties:
                filters:
                  description: Filters
                  items:
                    $ref: "#/components/schemas/QueryFilter"
                  nullable: true
                  type: array
              type: array
        description: The labels to add to the execution
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: setLabelsOnTerminatedExecutionsByQuery 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Set label on executions filter by query parameters
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/latest:
    post:
      operationId: getLatestExecutions
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/ExecutionRepositoryInterface.FlowFilter"
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ExecutionController.LastExecutionResponse"
                type: array
          description: getLatestExecutions 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get the latest execution for given flows
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/namespaces:
    get:
      operationId: listExecutableDistinctNamespaces
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: listExecutableDistinctNamespaces 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get all namespaces that have executable flows
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/namespaces/{namespace}/flows:
    get:
      operationId: listFlowExecutionsByNamespace
      parameters:
      - description: The namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/FlowForExecution"
                type: array
          description: listFlowExecutionsByNamespace 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get all flow ids for a namespace. Data returned are FlowForExecution
        containing minimal information about a Flow for when you are allowed to executing
        but not reading.
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/pause/by-ids:
    post:
      operationId: pauseExecutionsByIds
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: The list of executions id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
          description: On success
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkErrorResponse"
          description: Paused with errors
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Pause a list of running executions
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/pause/by-query:
    post:
      operationId: pauseExecutionsByQuery
      parameters:
      - description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the executions to include
        explode: false
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: "#/components/schemas/FlowScope"
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: false
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: false
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: false
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: false
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: "#/components/schemas/State.Type"
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: false
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: false
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: "#/components/schemas/ExecutionRepositoryInterface.ChildFilter"
          nullable: true
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/deleteExecutionsByQuery_request"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: pauseExecutionsByQuery 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Pause executions filter by query parameters
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/replay/by-ids:
    post:
      operationId: replayExecutionsByIds
      parameters:
      - description: If latest revision should be used
        explode: false
        in: query
        name: latestRevision
        required: false
        schema:
          default: false
          nullable: true
          type: boolean
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: The list of executions id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
          description: On success
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkErrorResponse"
          description: Replayed with errors
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Create new executions from old ones. Keep the flow revision
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/replay/by-query:
    post:
      operationId: replayExecutionsByQuery
      parameters:
      - description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the executions to include
        explode: false
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: "#/components/schemas/FlowScope"
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: false
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: false
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: false
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: false
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: "#/components/schemas/State.Type"
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: false
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: false
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: "#/components/schemas/ExecutionRepositoryInterface.ChildFilter"
          nullable: true
        style: form
      - description: If latest revision should be used
        explode: false
        in: query
        name: latestRevision
        required: false
        schema:
          default: false
          nullable: true
          type: boolean
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/deleteExecutionsByQuery_request"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: replayExecutionsByQuery 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Create new executions from old ones filter by query parameters. Keep
        the flow revision
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/restart/by-ids:
    post:
      operationId: restartExecutionsByIds
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: The list of executions id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
          description: On success
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkErrorResponse"
          description: Restarted with errors
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Restart a list of executions
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/restart/by-query:
    post:
      operationId: restartExecutionsByQuery
      parameters:
      - description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the executions to include
        explode: false
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: "#/components/schemas/FlowScope"
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: false
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: false
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: false
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: false
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: "#/components/schemas/State.Type"
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: false
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: false
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: "#/components/schemas/ExecutionRepositoryInterface.ChildFilter"
          nullable: true
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/deleteExecutionsByQuery_request"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: restartExecutionsByQuery 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Restart executions filter by query parameters
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/resume/by-ids:
    post:
      operationId: resumeExecutionsByIds
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: The list of executions id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
          description: On success
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkErrorResponse"
          description: Resumed with errors
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Resume a list of paused executions
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/resume/by-query:
    post:
      operationId: resumeExecutionsByQuery
      parameters:
      - description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the executions to include
        explode: false
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: "#/components/schemas/FlowScope"
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: false
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: false
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: false
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: false
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: "#/components/schemas/State.Type"
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: false
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: false
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: "#/components/schemas/ExecutionRepositoryInterface.ChildFilter"
          nullable: true
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/deleteExecutionsByQuery_request"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: resumeExecutionsByQuery 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Resume executions filter by query parameters
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/search:
    get:
      operationId: searchExecutions
      parameters:
      - description: The current page
        explode: false
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: false
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The sort of current page
        explode: false
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: Filters
        explode: false
        in: query
        name: filters
        required: false
        schema:
          items:
            $ref: "#/components/schemas/QueryFilter"
          nullable: true
          type: array
        style: form
      - deprecated: true
        description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: The scope of the executions to include
        explode: false
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: "#/components/schemas/FlowScope"
          nullable: true
          type: array
        style: form
      - deprecated: true
        description: A namespace filter prefix
        explode: false
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: A flow id filter
        explode: false
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: false
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: A state filter
        explode: false
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: "#/components/schemas/State.Type"
          nullable: true
          type: array
        style: form
      - deprecated: true
        description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - deprecated: true
        description: The trigger execution id
        explode: false
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: A execution child filter
        explode: false
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: "#/components/schemas/ExecutionRepositoryInterface.ChildFilter"
          nullable: true
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_Execution_"
          description: searchExecutions 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Search for executions
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/trigger/{namespace}/{id}:
    post:
      operationId: triggerExecution
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The labels as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: If the server will wait the end of the execution
        explode: false
        in: query
        name: wait
        required: true
        schema:
          default: false
          type: boolean
        style: form
      - description: The flow revision or latest if null
        explode: false
        in: query
        name: revision
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              items:
                format: binary
                type: string
              type: array
        description: The inputs
      responses:
        "409":
          description: if the flow is disabled
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ExecutionController.ExecutionResponse"
                type: array
          description: triggerExecution 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Trigger a new execution for a flow
      tags:
      - Executions
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/unqueue/by-ids:
    post:
      operationId: unqueueExecutionsByIds
      parameters:
      - description: The new state of the unqueued executions
        explode: false
        in: query
        name: state
        required: true
        schema:
          $ref: "#/components/schemas/State.Type"
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: The list of executions id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
          description: On success
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkErrorResponse"
          description: Unqueued with errors
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Unqueue a list of executions
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/unqueue/by-query:
    post:
      operationId: unqueueExecutionsByQuery
      parameters:
      - description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the executions to include
        explode: false
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: "#/components/schemas/FlowScope"
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: false
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: false
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: false
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: false
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: "#/components/schemas/State.Type"
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: false
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: false
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: "#/components/schemas/ExecutionRepositoryInterface.ChildFilter"
          nullable: true
        style: form
      - description: The new state of the unqueued executions
        explode: false
        in: query
        name: newState
        required: false
        schema:
          allOf:
          - $ref: "#/components/schemas/State.Type"
          nullable: true
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/deleteExecutionsByQuery_request"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: unqueueExecutionsByQuery 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Unqueue executions filter by query parameters
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/webhook/{namespace}/{id}/{key}:
    get:
      operationId: triggerExecutionByGetWebhook
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The webhook trigger uid
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecutionController.WebhookResponse"
          description: triggerExecutionByGetWebhook 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Trigger a new execution by GET webhook trigger
      tags:
      - Executions
      x-accepts:
      - application/json
    post:
      operationId: triggerExecutionByPostWebhook
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The webhook trigger uid
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecutionController.WebhookResponse"
          description: triggerExecutionByPostWebhook 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Trigger a new execution by POST webhook trigger
      tags:
      - Executions
      x-accepts:
      - application/json
    put:
      operationId: triggerExecutionByPutWebhook
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The webhook trigger uid
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecutionController.WebhookResponse"
          description: triggerExecutionByPutWebhook 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Trigger a new execution by PUT webhook trigger
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}:
    delete:
      operationId: deleteExecution
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: Whether to delete execution logs
        explode: false
        in: query
        name: deleteLogs
        required: true
        schema:
          default: true
          type: boolean
        style: form
      - description: Whether to delete execution metrics
        explode: false
        in: query
        name: deleteMetrics
        required: true
        schema:
          default: true
          type: boolean
        style: form
      - description: Whether to delete execution files in the internal storage
        explode: false
        in: query
        name: deleteStorage
        required: true
        schema:
          default: true
          type: boolean
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
        "200":
          description: deleteExecution 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Delete an execution
      tags:
      - Executions
      x-accepts:
      - application/json
    get:
      operationId: getExecution
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Execution"
          description: getExecution 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get an execution
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}/change-status:
    post:
      operationId: updateExecutionStatus
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The new state of the execution
        explode: false
        in: query
        name: status
        required: true
        schema:
          $ref: "#/components/schemas/State.Type"
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Execution"
          description: updateExecutionStatus 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Change the state of an execution
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}/eval/{taskRunId}:
    post:
      operationId: evalTaskRunExpression
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The taskrun id
        explode: false
        in: path
        name: taskRunId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        description: The Pebble expression that should be evaluated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecutionController.EvalResult"
          description: evalTaskRunExpression 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Evaluate a variable expression for this taskrun
      tags:
      - Executions
      x-content-type: text/plain
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}/file:
    get:
      operationId: downloadFileFromExecution
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri
        explode: false
        in: query
        name: path
        required: true
        schema:
          format: uri
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: downloadFileFromExecution 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Download file for an execution
      tags:
      - Executions
      x-accepts:
      - application/octet-stream
  /api/v1/{tenant}/executions/{executionId}/file/metas:
    get:
      operationId: getFileMetadatasFromExecution
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri
        explode: false
        in: query
        name: path
        required: true
        schema:
          format: uri
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileMetas"
          description: getFileMetadatasFromExecution 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get file meta information for an execution
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}/file/preview:
    get:
      operationId: previewFileFromExecution
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri
        explode: false
        in: query
        name: path
        required: true
        schema:
          format: uri
          type: string
        style: form
      - description: The max row returns
        explode: false
        in: query
        name: maxRows
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The file encoding as Java charset name. Defaults to UTF-8
        example: ISO-8859-1
        explode: false
        in: query
        name: encoding
        required: true
        schema:
          default: UTF-8
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: previewFileFromExecution 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get file preview for an execution
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}/flow:
    get:
      operationId: getFlowFromExecutionById
      parameters:
      - description: The execution that you want flow information's
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlowForExecution"
          description: getFlowFromExecutionById 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get flow information's for an execution
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}/follow:
    get:
      operationId: followExecution
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/event-stream:
              schema:
                $ref: "#/components/schemas/Event_Execution_"
          description: followExecution 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Follow an execution
      tags:
      - Executions
      x-accepts:
      - text/event-stream
  /api/v1/{tenant}/executions/{executionId}/follow-dependencies:
    get:
      operationId: followDependenciesExecutions
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: "If true, list only destination dependencies, otherwise list\
          \ also source dependencies"
        explode: false
        in: query
        name: destinationOnly
        required: true
        schema:
          default: false
          type: boolean
        style: form
      - description: "If true, expand all dependencies recursively"
        explode: false
        in: query
        name: expandAll
        required: true
        schema:
          default: false
          type: boolean
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/event-stream:
              schema:
                $ref: "#/components/schemas/Event_ExecutionStatusEvent_"
          description: followDependenciesExecutions 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Follow all execution dependencies executions
      tags:
      - Executions
      x-accepts:
      - text/event-stream
  /api/v1/{tenant}/executions/{executionId}/force-run:
    post:
      operationId: forceRunExecution
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Execution"
          description: forceRunExecution 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Force run an execution
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}/graph:
    get:
      operationId: getExecutionFlowGraph
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The subflow tasks to display
        explode: false
        in: query
        name: subflows
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlowGraph"
          description: getExecutionFlowGraph 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Generate a graph for an execution
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}/kill:
    delete:
      operationId: killExecution
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies whether killing the execution also kill all subflow
          executions.
        explode: false
        in: query
        name: isOnKillCascade
        required: true
        schema:
          default: true
          type: boolean
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          description: Execution kill was requested successfully
        "409":
          description: if the executions is already finished
        "404":
          description: if the executions is not found
        "200":
          content:
            text/json:
              schema:
                type: object
          description: killExecution 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Kill an execution
      tags:
      - Executions
      x-accepts:
      - text/json
  /api/v1/{tenant}/executions/{executionId}/labels:
    post:
      operationId: setLabelsOnTerminatedExecution
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/Label"
              type: array
        description: The labels to add to the execution
        required: true
      responses:
        "404":
          description: If the execution cannot be found
        "400":
          description: If the execution is not terminated
        "200":
          content:
            application/json:
              schema:
                type: object
          description: setLabelsOnTerminatedExecution 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Add or update labels of a terminated execution
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}/pause:
    post:
      operationId: pauseExecution
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
        "409":
          description: if the executions is not running
        "200":
          description: pauseExecution 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Pause a running execution.
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}/replay:
    post:
      operationId: replayExecution
      parameters:
      - description: the original execution id to clone
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The taskrun id
        explode: false
        in: query
        name: taskRunId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The flow revision to use for new execution
        explode: false
        in: query
        name: revision
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - description: "Set a list of breakpoints at specific tasks 'id.value', separated\
          \ by a coma."
        explode: false
        in: query
        name: breakpoints
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Execution"
          description: replayExecution 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Create a new execution from an old one and start it from a specified
        task run id
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}/replay-with-inputs:
    post:
      operationId: replayExecutionWithinputs
      parameters:
      - description: the original execution id to clone
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The taskrun id
        explode: false
        in: query
        name: taskRunId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The flow revision to use for new execution
        explode: false
        in: query
        name: revision
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - description: "Set a list of breakpoints at specific tasks 'id.value', separated\
          \ by a coma."
        explode: false
        in: query
        name: breakpoints
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              items:
                format: binary
                type: string
              type: array
        description: The inputs
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Execution"
          description: replayExecutionWithinputs 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Create a new execution from an old one and start it from a specified
        task run id
      tags:
      - Executions
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}/restart:
    post:
      operationId: restartExecution
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The flow revision to use for new execution
        explode: false
        in: query
        name: revision
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Execution"
          description: restartExecution 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Restart a new execution from an old one
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}/resume:
    post:
      operationId: resumeExecution
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              items:
                format: binary
                type: string
              type: array
        description: The inputs
        required: true
      responses:
        "204":
          description: On success
        "409":
          description: if the executions is not paused
        "200":
          content:
            application/json:
              schema:
                type: object
          description: resumeExecution 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Resume a paused execution.
      tags:
      - Executions
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}/resume-from-breakpoint:
    post:
      operationId: resumeExecutionFromBreakpoint
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: "\"Set a list of breakpoints at specific tasks 'id.value', separated\
          \ by a coma."
        explode: false
        in: query
        name: breakpoints
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
        "409":
          description: If the executions is not in the 'BREAKPOINT' state or has no
            breakpoint
        "200":
          description: resumeExecutionFromBreakpoint 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Resume an execution from a breakpoint (in the 'BREAKPOINT' state).
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}/resume/validate:
    post:
      operationId: validateResumeExecutionInputs
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              items:
                format: binary
                type: string
              type: array
        description: The inputs
        required: true
      responses:
        "204":
          description: On success
        "409":
          description: if the executions is not paused
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ExecutionController.ApiValidateExecutionInputsResponse"
                type: array
          description: validateResumeExecutionInputs 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Validate inputs to resume a paused execution.
      tags:
      - Executions
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}/state:
    post:
      operationId: updateTaskRunState
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExecutionController.StateRequest"
        description: the taskRun id and state to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Execution"
          description: updateTaskRunState 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Change state for a taskrun in an execution
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}/unqueue:
    post:
      operationId: unqueueExecution
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The new state of the execution
        explode: false
        in: query
        name: state
        required: true
        schema:
          $ref: "#/components/schemas/State.Type"
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Execution"
          description: unqueueExecution 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Unqueue an execution
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{namespace}/{id}:
    post:
      operationId: createExecution
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The labels as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: If the server will wait the end of the execution
        explode: false
        in: query
        name: wait
        required: true
        schema:
          default: false
          type: boolean
        style: form
      - description: The flow revision or latest if null
        explode: false
        in: query
        name: revision
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - description: Schedule the flow on a specific date
        explode: false
        in: query
        name: scheduleDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: "Set a list of breakpoints at specific tasks 'id.value', separated\
          \ by a coma."
        explode: false
        in: query
        name: breakpoints
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Specific execution kind
        explode: false
        in: query
        name: kind
        required: false
        schema:
          allOf:
          - $ref: "#/components/schemas/ExecutionKind"
          nullable: true
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              items:
                format: binary
                type: string
              type: array
        description: The inputs
      responses:
        "409":
          description: if the flow is disabled
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ExecutionController.ExecutionResponse"
                type: array
          description: createExecution 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Create a new execution for a flow
      tags:
      - Executions
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{namespace}/{id}/validate:
    post:
      operationId: validateNewExecutionInputs
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The labels as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The flow revision or latest if null
        explode: false
        in: query
        name: revision
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              items:
                format: binary
                type: string
              type: array
        description: The inputs
        required: true
      responses:
        "409":
          description: if the flow is disabled
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ExecutionController.ApiValidateExecutionInputsResponse"
                type: array
          description: validateNewExecutionInputs 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Validate the creation of a new execution for a flow
      tags:
      - Executions
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows:
    post:
      operationId: createFlow
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
        description: The flow source code
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlowWithSource"
          description: createFlow 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Create a flow from yaml source
      tags:
      - Flows
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/bulk:
    post:
      description: |-
        All flow will be created / updated for this namespace.
        Flow that already created but not in `flows` will be deleted if the query delete is `true`
      operationId: bulkUpdateFlows
      parameters:
      - description: If missing flow should be deleted
        explode: false
        in: query
        name: delete
        required: true
        schema:
          default: true
          type: boolean
        style: form
      - description: The namespace where to update flows
        explode: false
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: If namespace child should are allowed to be updated
        explode: false
        in: query
        name: allowNamespaceChild
        required: true
        schema:
          default: false
          type: boolean
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-yaml:
            schema:
              nullable: true
              type: string
        description: A list of flows source code splitted with "---"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/FlowInterface"
                type: array
          description: bulkUpdateFlows 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Update from multiples yaml sources
      tags:
      - Flows
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/delete/by-ids:
    delete:
      operationId: deleteFlowsByIds
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/IdWithNamespace"
              type: array
        description: A list of tuple flow ID and namespace as flow identifiers
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
          description: deleteFlowsByIds 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Delete flows by their IDs.
      tags:
      - Flows
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/delete/by-query:
    delete:
      operationId: deleteFlowsByQuery
      parameters:
      - deprecated: true
        description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: The scope of the flows to include
        explode: false
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: "#/components/schemas/FlowScope"
          nullable: true
          type: array
        style: form
      - deprecated: true
        description: A namespace filter prefix
        explode: false
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/deleteExecutionsByQuery_request"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
          description: deleteFlowsByQuery 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Delete flows returned by the query parameters.
      tags:
      - Flows
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/disable/by-ids:
    post:
      operationId: disableFlowsByIds
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/IdWithNamespace"
              type: array
        description: A list of tuple flow ID and namespace as flow identifiers
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
          description: disableFlowsByIds 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Disable flows by their IDs.
      tags:
      - Flows
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/disable/by-query:
    post:
      operationId: disableFlowsByQuery
      parameters:
      - deprecated: true
        description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: The scope of the flows to include
        explode: false
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: "#/components/schemas/FlowScope"
          nullable: true
          type: array
        style: form
      - deprecated: true
        description: A namespace filter prefix
        explode: false
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/deleteExecutionsByQuery_request"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
          description: disableFlowsByQuery 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Disable flows returned by the query parameters.
      tags:
      - Flows
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/distinct-namespaces:
    get:
      operationId: listDistinctNamespaces
      parameters:
      - description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: listDistinctNamespaces 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: List all distinct namespaces
      tags:
      - Flows
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/enable/by-ids:
    post:
      operationId: enableFlowsByIds
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/IdWithNamespace"
              type: array
        description: A list of tuple flow ID and namespace as flow identifiers
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
          description: enableFlowsByIds 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Enable flows by their IDs.
      tags:
      - Flows
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/enable/by-query:
    post:
      operationId: enableFlowsByQuery
      parameters:
      - deprecated: true
        description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: The scope of the flows to include
        explode: false
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: "#/components/schemas/FlowScope"
          nullable: true
          type: array
        style: form
      - deprecated: true
        description: A namespace filter prefix
        explode: false
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/deleteExecutionsByQuery_request"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
          description: enableFlowsByQuery 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Enable flows returned by the query parameters.
      tags:
      - Flows
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/export/by-ids:
    post:
      operationId: exportFlowsByIds
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/IdWithNamespace"
              type: array
        description: A list of tuple flow ID and namespace as flow identifiers
        required: true
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: byte
                type: string
          description: exportFlowsByIds 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Export flows as a ZIP archive of yaml sources.
      tags:
      - Flows
      x-content-type: application/json
      x-accepts:
      - application/octet-stream
  /api/v1/{tenant}/flows/export/by-query:
    get:
      operationId: exportFlowsByQuery
      parameters:
      - description: Filters
        explode: false
        in: query
        name: filters
        required: false
        schema:
          items:
            $ref: "#/components/schemas/QueryFilter"
          nullable: true
          type: array
        style: form
      - deprecated: true
        description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: The scope of the flows to include
        explode: false
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: "#/components/schemas/FlowScope"
          nullable: true
          type: array
        style: form
      - deprecated: true
        description: A namespace filter prefix
        explode: false
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: byte
                type: string
          description: exportFlowsByQuery 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Export flows as a ZIP archive of yaml sources.
      tags:
      - Flows
      x-accepts:
      - application/octet-stream
  /api/v1/{tenant}/flows/graph:
    post:
      operationId: generateFlowGraphFromSource
      parameters:
      - description: The subflow tasks to display
        explode: false
        in: query
        name: subflows
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
        description: The flow source code
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlowGraph"
          description: generateFlowGraphFromSource 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Generate a graph for a flow source
      tags:
      - Flows
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/import:
    post:
      operationId: importFlows
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            encoding:
              fileUpload:
                contentType: application/octet-stream
                explode: false
                style: form
            schema:
              $ref: "#/components/schemas/bulkImportApps_request"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: On success
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: |2
            Import flows as a ZIP archive of yaml sources or a multi-objects YAML file.
            When sending a Yaml that contains one or more flows, a list of index is returned.
            When sending a ZIP archive, a list of files that couldn't be imported is returned.
      tags:
      - Flows
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/search:
    get:
      operationId: searchFlows
      parameters:
      - description: The current page
        explode: false
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: false
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The sort of current page
        explode: false
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: Filters
        explode: false
        in: query
        name: filters
        required: false
        schema:
          items:
            $ref: "#/components/schemas/QueryFilter"
          nullable: true
          type: array
        style: form
      - deprecated: true
        description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: The scope of the flows to include
        explode: false
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: "#/components/schemas/FlowScope"
          nullable: true
          type: array
        style: form
      - deprecated: true
        description: A namespace filter prefix
        explode: false
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_Flow_"
          description: searchFlows 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Search for flows
      tags:
      - Flows
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/source:
    get:
      operationId: searchFlowsBySourceCode
      parameters:
      - description: The current page
        explode: false
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: false
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The sort of current page
        explode: false
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter prefix
        explode: false
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_SearchResult_Flow__"
          description: searchFlowsBySourceCode 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Search for flows source code
      tags:
      - Flows
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/validate:
    post:
      operationId: validateFlows
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
        description: A list of flows source code in a single string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ValidateConstraintViolation"
                type: array
          description: validateFlows 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Validate a list of flows
      tags:
      - Flows
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/validate/task:
    post:
      operationId: validateTask
      parameters:
      - description: The type of task
        explode: false
        in: query
        name: section
        required: true
        schema:
          $ref: "#/components/schemas/FlowController.TaskValidationType"
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
          application/json:
            schema:
              type: string
            example: null
        description: A task definition that can be from tasks or triggers
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidateConstraintViolation"
          description: validateTask 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Validate a task
      tags:
      - Flows
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/validate/trigger:
    post:
      operationId: validateTrigger
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: The trigger
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidateConstraintViolation"
          description: validateTrigger 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Validate trigger
      tags:
      - Flows
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/{namespace}:
    get:
      operationId: listFlowsByNamespace
      parameters:
      - description: Namespace to filter flows
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Flow"
                type: array
          description: listFlowsByNamespace 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Retrieve all flows from a given namespace
      tags:
      - Flows
      x-accepts:
      - application/json
    post:
      deprecated: true
      description: |-
        All flow will be created / updated for this namespace.
        Flow that already created but not in `flows` will be deleted if the query delete is `true`
      operationId: updateFlowsInNamespaceFromJson
      parameters:
      - description: If missing flow should be deleted
        explode: false
        in: query
        name: delete
        required: true
        schema:
          default: true
          type: boolean
        style: form
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/Flow"
              type: array
          application/x-yaml:
            schema:
              type: string
            example: null
        description: A list of flows
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/updateFlowsInNamespaceFromJson_200_response"
              example: null
          description: updateFlowsInNamespaceFromJson 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Update a complete namespace from json object
      tags:
      - Flows
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/{namespace}/{id}:
    delete:
      operationId: deleteFlow
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
        "200":
          description: deleteFlow 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Delete a flow
      tags:
      - Flows
      x-accepts:
      - application/json
    get:
      operationId: getFlow
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Include the source code
        explode: false
        in: query
        name: source
        required: true
        schema:
          default: false
          type: boolean
        style: form
      - description: Get latest revision by default
        explode: false
        in: query
        name: revision
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - description: Get flow even if deleted
        explode: false
        in: query
        name: allowDeleted
        required: true
        schema:
          default: false
          type: boolean
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: getFlow 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get a flow
      tags:
      - Flows
      x-accepts:
      - application/json
    put:
      deprecated: true
      operationId: updateFlow
      parameters:
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
            example: null
          '*/*':
            schema:
              $ref: "#/components/schemas/Flow"
            example: null
        description: The flow source code
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/updateFlow_200_response"
              example: null
          description: updateFlow 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Update a flow
      tags:
      - Flows
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/{namespace}/{id}/dependencies:
    get:
      operationId: getFlowDependencies
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "If true, list only destination dependencies, otherwise list\
          \ also source dependencies"
        explode: false
        in: query
        name: destinationOnly
        required: true
        schema:
          default: false
          type: boolean
        style: form
      - description: "If true, expand all dependencies recursively"
        explode: false
        in: query
        name: expandAll
        required: true
        schema:
          default: false
          type: boolean
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlowTopologyGraph"
          description: getFlowDependencies 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get flow dependencies
      tags:
      - Flows
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/{namespace}/{id}/graph:
    get:
      operationId: generateFlowGraph
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The flow revision
        explode: false
        in: query
        name: revision
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - description: The subflow tasks to display
        explode: false
        in: query
        name: subflows
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlowGraph"
          description: Return a FlowGraph object
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Generate a graph for a flow
      tags:
      - Flows
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/{namespace}/{id}/revisions:
    get:
      operationId: listFlowRevisions
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/FlowWithSource"
                type: array
          description: listFlowRevisions 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get revisions for a flow
      tags:
      - Flows
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/{namespace}/{id}/tasks/{taskId}:
    get:
      operationId: getTaskFromFlow
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The task id
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      - description: The flow revision
        explode: false
        in: query
        name: revision
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
          description: getTaskFromFlow 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get a flow task
      tags:
      - Flows
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/{namespace}/{id}/{taskId}:
    patch:
      deprecated: true
      operationId: updateTask
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The task id
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
        description: The task
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Flow"
          description: updateTask 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Update a single task on a flow
      tags:
      - Flows
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/groups:
    post:
      operationId: createGroup
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IAMGroupController.ApiCreateGroupRequest"
        description: The group
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IAMGroupController.ApiGroupDetail"
          description: Group was created successfully
        "409":
          description: A group with the given name already exists
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Create a group
      tags:
      - Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/groups/autocomplete:
    post:
      operationId: autocompleteGroups
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiAutocomplete"
        description: Autocomplete request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ApiGroupSummary"
                type: array
          description: autocompleteGroups 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: List groups for autocomplete
      tags:
      - Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/groups/ids:
    post:
      operationId: listGroupIds
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiIds"
        description: The ids that must be present on results
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ApiGroupSummary"
                type: array
          description: listGroupIds 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: List groups by ids
      tags:
      - Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/groups/search:
    get:
      operationId: searchGroups
      parameters:
      - description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: false
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: false
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: false
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_ApiGroupSummary_"
          description: searchGroups 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Search for groups
      tags:
      - Groups
      x-accepts:
      - application/json
  /api/v1/{tenant}/groups/{id}:
    delete:
      operationId: deleteGroup
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Group was deleted successfully
        "404":
          description: Group not found
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Delete a group
      tags:
      - Groups
      x-accepts:
      - application/json
    get:
      description: Retrieves details of a specific group by its ID within the current
        tenant.
      operationId: getGroup
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IAMGroupController.ApiGroupDetail"
          description: Group details successfully retrieved
        "404":
          description: Group not found
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Retrieve a group
      tags:
      - Groups
      x-accepts:
      - application/json
    put:
      operationId: updateGroup
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IAMGroupController.ApiUpdateGroupRequest"
        description: The group
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IAMGroupController.ApiGroupDetail"
          description: Group was updated successfully
        "404":
          description: Group not found
        "409":
          description: A group with the given name already exists
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Update a group
      tags:
      - Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/groups/{id}/members:
    get:
      operationId: searchGroupMembers
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: false
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: false
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: false
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_IAMGroupController.ApiGroupMember_"
          description: searchGroupMembers 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Search for users in a group
      tags:
      - Groups
      x-accepts:
      - application/json
  /api/v1/{tenant}/groups/{id}/members/membership/{userId}:
    put:
      description: Allows a group owner or an authorized user to change the role of
        a user within a group to OWNER or MEMBER.
      operationId: setUserMembershipForGroup
      parameters:
      - description: The ID of the group
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the user whose membership is being updated
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: The new membership type to assign to the user.
        explode: false
        in: query
        name: membership
        required: true
        schema:
          $ref: "#/components/schemas/GroupIdentifier.Membership"
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IAMGroupController.ApiGroupMember"
          description: Membership type successfully updated
        "404":
          description: User or group not found
        "409":
          description: User is not a member of the group
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Update a user's membership type in a group
      tags:
      - Groups
      x-accepts:
      - application/json
  /api/v1/{tenant}/groups/{id}/members/{userId}:
    delete:
      description: "Removes the specified user from the given group. If the user has\
        \ no other group bindings within the tenant, their access to the tenant will\
        \ also be revoked."
      operationId: deleteUserFromGroup
      parameters:
      - description: The ID of the group
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the user to remove from the group
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IAMGroupController.ApiGroupMember"
          description: User was successfully removed from the group
        "404":
          description: Group or user not found
        "409":
          description: User is not a member of the group
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Remove a user from a group
      tags:
      - Groups
      x-accepts:
      - application/json
    put:
      description: "Adds the specified user to the given group. If the user does not\
        \ already have access to the tenant, tenant access will be created automatically."
      operationId: addUserToGroup
      parameters:
      - description: The ID of the group
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the user to add to the group
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IAMGroupController.ApiGroupMember"
          description: User was successfully added to the group
        "404":
          description: Group or user not found
        "409":
          description: User is already a member of the group
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Add a user to a group
      tags:
      - Groups
      x-accepts:
      - application/json
  /api/v1/{tenant}/integrations/{integration}/scim/v2/Groups:
    get:
      description: Find by a combination of query parameters
      operationId: queryGroups
      parameters:
      - explode: false
        in: query
        name: attributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: query
        name: sortBy
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: query
        name: sortOrder
        required: false
        schema:
          allOf:
          - $ref: "#/components/schemas/SortOrder"
          nullable: true
        style: form
      - explode: false
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - explode: false
        in: query
        name: count
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimResource"
          description: OK response
      tags:
      - SCIM-Groups
      x-accepts:
      - application/scim+json
    post:
      description: Create
      operationId: createSCIMResourceByIdGroups
      parameters:
      - explode: false
        in: query
        name: attributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: "#/components/schemas/ScimUser"
        required: true
      responses:
        "201":
          content:
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimResource"
          description: Created
        "400":
          description: Bad Request
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
      tags:
      - SCIM-Groups
      x-content-type: application/scim+json
      x-accepts:
      - application/scim+json
  /api/v1/{tenant}/integrations/{integration}/scim/v2/Groups/.search:
    post:
      description: Search
      operationId: findGroups
      parameters:
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: "#/components/schemas/SearchRequest"
        required: true
      responses:
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimResource"
          description: OK response
      tags:
      - SCIM-Groups
      x-content-type: application/scim+json
      x-accepts:
      - application/scim+json
  /api/v1/{tenant}/integrations/{integration}/scim/v2/Groups/{id}:
    delete:
      description: Delete from the backing store
      operationId: deleteGroups
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
      tags:
      - SCIM-Groups
      x-accepts:
      - application/json
    get:
      description: Find by id
      operationId: getSCIMResourceByIdGroups
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: query
        name: attributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimResource"
          description: OK response
      tags:
      - SCIM-Groups
      x-accepts:
      - application/scim+json
    patch:
      description: Patch a portion of the backing store
      operationId: patchGroups
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: query
        name: attributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: "#/components/schemas/PatchRequest"
        required: true
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
      tags:
      - SCIM-Groups
      x-content-type: application/scim+json
      x-accepts:
      - application/json
    put:
      description: Update
      operationId: updateGroups
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: query
        name: attributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: "#/components/schemas/ScimResource"
        required: true
      responses:
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimResource"
          description: OK response
      tags:
      - SCIM-Groups
      x-content-type: application/scim+json
      x-accepts:
      - application/scim+json
  /api/v1/{tenant}/integrations/{integration}/scim/v2/ResourceTypes:
    get:
      description: Get All Resource Types
      operationId: getAllResourceTypes
      parameters:
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                items:
                  $ref: "#/components/schemas/ResourceType"
                type: array
          description: OK response
      tags:
      - SCIM-Configuration
      x-accepts:
      - application/scim+json
  /api/v1/{tenant}/integrations/{integration}/scim/v2/ResourceTypes/{name}:
    get:
      description: Get Resource Type by URN
      operationId: getResourceType
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ResourceType"
          description: OK response
      tags:
      - SCIM-Configuration
      x-accepts:
      - application/scim+json
  /api/v1/{tenant}/integrations/{integration}/scim/v2/Schemas:
    get:
      description: Get All Schemas
      operationId: getAllSchemas
      parameters:
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                items:
                  $ref: "#/components/schemas/Schema"
                type: array
          description: OK response
      tags:
      - SCIM-Configuration
      x-accepts:
      - application/scim+json
  /api/v1/{tenant}/integrations/{integration}/scim/v2/Schemas/{uri}:
    get:
      description: Get Schemas by URN
      operationId: getSchema
      parameters:
      - explode: false
        in: path
        name: uri
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: "#/components/schemas/Schema"
          description: OK response
      tags:
      - SCIM-Configuration
      x-accepts:
      - application/scim+json
  /api/v1/{tenant}/integrations/{integration}/scim/v2/ServiceProviderConfig:
    get:
      description: Get Service Provider Configuration
      operationId: getServiceProviderConfiguration
      parameters:
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ServiceProviderConfiguration"
          description: OK response
      tags:
      - SCIM-Configuration
      x-accepts:
      - application/scim+json
  /api/v1/{tenant}/integrations/{integration}/scim/v2/Users:
    get:
      description: Find by a combination of query parameters
      operationId: queryUsers
      parameters:
      - explode: false
        in: query
        name: attributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: query
        name: sortBy
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: query
        name: sortOrder
        required: false
        schema:
          allOf:
          - $ref: "#/components/schemas/SortOrder"
          nullable: true
        style: form
      - explode: false
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - explode: false
        in: query
        name: count
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimResource"
          description: OK response
      tags:
      - SCIM-Users
      x-accepts:
      - application/scim+json
    post:
      description: Create
      operationId: createSCIMResourceByIdUsers
      parameters:
      - explode: false
        in: query
        name: attributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: "#/components/schemas/ScimUser"
        required: true
      responses:
        "201":
          content:
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimResource"
          description: Created
        "400":
          description: Bad Request
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
      tags:
      - SCIM-Users
      x-content-type: application/scim+json
      x-accepts:
      - application/scim+json
  /api/v1/{tenant}/integrations/{integration}/scim/v2/Users/.search:
    post:
      description: Search
      operationId: findUsers
      parameters:
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: "#/components/schemas/SearchRequest"
        required: true
      responses:
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimResource"
          description: OK response
      tags:
      - SCIM-Users
      x-content-type: application/scim+json
      x-accepts:
      - application/scim+json
  /api/v1/{tenant}/integrations/{integration}/scim/v2/Users/{id}:
    delete:
      description: Delete from the backing store
      operationId: deleteUsers
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
      tags:
      - SCIM-Users
      x-accepts:
      - application/json
    get:
      description: Find by id
      operationId: getSCIMResourceByIdUsers
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: query
        name: attributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimResource"
          description: OK response
      tags:
      - SCIM-Users
      x-accepts:
      - application/scim+json
    patch:
      description: Patch a portion of the backing store
      operationId: patchUsers
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: query
        name: attributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: "#/components/schemas/PatchRequest"
        required: true
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
      tags:
      - SCIM-Users
      x-content-type: application/scim+json
      x-accepts:
      - application/json
    put:
      description: Update
      operationId: updateUsers
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: query
        name: attributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: "#/components/schemas/ScimResource"
        required: true
      responses:
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimResource"
          description: OK response
      tags:
      - SCIM-Users
      x-content-type: application/scim+json
      x-accepts:
      - application/scim+json
  /api/v1/{tenant}/invitations:
    post:
      description: Creates a new invitation and sends an email if the mail server
        is enabled.
      operationId: createInvitation
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IAMInvitationController.ApiInvitationCreateRequest"
        description: "Create a new invitation, send an email if the server-mail is\
          \ enabled"
        required: true
      responses:
        "201":
          description: Invitation successfully created
        "204":
          description: Tenant access granted to the user
        "403":
          description: Insufficient privileges to invite a Superadmin user
        "409":
          description: "Invitation already exists for the given email, or user already\
            \ had access to the tenant"
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Create an invitation
      tags:
      - Invitations
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/invitations/email/{email}:
    get:
      description: Returns all invitations created for a given email address in the
        current tenant.
      operationId: listInvitationsByEmail
      parameters:
      - description: The email address of the invited
        explode: false
        in: path
        name: email
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/IAMInvitationController.ApiInvitationDetail"
                type: array
          description: listInvitationsByEmail 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Retrieve all invitations for a given email
      tags:
      - Invitations
      x-accepts:
      - application/json
  /api/v1/{tenant}/invitations/search:
    get:
      description: "Search and filter invitations by email, status, and pagination."
      operationId: searchInvitations
      parameters:
      - description: The email address of the invited
        explode: false
        in: query
        name: email
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current status of the invitations
        explode: false
        in: query
        name: status
        required: false
        schema:
          allOf:
          - $ref: "#/components/schemas/Invitation.InvitationStatus"
          nullable: true
        style: form
      - description: The current page
        explode: false
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: false
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: false
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_IAMInvitationController.ApiInvitationDetail_"
          description: searchInvitations 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Search for invitations
      tags:
      - Invitations
      x-accepts:
      - application/json
  /api/v1/{tenant}/invitations/{id}:
    delete:
      description: Deletes the invitation by its ID.
      operationId: deleteInvitation
      parameters:
      - description: The id of the invitation
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Invitation successfully deleted
        "404":
          description: Invitation not found
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Delete an invitation
      tags:
      - Invitations
      x-accepts:
      - application/json
    get:
      description: "Retrieves the invitation by its ID, including the invitation link."
      operationId: getInvitation
      parameters:
      - description: The id of the invitation
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          description: Invitation not found
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IAMInvitationController.ApiInvitationDetail"
          description: getInvitation 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Retrieve an invitation
      tags:
      - Invitations
      x-accepts:
      - application/json
  /api/v1/{tenant}/logs/search:
    get:
      operationId: searchLogs
      parameters:
      - description: The current page
        explode: false
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: false
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The sort of current page
        explode: false
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: Filters
        explode: false
        in: query
        name: filters
        required: false
        schema:
          items:
            $ref: "#/components/schemas/QueryFilter"
          nullable: true
          type: array
        style: form
      - deprecated: true
        description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: A namespace filter prefix
        explode: false
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: A flow id filter
        explode: false
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: A trigger id filter
        explode: false
        in: query
        name: triggerId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: The min log level filter
        explode: false
        in: query
        name: minLevel
        required: false
        schema:
          allOf:
          - $ref: "#/components/schemas/Level"
          nullable: true
        style: form
      - deprecated: true
        description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_LogEntry_"
          description: searchLogs 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Search for logs
      tags:
      - Logs
      x-accepts:
      - application/json
  /api/v1/{tenant}/logs/{executionId}:
    delete:
      operationId: deleteLogsFromExecution
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The min log level filter
        explode: false
        in: query
        name: minLevel
        required: false
        schema:
          allOf:
          - $ref: "#/components/schemas/Level"
          nullable: true
        style: form
      - description: The taskrun id
        explode: false
        in: query
        name: taskRunId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The task id
        explode: false
        in: query
        name: taskId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The attempt number
        explode: false
        in: query
        name: attempt
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: deleteLogsFromExecution 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: "Delete logs for a specific execution, taskrun or task"
      tags:
      - Logs
      x-accepts:
      - application/json
    get:
      operationId: listLogsFromExecution
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The min log level filter
        explode: false
        in: query
        name: minLevel
        required: false
        schema:
          allOf:
          - $ref: "#/components/schemas/Level"
          nullable: true
        style: form
      - description: The taskrun id
        explode: false
        in: query
        name: taskRunId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The task id
        explode: false
        in: query
        name: taskId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The attempt number
        explode: false
        in: query
        name: attempt
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/LogEntry"
                type: array
          description: listLogsFromExecution 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: "Get logs for a specific execution, taskrun or task"
      tags:
      - Logs
      x-accepts:
      - application/json
  /api/v1/{tenant}/logs/{executionId}/download:
    get:
      operationId: downloadLogsFromExecution
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The min log level filter
        explode: false
        in: query
        name: minLevel
        required: false
        schema:
          allOf:
          - $ref: "#/components/schemas/Level"
          nullable: true
        style: form
      - description: The taskrun id
        explode: false
        in: query
        name: taskRunId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The task id
        explode: false
        in: query
        name: taskId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The attempt number
        explode: false
        in: query
        name: attempt
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
          description: downloadLogsFromExecution 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: "Download logs for a specific execution, taskrun or task"
      tags:
      - Logs
      x-accepts:
      - text/plain
  /api/v1/{tenant}/logs/{executionId}/follow:
    get:
      operationId: followLogsFromExecution
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The min log level filter
        explode: false
        in: query
        name: minLevel
        required: false
        schema:
          allOf:
          - $ref: "#/components/schemas/Level"
          nullable: true
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/event-stream:
              schema:
                $ref: "#/components/schemas/Event_LogEntry_"
          description: followLogsFromExecution 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Follow logs for a specific execution
      tags:
      - Logs
      x-accepts:
      - text/event-stream
  /api/v1/{tenant}/logs/{namespace}/{flowId}:
    delete:
      operationId: deleteLogsFromFlow
      parameters:
      - description: The namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow identifier
        explode: false
        in: path
        name: flowId
        required: true
        schema:
          type: string
        style: simple
      - description: The trigger id
        explode: false
        in: query
        name: triggerId
        required: true
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: deleteLogsFromFlow 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: "Delete logs for a specific execution, taskrun or task"
      tags:
      - Logs
      x-accepts:
      - application/json
  /api/v1/{tenant}/metrics/aggregates/{namespace}/{flowId}/{metric}:
    get:
      operationId: aggregateMetricsFromFlow
      parameters:
      - description: The namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow Id
        explode: false
        in: path
        name: flowId
        required: true
        schema:
          type: string
        style: simple
      - description: The metric name
        explode: false
        in: path
        name: metric
        required: true
        schema:
          type: string
        style: simple
      - description: "The start datetime, default to now - 30 days"
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: "The end datetime, default to now"
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: "The type of aggregation: avg, sum, min or max"
        explode: false
        in: query
        name: aggregation
        required: true
        schema:
          default: sum
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricAggregations"
          description: aggregateMetricsFromFlow 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get metrics aggregations for a specific flow
      tags:
      - Metrics
      x-accepts:
      - application/json
  /api/v1/{tenant}/metrics/aggregates/{namespace}/{flowId}/{taskId}/{metric}:
    get:
      operationId: aggregateMetricsFromTask
      parameters:
      - description: The namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow Id
        explode: false
        in: path
        name: flowId
        required: true
        schema:
          type: string
        style: simple
      - description: The task Id
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      - description: The metric name
        explode: false
        in: path
        name: metric
        required: true
        schema:
          type: string
        style: simple
      - description: "The start datetime, default to now - 30 days"
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: "The end datetime, default to now"
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: "The type of aggregation: avg, sum, min or max"
        explode: false
        in: query
        name: aggregation
        required: true
        schema:
          default: sum
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricAggregations"
          description: aggregateMetricsFromTask 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get metrics aggregations for a specific flow
      tags:
      - Metrics
      x-accepts:
      - application/json
  /api/v1/{tenant}/metrics/names/{namespace}/{flowId}:
    get:
      operationId: listFlowMetrics
      parameters:
      - description: The namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow Id
        explode: false
        in: path
        name: flowId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: listFlowMetrics 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get metrics names for a specific flow
      tags:
      - Metrics
      x-accepts:
      - application/json
  /api/v1/{tenant}/metrics/names/{namespace}/{flowId}/{taskId}:
    get:
      operationId: listTaskMetrics
      parameters:
      - description: The namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow Id
        explode: false
        in: path
        name: flowId
        required: true
        schema:
          type: string
        style: simple
      - description: The task Id
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: listTaskMetrics 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get metrics names for a specific task in a flow
      tags:
      - Metrics
      x-accepts:
      - application/json
  /api/v1/{tenant}/metrics/tasks/{namespace}/{flowId}:
    get:
      operationId: listTasksWithMetrics
      parameters:
      - description: The namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow Id
        explode: false
        in: path
        name: flowId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: listTasksWithMetrics 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: "Get tasks id that have metrics for a specific flow, include deleted\
        \ or renamed tasks"
      tags:
      - Metrics
      x-accepts:
      - application/json
  /api/v1/{tenant}/metrics/{executionId}:
    get:
      operationId: searchByExecution
      parameters:
      - description: The current page
        explode: false
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: false
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The sort of current page
        explode: false
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The taskrun id
        explode: false
        in: query
        name: taskRunId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The task id
        explode: false
        in: query
        name: taskId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_MetricEntry_"
          description: searchByExecution 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get metrics for a specific execution
      tags:
      - Metrics
      x-accepts:
      - application/json
  /api/v1/{tenant}/namespaces:
    post:
      operationId: createNamespace
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Namespace"
        description: The namespace
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Namespace"
          description: createNamespace 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Create a namespace
      tags:
      - Namespaces
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/namespaces/autocomplete:
    post:
      description: "Returns a list of namespaces for use in autocomplete fields, optionally\
        \ allowing to filter by query and ids. Used especially for binding creation."
      operationId: autocompleteNamespaces
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiAutocomplete"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: autocompleteNamespaces 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: List namespaces for autocomplete
      tags:
      - Namespaces
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/namespaces/search:
    get:
      operationId: searchNamespaces
      parameters:
      - description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: false
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: false
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The sort of current page
        explode: false
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: Return only existing namespace
        explode: false
        in: query
        name: existing
        required: true
        schema:
          default: false
          type: boolean
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_Namespace_"
          description: searchNamespaces 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Search for namespaces
      tags:
      - Namespaces
      x-accepts:
      - application/json
  /api/v1/{tenant}/namespaces/{id}:
    delete:
      operationId: deleteNamespace
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Delete a namespace
      tags:
      - Namespaces
      x-accepts:
      - application/json
    get:
      operationId: getNamespace
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Namespace"
          description: getNamespace 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get a namespace
      tags:
      - Namespaces
      x-accepts:
      - application/json
    put:
      operationId: updateNamespace
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Namespace"
        description: The namespace
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Namespace"
          description: updateNamespace 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Update a namespace
      tags:
      - Namespaces
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/namespaces/{id}/inherited-plugindefaults:
    get:
      operationId: inheritedPluginDefaults
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PluginDefault"
                type: array
          description: inheritedPluginDefaults 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: List inherited plugin defaults
      tags:
      - Namespaces
      x-accepts:
      - application/json
  /api/v1/{tenant}/namespaces/{id}/inherited-variables:
    get:
      operationId: inheritedVariables
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: inheritedVariables 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: List inherited variables
      tags:
      - Namespaces
      x-accepts:
      - application/json
  /api/v1/{tenant}/namespaces/{namespace}/dependencies:
    get:
      operationId: getFlowDependenciesFromNamespace
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: "if true, list only destination dependencies, otherwise list\
          \ also source dependencies"
        explode: false
        in: query
        name: destinationOnly
        required: true
        schema:
          default: false
          type: boolean
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlowTopologyGraph"
          description: getFlowDependenciesFromNamespace 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Retrieve flow dependencies
      tags:
      - Flows
      x-accepts:
      - application/json
  /api/v1/{tenant}/namespaces/{namespace}/files:
    delete:
      operationId: deleteFileDirectory
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri of the file / directory to delete
        explode: false
        in: query
        name: path
        required: true
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: deleteFileDirectory 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Delete a file or directory
      tags:
      - Files
      x-accepts:
      - application/json
    get:
      operationId: getFileContent
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri
        explode: false
        in: query
        name: path
        required: true
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: getFileContent 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get namespace file content
      tags:
      - Files
      x-accepts:
      - application/octet-stream
    post:
      operationId: createNamespaceFile
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri
        explode: false
        in: query
        name: path
        required: true
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            encoding:
              fileContent:
                contentType: application/octet-stream
                explode: false
                style: form
            schema:
              $ref: "#/components/schemas/createNamespaceFile_request"
        required: true
      responses:
        "200":
          description: createNamespaceFile 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Create a file
      tags:
      - Files
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
    put:
      operationId: moveFileDirectory
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri to move from
        explode: false
        in: query
        name: from
        required: true
        schema:
          format: uri
          type: string
        style: form
      - description: The internal storage uri to move to
        explode: false
        in: query
        name: to
        required: true
        schema:
          format: uri
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: moveFileDirectory 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Move a file or directory
      tags:
      - Files
      x-accepts:
      - application/json
  /api/v1/{tenant}/namespaces/{namespace}/files/directory:
    get:
      operationId: listNamespaceDirectoryFiles
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri
        explode: false
        in: query
        name: path
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/FileAttributes"
                type: array
          description: listNamespaceDirectoryFiles 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: List directory content
      tags:
      - Files
      x-accepts:
      - application/json
    post:
      operationId: createNamespaceDirectory
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri
        explode: false
        in: query
        name: path
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: createNamespaceDirectory 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Create a directory
      tags:
      - Files
      x-accepts:
      - application/json
  /api/v1/{tenant}/namespaces/{namespace}/files/export:
    get:
      operationId: exportNamespaceFiles
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: byte
                type: string
          description: exportNamespaceFiles 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Export namespace files as a ZIP
      tags:
      - Files
      x-accepts:
      - application/octet-stream
  /api/v1/{tenant}/namespaces/{namespace}/files/search:
    get:
      operationId: searchNamespaceFiles
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The string the file path should contain
        explode: false
        in: query
        name: q
        required: true
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: searchNamespaceFiles 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Find files which path contain the given string in their URI
      tags:
      - Files
      x-accepts:
      - application/json
  /api/v1/{tenant}/namespaces/{namespace}/files/stats:
    get:
      operationId: getFileMetadatas
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri
        explode: false
        in: query
        name: path
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileAttributes"
          description: getFileMetadatas 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: "Get namespace file stats such as size, creation & modification dates\
        \ and type"
      tags:
      - Files
      x-accepts:
      - application/json
  /api/v1/{tenant}/namespaces/{namespace}/inherited-secrets:
    get:
      operationId: getInheritedSecrets
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: getInheritedSecrets 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: List inherited secrets
      tags:
      - Namespaces
      x-accepts:
      - application/json
  /api/v1/{tenant}/namespaces/{namespace}/kv:
    delete:
      operationId: deleteKeyValues
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KVController.ApiDeleteBulkRequest"
        description: The keys
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KVController.ApiDeleteBulkResponse"
          description: deleteKeyValues 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Bulk-delete multiple key/value pairs from the given namespace.
      tags:
      - KV
      x-content-type: application/json
      x-accepts:
      - application/json
    get:
      operationId: listKeys
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/KVEntry"
                type: array
          description: listKeys 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: List all keys for a namespace
      tags:
      - KV
      x-accepts:
      - application/json
  /api/v1/{tenant}/namespaces/{namespace}/kv/inheritance:
    get:
      operationId: listKeysWithInheritence
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/KVEntry"
                type: array
          description: listKeysWithInheritence 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: List all keys for a namespace and parent namespaces
      tags:
      - KV
      x-accepts:
      - application/json
  /api/v1/{tenant}/namespaces/{namespace}/kv/{key}:
    delete:
      operationId: deleteKeyValue
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: deleteKeyValue 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Delete a key-value pair
      tags:
      - KV
      x-accepts:
      - application/json
    get:
      operationId: getKeyValue
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KVController.TypedValue"
          description: getKeyValue 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get value for a key
      tags:
      - KV
      x-accepts:
      - application/json
    put:
      operationId: setKeyValue
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: string
          text/plain:
            schema:
              type: string
        description: The value of the key
        required: true
      responses:
        "200":
          description: setKeyValue 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Puts a key-value pair in store
      tags:
      - KV
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/namespaces/{namespace}/secrets:
    get:
      operationId: listNamespaceSecrets
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The current page
        explode: false
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: false
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: false
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: Filters
        explode: false
        in: query
        name: filters
        required: true
        schema:
          items:
            $ref: "#/components/schemas/QueryFilter"
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiSecretListResponse"
          description: listNamespaceSecrets 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get secrets for a namespace
      tags:
      - Namespaces
      x-accepts:
      - application/json
    put:
      operationId: putSecrets
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiSecretValue"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ApiSecretMeta"
                type: array
          description: putSecrets 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Update secrets for a namespace
      tags:
      - Namespaces
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/namespaces/{namespace}/secrets/{key}:
    delete:
      operationId: deleteSecret
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The secret key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: deleteSecret 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Delete a secret for a namespace
      tags:
      - Namespaces
      x-accepts:
      - application/json
    patch:
      operationId: patchSecret
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiSecretMetaEE"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ApiSecretMeta"
                type: array
          description: patchSecret 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Patch a secret metadata for a namespace
      tags:
      - Namespaces
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/roles:
    post:
      operationId: createRole
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IAMRoleController.ApiRoleCreateOrUpdateRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IAMRoleController.ApiRoleDetail"
          description: Role successfully created
        "403":
          description: Insufficient privileges to create the role
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Create a role
      tags:
      - Roles
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/roles/autocomplete:
    post:
      operationId: autocompleteRoles
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiAutocomplete"
        description: Autocomplete request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ApiRoleSummary"
                type: array
          description: autocompleteRoles 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: List roles for autocomplete
      tags:
      - Roles
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/roles/ids:
    post:
      operationId: listRolesFromGivenIds
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiIds"
        description: The ids that must be present on results
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Role"
                type: array
          description: listRolesFromGivenIds 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: List roles by ids
      tags:
      - Roles
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/roles/search:
    get:
      operationId: searchRoles
      parameters:
      - description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: false
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: false
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: false
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_ApiRoleSummary_"
          description: searchRoles 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Search for roles
      tags:
      - Roles
      x-accepts:
      - application/json
  /api/v1/{tenant}/roles/{id}:
    delete:
      operationId: deleteRole
      parameters:
      - description: The role id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Delete a role
      tags:
      - Roles
      x-accepts:
      - application/json
    get:
      operationId: getRole
      parameters:
      - description: The role id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          description: Role not found
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IAMRoleController.ApiRoleDetail"
          description: getRole 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Retrieve a role
      tags:
      - Roles
      x-accepts:
      - application/json
    put:
      operationId: updateRole
      parameters:
      - description: The role id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IAMRoleController.ApiRoleCreateOrUpdateRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IAMRoleController.ApiRoleDetail"
          description: Role successfully updated
        "404":
          description: Role not found
        "403":
          description: Insufficient privileges to update the role
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Update a role
      tags:
      - Roles
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/security-integrations:
    get:
      description: Superadmin-only.
      operationId: listSecurityIntegrations
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: listSecurityIntegrations 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: List all security integrations
      tags:
      - SecurityIntegrations
      x-accepts:
      - application/json
    post:
      description: Superadmin-only.
      operationId: createSecurityIntegration
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSecurityIntegrationRequest"
        description: The security integration definition
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: createSecurityIntegration 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Create a security integration
      tags:
      - SecurityIntegrations
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/security-integrations/{id}:
    delete:
      description: Superadmin-only.
      operationId: deleteSecurityIntegration
      parameters:
      - description: The ID of security integration
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: deleteSecurityIntegration 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Delete a security integration
      tags:
      - SecurityIntegrations
      x-accepts:
      - application/json
    get:
      description: Superadmin-only.
      operationId: getSecurityIntegration
      parameters:
      - description: The ID of security integration
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: getSecurityIntegration 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Retrieve a security integration
      tags:
      - SecurityIntegrations
      x-accepts:
      - application/json
  /api/v1/{tenant}/security-integrations/{id}/disable:
    post:
      description: Superadmin-only. Disables the specified integration.
      operationId: disableSecurityIntegration
      parameters:
      - description: The ID of security integration
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: disableSecurityIntegration 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Disable a security integration
      tags:
      - SecurityIntegrations
      x-accepts:
      - application/json
  /api/v1/{tenant}/security-integrations/{id}/enable:
    post:
      description: Superadmin-only. Enables the specified integration.
      operationId: enableSecurityIntegration
      parameters:
      - description: The ID of security integration
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: enableSecurityIntegration 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Enable a security integration
      tags:
      - SecurityIntegrations
      x-accepts:
      - application/json
  /api/v1/{tenant}/service-accounts:
    post:
      operationId: createServiceAccountForTenant
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IAMServiceAccountController.ApiServiceAccountRequest"
        description: The service account
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IAMServiceAccountController.ApiServiceAccountResponse"
          description: Service account successfully created
        "404":
          description: Group not found
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Create a service account for the given tenant
      tags:
      - ServiceAccount
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/service-accounts/{id}:
    delete:
      operationId: deleteServiceAccountForTenant
      parameters:
      - description: The service account id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          description: Service account
        "200":
          description: deleteServiceAccountForTenant 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Delete a service account
      tags:
      - ServiceAccount
      x-accepts:
      - application/json
    get:
      operationId: getServiceAccountForTenant
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          description: Service account not found
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IAMServiceAccountController.ApiServiceAccountResponse"
          description: getServiceAccountForTenant 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Retrieve a service account
      tags:
      - ServiceAccount
      x-accepts:
      - application/json
    put:
      operationId: updateServiceAccount
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IAMServiceAccountController.ApiServiceAccountRequest"
        description: The user
        required: true
      responses:
        "404":
          description: "Service account, or group not found"
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IAMServiceAccountController.ApiServiceAccountResponse"
          description: updateServiceAccount 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Update a user service account
      tags:
      - ServiceAccount
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/service-accounts/{id}/api-tokens:
    get:
      operationId: listApiTokensWithTenant
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: listApiTokensWithTenant 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: List API tokens for a specific user
      tags:
      - Users
      x-accepts:
      - application/json
    post:
      operationId: createApiTokensForUserWithTenant
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateApiTokenRequest"
        description: The create api-token request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: createApiTokensForUserWithTenant 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Create new API Token for a specific user
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/service-accounts/{id}/api-tokens/{tokenId}:
    delete:
      operationId: deleteApiTokenWithTenant
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The token id
        explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: deleteApiTokenWithTenant 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Delete an API Token for specific user and token id
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/{tenant}/stats/generate-reports:
    get:
      operationId: generate
      parameters:
      - description: The start date
        explode: true
        in: query
        name: from
        required: false
        schema:
          format: date
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: byte
                type: string
          description: generate 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      x-accepts:
      - application/octet-stream
  /api/v1/{tenant}/taskruns/search:
    get:
      operationId: searchTaskRun
      parameters:
      - description: The current page
        explode: false
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: false
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The sort of current page
        explode: false
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: Filters
        explode: false
        in: query
        name: filters
        required: false
        schema:
          items:
            $ref: "#/components/schemas/QueryFilter"
          nullable: true
          type: array
        style: form
      - deprecated: true
        description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: A namespace filter prefix
        explode: false
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: A flow id filter
        explode: false
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: false
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: A state filter
        explode: false
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: "#/components/schemas/State.Type"
          nullable: true
          type: array
        style: form
      - deprecated: true
        description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - deprecated: true
        description: The trigger execution id
        explode: false
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: A execution child filter
        explode: false
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: "#/components/schemas/ExecutionRepositoryInterface.ChildFilter"
          nullable: true
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_TaskRun_"
          description: searchTaskRun 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: "Search for taskruns, only available with the Elasticsearch repository"
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenant-access:
    get:
      operationId: listTenantAccess
      parameters:
      - description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: false
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: false
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: false
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The type of user
        explode: false
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: "#/components/schemas/UserType"
          nullable: true
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_IAMTenantAccessController.ApiUserTenantAccess_"
          description: listTenantAccess 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Retrieve users belonging to the tenant
      tags:
      - Tenant Access
      x-accepts:
      - application/json
    post:
      description: Grants tenant access permissions to a user identified by email
      operationId: createTenantAccess
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IAMTenantAccessController.ApiCreateTenantAccessRequest"
        required: true
      responses:
        "204":
          description: Access successfully created
        "404":
          description: User not found
        "409":
          description: User already has access to the tenant
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Create tenant access for a user
      tags:
      - Tenant Access
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenant-access/autocomplete:
    post:
      operationId: autocompleteUsers
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IAMTenantAccessController.UserApiAutocomplete"
        description: Autocomplete request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/IAMTenantAccessController.ApiUserTenantAccess"
                type: array
          description: autocompleteUsers 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: List users for autocomplete
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenant-access/{userId}:
    delete:
      description: Removes tenant access permissions for the specified user
      operationId: deleteTenantAccess
      parameters:
      - description: The user id
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Access successfully deleted
        "404":
          description: "User, or tenant access not found"
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Delete tenant access for a user
      tags:
      - Tenant Access
      x-accepts:
      - application/json
    get:
      description: Fetches the tenant access configuration for a given user
      operationId: getTenantAccess
      parameters:
      - description: The user id
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IAMTenantAccessController.ApiTenantAccess"
          description: Tenant access successfully retrieved
        "404":
          description: "User, or tenant access not found"
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Retrieve tenant access for a user
      tags:
      - Tenant Access
      x-accepts:
      - application/json
    put:
      description: Grants tenant access permissions to a user identified by userId
      operationId: createTenantAccess_1
      parameters:
      - description: The user id
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          description: Access successfully created
        "404":
          description: User not found
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Create tenant access for a user
      tags:
      - Tenant Access
      x-accepts:
      - application/json
  /api/v1/{tenant}/tests:
    post:
      description: Creates a new test from a YAML definition. Requires TEST permission
        with the CREATE action.
      operationId: createTestSuite
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
        description: The TestSuite source code
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestSuite"
          description: createTestSuite 200 response
      summary: Create a test from YAML source
      tags:
      - TestSuites
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/{tenant}/tests/by-ids:
    delete:
      description: Deletes a test by namespace and ID. Requires TEST permission with
        the DELETE action.
      operationId: deleteTestSuitesByIds
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestSuiteController.TestSuiteBulkRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
          description: deleteTestSuitesByIds 200 response
      summary: Delete multiple tests by id
      tags:
      - TestSuites
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tests/disable/by-ids:
    post:
      description: Disable a test by namespace and ID. Requires TEST permission with
        the UPDATE action.
      operationId: disableTestSuitesByIds
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestSuiteController.TestSuiteBulkRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
          description: disableTestSuitesByIds 200 response
      summary: Disable multiple tests by id
      tags:
      - TestSuites
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tests/enable/by-ids:
    post:
      description: Enable a test by namespace and ID. Requires TEST permission with
        the UPDATE action.
      operationId: enableTestSuitesByIds
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestSuiteController.TestSuiteBulkRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
          description: enableTestSuitesByIds 200 response
      summary: Enable multiple tests by id
      tags:
      - TestSuites
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tests/results/search:
    get:
      description: "with optional filtering by namespace, test suite ID and flow ID.\
        \ Requires TEST permission with the READ action."
      operationId: searchTestSuitesResults
      parameters:
      - description: The current page
        explode: false
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: false
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The sort of current page
        explode: false
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The test suite id to filter on
        explode: false
        in: query
        name: testSuiteId
        required: true
        schema:
          type: string
        style: form
      - description: The namespace to filter on
        explode: false
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The flow id to filter on
        explode: false
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_TestSuiteRunResult_"
          description: searchTestSuitesResults 200 response
      summary: Search for tests results
      tags:
      - TestSuites
      x-accepts:
      - application/json
  /api/v1/{tenant}/tests/results/search/last:
    post:
      description: Get multiple tests last result for a query.
      operationId: getTestsLastResult
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestSuiteController.SearchTestsLastResult"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestSuiteController.TestsLastResultResponse"
          description: getTestsLastResult 200 response
      summary: Get tests last result
      tags:
      - TestSuites
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tests/results/{id}:
    get:
      description: Get a test result once it was run.
      operationId: getTestResult
      parameters:
      - description: The test run ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestSuiteRunResult"
          description: getTestResult 200 response
      summary: Get a test result
      tags:
      - TestSuites
      x-accepts:
      - application/json
  /api/v1/{tenant}/tests/run:
    post:
      description: Executes all TestSuites impacted by the specified filter. Requires
        TEST permission with the CREATE action.
      operationId: runTestSuitesByQuery
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestSuiteService.RunByQueryRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestSuiteService.TestRunByQueryResult"
          description: runTestSuitesByQuery 200 response
      summary: Run multiple TestSuites by query
      tags:
      - TestSuites
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tests/search:
    get:
      description: Searches for tests with optional filtering by namespace and flow
        ID. Requires TEST permission with the READ action.
      operationId: searchTestSuites
      parameters:
      - description: The current page
        explode: false
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: false
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The sort of current page
        explode: false
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The namespace to filter on
        explode: false
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The flow id to filter on
        explode: false
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Include child namespaces in filter or not
        explode: false
        in: query
        name: includeChildNamespaces
        required: true
        schema:
          default: true
          type: boolean
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_TestSuite_"
          description: searchTestSuites 200 response
      summary: Search for tests
      tags:
      - TestSuites
      x-accepts:
      - application/json
  /api/v1/{tenant}/tests/validate:
    post:
      description: Validates a test YAML definition without persisting it. Returns
        constraint violations if any. Requires TEST permission with the READ action.
      operationId: validateTestSuite
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
        description: The TestSuite source code
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidateConstraintViolation"
          description: validateTestSuite 200 response
      summary: Validate a test
      tags:
      - TestSuites
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/{tenant}/tests/{namespace}/{id}:
    delete:
      description: Deletes a test by namespace and ID. Requires TEST permission with
        the DELETE action.
      operationId: deleteTestSuite
      parameters:
      - description: The TestSuite namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The TestSuite ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: deleteTestSuite 200 response
      summary: Delete a test
      tags:
      - TestSuites
      x-accepts:
      - application/json
    get:
      description: Retrieves a test by namespace and ID. Requires TEST permission
        with the READ action.
      operationId: getTestSuite
      parameters:
      - description: The TestSuite namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The TestSuite ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestSuite"
          description: getTestSuite 200 response
      summary: Retrieve a test
      tags:
      - TestSuites
      x-accepts:
      - application/json
    put:
      description: Updates an existing test with a new YAML definition. Requires TEST
        permission with the UPDATE action.
      operationId: updateTestSuite
      parameters:
      - description: The TestSuite namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The TestSuite ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
        description: The TestSuite source code
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestSuite"
          description: updateTestSuite 200 response
      summary: Update a test from YAML source
      tags:
      - TestSuites
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/{tenant}/tests/{namespace}/{id}/run:
    post:
      description: Executes all test cases in the specified test. Requires TEST permission
        with the CREATE action.
      operationId: runTestSuite
      parameters:
      - description: The TestSuite namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The TestSuite ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestSuiteController.RunRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestSuiteRunResult"
          description: runTestSuite 200 response
      summary: Run a full test
      tags:
      - TestSuites
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers:
    put:
      operationId: updateTrigger
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Trigger"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trigger"
          description: updateTrigger 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Update a trigger
      tags:
      - Triggers
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/backfill/delete:
    post:
      operationId: deleteBackfill
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Trigger"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trigger"
          description: deleteBackfill 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Delete a backfill
      tags:
      - Triggers
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/backfill/delete/by-query:
    post:
      operationId: deleteBackfillByQuery
      parameters:
      - description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter prefix
        explode: false
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/deleteExecutionsByQuery_request"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: deleteBackfillByQuery 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Delete backfill for given triggers
      tags:
      - Triggers
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/backfill/delete/by-triggers:
    post:
      operationId: deleteBackfillByIds
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/Trigger"
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: deleteBackfillByIds 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Delete backfill for given triggers
      tags:
      - Triggers
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/backfill/pause:
    put:
      operationId: pauseBackfill
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Trigger"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trigger"
          description: pauseBackfill 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Pause a backfill
      tags:
      - Triggers
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/backfill/pause/by-query:
    post:
      operationId: pauseBackfillByQuery
      parameters:
      - description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter prefix
        explode: false
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/deleteExecutionsByQuery_request"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: pauseBackfillByQuery 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Pause backfill for given triggers
      tags:
      - Triggers
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/backfill/pause/by-triggers:
    post:
      operationId: pauseBackfillByIds
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/Trigger"
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: pauseBackfillByIds 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Pause backfill for given triggers
      tags:
      - Triggers
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/backfill/unpause:
    put:
      operationId: unpauseBackfill
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Trigger"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trigger"
          description: unpauseBackfill 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Unpause a backfill
      tags:
      - Triggers
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/backfill/unpause/by-query:
    post:
      operationId: unpauseBackfillByQuery
      parameters:
      - description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter prefix
        explode: false
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/deleteExecutionsByQuery_request"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: unpauseBackfillByQuery 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Unpause backfill for given triggers
      tags:
      - Triggers
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/backfill/unpause/by-triggers:
    post:
      operationId: unpauseBackfillByIds
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/Trigger"
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: unpauseBackfillByIds 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Unpause backfill for given triggers
      tags:
      - Triggers
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/search:
    get:
      operationId: searchTriggers
      parameters:
      - description: The current page
        explode: false
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: false
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The sort of current page
        explode: false
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: Filters
        explode: false
        in: query
        name: filters
        required: false
        schema:
          items:
            $ref: "#/components/schemas/QueryFilter"
          nullable: true
          type: array
        style: form
      - deprecated: true
        description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: A namespace filter prefix
        explode: false
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: The identifier of the worker currently evaluating the trigger
        explode: false
        in: query
        name: workerId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: The flow identifier
        explode: false
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_TriggerController.Triggers_"
          description: searchTriggers 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Search for triggers
      tags:
      - Triggers
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/set-disabled/by-query:
    post:
      operationId: disabledTriggersByQuery
      parameters:
      - description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter prefix
        explode: false
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The disabled state
        explode: false
        in: query
        name: disabled
        required: true
        schema:
          default: true
          type: boolean
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/deleteExecutionsByQuery_request"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: disabledTriggersByQuery 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Disable/enable triggers by query parameters
      tags:
      - Triggers
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/set-disabled/by-triggers:
    post:
      operationId: disabledTriggersByIds
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TriggerController.SetDisabledRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: disabledTriggersByIds 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Disable/enable given triggers
      tags:
      - Triggers
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/unlock/by-query:
    post:
      operationId: unlockTriggersByQuery
      parameters:
      - description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter prefix
        explode: false
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/deleteExecutionsByQuery_request"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: unlockTriggersByQuery 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Unlock triggers by query parameters
      tags:
      - Triggers
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/unlock/by-triggers:
    post:
      operationId: unlockTriggersByIds
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/Trigger"
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: unlockTriggersByIds 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Unlock given triggers
      tags:
      - Triggers
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/{namespace}/{flowId}:
    get:
      operationId: searchTriggersForFlow
      parameters:
      - description: The current page
        explode: false
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: false
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The sort of current page
        explode: false
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: A string filter
        explode: false
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          nullable: true
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: flowId
        required: true
        schema:
          nullable: true
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_Trigger_"
          description: searchTriggersForFlow 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Get all triggers for a flow
      tags:
      - Triggers
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/{namespace}/{flowId}/{triggerId}/restart:
    post:
      operationId: restartTrigger
      parameters:
      - description: The namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: flowId
        required: true
        schema:
          type: string
        style: simple
      - description: The trigger id
        explode: false
        in: path
        name: triggerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: restartTrigger 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Restart a trigger
      tags:
      - Triggers
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/{namespace}/{flowId}/{triggerId}/unlock:
    post:
      operationId: unlockTrigger
      parameters:
      - description: The namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: flowId
        required: true
        schema:
          type: string
        style: simple
      - description: The trigger id
        explode: false
        in: path
        name: triggerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trigger"
          description: unlockTrigger 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Unlock a trigger
      tags:
      - Triggers
      x-accepts:
      - application/json
  /api/v1/{tenant}/usages:
    get:
      operationId: tenantUsage
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsageEE"
          description: tenantUsage 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Retrieve usage information for the current tenant
      tags:
      - Misc
      x-accepts:
      - application/json
  /api/v1/{tenant}/usages/all:
    get:
      operationId: getUsages
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsageEE"
          description: getUsages 200 response
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Retrieve instance usage information
      tags:
      - Misc
      x-accepts:
      - application/json
  /api/v1/{tenant}/users/{id}/groups:
    put:
      operationId: updateUserGroups
      parameters:
      - description: The user ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IAMUserGroupController.ApiUpdateUserGroupsRequest"
        required: true
      responses:
        "204":
          description: User's groups successfully updated
        "404":
          description: User or one of the groups not found
        "400":
          description: Invalid request payload
      security:
      - bearerAuth: []
      - basicAuth: []
      summary: Update the list of groups a user belongs to for the given tenant
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /login:
    post:
      operationId: login
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/UsernamePasswordCredentials"
          application/json:
            schema:
              $ref: "#/components/schemas/UsernamePasswordCredentials"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: login 200 response
      x-content-type: application/x-www-form-urlencoded
      x-accepts:
      - application/json
components:
  schemas:
    AbstractFlow:
      properties:
        id:
          maxLength: 100
          minLength: 1
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9._-]*"
          type: string
        namespace:
          maxLength: 150
          minLength: 1
          pattern: "^[a-z0-9][a-z0-9._-]*"
          type: string
        revision:
          format: int32
          minimum: 1
          type: integer
        description:
          type: string
        inputs:
          items:
            $ref: "#/components/schemas/Input_Object_"
          type: array
        outputs:
          items:
            $ref: "#/components/schemas/Output"
          type: array
        disabled:
          type: boolean
        labels:
          $ref: "#/components/schemas/AbstractFlow_labels"
        variables:
          additionalProperties: true
          type: object
        workerGroup:
          $ref: "#/components/schemas/WorkerGroup"
        deleted:
          type: boolean
      required:
      - deleted
      - disabled
      - id
      - namespace
      type: object
    AbstractGraph:
      example:
        uid: uid
        branchType: ERROR
        type: type
      properties:
        uid:
          type: string
        type:
          type: string
        branchType:
          $ref: "#/components/schemas/AbstractGraph.BranchType"
      type: object
    AbstractGraph.BranchType:
      enum:
      - ERROR
      - FINALLY
      - AFTER_EXECUTION
      type: string
    AbstractMetricEntry_Object_:
      example:
        name: name
        description: description
        type: type
        value: "{}"
        tags:
          key: tags
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        type:
          type: string
        value:
          type: object
        name:
          type: string
        description:
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
        timestamp:
          format: date-time
          type: string
      required:
      - name
      type: object
    AbstractRetry:
      type: object
    AbstractTrigger:
      example:
        minLogLevel: ""
        stopAfter:
        - CREATED
        - CREATED
        description: description
        type: type
        logToFile: true
        version: version
        labels:
        - The_labels_to_pass_to_the_execution_created_
        - The_labels_to_pass_to_the_execution_created_
        failOnTriggerError: true
        logLevel: null
        disabled: true
        id: id
        workerGroup:
          fallback: FAIL
          key: key
        conditions:
        - type: type
        - type: type
      properties:
        minLogLevel:
          allOf:
          - $ref: "#/components/schemas/Level"
          deprecated: true
        id:
          minLength: 1
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_-]*"
          title: A unique ID for the whole flow.
          type: string
        type:
          minLength: 1
          pattern: "\\p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*(\\.\\\
            p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*)*"
          title: The class name for this current trigger.
          type: string
        version:
          pattern: "\\d+\\.\\d+\\.\\d+(-[a-zA-Z0-9-]+)?|([a-zA-Z0-9]+)"
          title: The version of the plugin to use.
          type: string
        description:
          type: string
        conditions:
          items:
            $ref: "#/components/schemas/Condition"
          title: List of conditions in order to limit the flow trigger.
          type: array
        disabled:
          type: boolean
        workerGroup:
          $ref: "#/components/schemas/WorkerGroup"
        logLevel:
          $ref: "#/components/schemas/Level"
        labels:
          $ref: "#/components/schemas/The_labels_to_pass_to_the_execution_created_"
        stopAfter:
          items:
            $ref: "#/components/schemas/State.Type"
          title: List of execution states after which a trigger should be stopped
            (a.k.a. disabled).
          type: array
        logToFile:
          type: boolean
        failOnTriggerError:
          type: boolean
      required:
      - disabled
      - id
      - type
      type: object
    AbstractTriggerForExecution:
      example:
        id: id
        type: type
        version: version
      properties:
        id:
          minLength: 1
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_-]*"
          title: A unique ID for the whole flow.
          type: string
        type:
          minLength: 1
          pattern: "\\p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*(\\.\\\
            p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*)*"
          title: The class name for this current trigger.
          type: string
        version:
          pattern: "\\d+\\.\\d+\\.\\d+(-[a-zA-Z0-9-]+)?|([a-zA-Z0-9]+)"
          title: The version of the plugin to use.
          type: string
      required:
      - id
      - type
      type: object
    AbstractUser:
      properties:
        type:
          $ref: "#/components/schemas/UserType"
        groupList:
          items:
            $ref: "#/components/schemas/GroupIdentifier"
          type: array
        groups:
          items:
            type: object
          type: array
        username:
          type: string
        email:
          pattern: "^$|^[a-zA-Z0-9_!#$%&’*+/=?`{|}~^.-]+@[a-zA-Z0-9.-]+$"
          type: string
        superAdmin:
          type: boolean
        id:
          type: string
        name:
          type: string
        description:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        providers:
          items:
            $ref: "#/components/schemas/AbstractUser.TenantIdentityProvider"
          type: array
      required:
      - email
      - type
      - username
      type: object
    AbstractUser.TenantIdentityProvider:
      allOf:
      - $ref: "#/components/schemas/IdentityProvider"
      - properties:
          tenantId:
            nullable: true
            type: string
        type: object
      example:
        securityIntegrationId: securityIntegrationId
        tenantId: tenantId
        externalId: externalId
        attributes:
          key: "{}"
        securityIntegrationName: securityIntegrationName
      type: object
    Action:
      enum:
      - READ
      - CREATE
      - UPDATE
      - DELETE
      type: string
    ApiAuth:
      example:
        uid: uid
        name: name
        type: type
      properties:
        uid:
          type: string
        type:
          type: string
        name:
          type: string
      required:
      - name
      - type
      - uid
      type: object
    ApiAutocomplete:
      example:
        q: q
        existingOnly: true
        ids:
        - ids
        - ids
      properties:
        q:
          nullable: true
          type: string
        ids:
          items:
            type: string
          nullable: true
          type: array
        existingOnly:
          type: boolean
      type: object
    ApiGroupSummary:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
      required:
      - id
      - name
      type: object
    ApiIds:
      example:
        ids:
        - ids
        - ids
      properties:
        ids:
          items:
            type: string
          type: array
      required:
      - ids
      type: object
    ApiPatchSuperAdminRequest:
      example:
        superAdmin: true
      properties:
        superAdmin:
          type: boolean
      required:
      - superAdmin
      type: object
    ApiRoleSummary:
      example:
        isDefault: true
        name: name
        id: id
        isManaged: true
      properties:
        id:
          type: string
        name:
          type: string
        isDefault:
          type: boolean
        isManaged:
          type: boolean
      required:
      - id
      - isDefault
      - isManaged
      - name
      type: object
    ApiSecretListResponse:
      example:
        total: 0
        readOnly: true
        results:
        - key: key
        - key: key
      properties:
        readOnly:
          type: boolean
        results:
          items:
            $ref: "#/components/schemas/ApiSecretMeta"
          type: array
        total:
          format: int64
          type: integer
      required:
      - readOnly
      - results
      - total
      type: object
    ApiSecretMeta:
      example:
        key: key
      properties:
        key:
          type: string
      required:
      - key
      type: object
    ApiSecretMetaEE:
      allOf:
      - $ref: "#/components/schemas/ApiSecretMeta"
      example:
        description: description
        tags:
        - value: value
          key: key
        - value: value
          key: key
      properties:
        description:
          type: string
        tags:
          items:
            $ref: "#/components/schemas/ApiSecretTag"
          type: array
      required:
      - description
      - tags
      type: object
    ApiSecretTag:
      example:
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          type: string
      required:
      - key
      - value
      type: object
    ApiSecretValue:
      example:
        description: description
        value: value
        key: key
        tags:
        - value: value
          key: key
        - value: value
          key: key
      properties:
        tags:
          items:
            $ref: "#/components/schemas/ApiSecretTag"
          type: array
        key:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
        description:
          type: string
      required:
      - description
      - key
      - tags
      - value
      type: object
    ApiTenant:
      allOf:
      - $ref: "#/components/schemas/Tenant"
      - properties:
          deleted:
            type: boolean
          logo:
            type: string
        type: object
      example:
        secretConfiguration:
          key: "{}"
        requireExistingNamespace: true
        storageIsolation:
          deniedServices:
          - EXECUTOR
          - EXECUTOR
          enabled: true
        secretReadOnly: true
        secretIsolation:
          deniedServices:
          - EXECUTOR
          - EXECUTOR
          enabled: true
        deleted: true
        storageConfiguration:
          key: "{}"
        secretType: secretType
        name: name
        storageType: storageType
        logo: logo
        id: id
        workerGroup:
          fallback: FAIL
          key: key
        outputsInInternalStorage: true
      required:
      - deleted
      - logo
      type: object
    ApiTenantSummary:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
      required:
      - id
      - name
      type: object
    ApiUser:
      allOf:
      - $ref: "#/components/schemas/AbstractUser"
      - properties:
          auths:
            items:
              $ref: "#/components/schemas/ApiAuth"
            type: array
        type: object
      example:
        lastName: lastName
        auths:
        - uid: uid
          name: name
          type: type
        - uid: uid
          name: name
          type: type
        groups:
        - "{}"
        - "{}"
        description: description
        groupList:
        - groupId: groupId
          tenantId: tenantId
          managedExternally: true
          membership: OWNER
        - groupId: groupId
          tenantId: tenantId
          managedExternally: true
          membership: OWNER
        type: STANDARD
        firstName: firstName
        name: name
        id: id
        superAdmin: true
        email: email
        providers:
        - securityIntegrationId: securityIntegrationId
          tenantId: tenantId
          externalId: externalId
          attributes:
            key: "{}"
          securityIntegrationName: securityIntegrationName
        - securityIntegrationId: securityIntegrationId
          tenantId: tenantId
          externalId: externalId
          attributes:
            key: "{}"
          securityIntegrationName: securityIntegrationName
        username: username
      type: object
    AppResponse:
      example:
        layout:
          blocks:
          - null
          - null
        dispatch: dispatch
        stream: stream
      properties:
        dispatch:
          type: string
        stream:
          type: string
        layout:
          $ref: "#/components/schemas/AppResponse.UILayout"
      required:
      - dispatch
      - layout
      - stream
      type: object
    AppResponse.UIBlock:
      type: object
    AppResponse.UILayout:
      example:
        blocks:
        - null
        - null
      properties:
        blocks:
          items:
            $ref: "#/components/schemas/AppResponse.UIBlock"
          type: array
      required:
      - blocks
      type: object
    AppsController.ApiApp:
      example:
        uid: uid
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        namespace: namespace
        id: id
        type: type
        updated: 2000-01-23T04:56:07.000+00:00
        enabled: true
        tags:
        - tags
        - tags
      properties:
        uid:
          type: string
        id:
          type: string
        name:
          type: string
        type:
          type: string
        namespace:
          type: string
        tags:
          items:
            type: string
          type: array
        enabled:
          type: boolean
        created:
          format: date-time
          type: string
        updated:
          format: date-time
          type: string
      required:
      - created
      - enabled
      - id
      - name
      - namespace
      - tags
      - type
      - uid
      - updated
      type: object
    AppsController.ApiAppCatalogItem:
      example:
        uid: uid
        name: name
        description: description
        type: type
        tags:
        - tags
        - tags
      properties:
        uid:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          type: string
        tags:
          items:
            type: string
          type: array
      required:
      - description
      - name
      - tags
      - type
      - uid
      type: object
    AppsController.ApiAppSource:
      example:
        uid: uid
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        namespace: namespace
        disabled: true
        source: source
        updated: 2000-01-23T04:56:07.000+00:00
        tags:
        - tags
        - tags
      properties:
        uid:
          type: string
        name:
          type: string
        namespace:
          type: string
        tags:
          items:
            type: string
          type: array
        disabled:
          type: boolean
        source:
          type: string
        created:
          format: date-time
          type: string
        updated:
          format: date-time
          type: string
      required:
      - created
      - disabled
      - name
      - namespace
      - source
      - tags
      - uid
      - updated
      type: object
    AppsController.ApiAppTags:
      example:
        tags:
        - tags
        - tags
      properties:
        tags:
          items:
            type: string
          type: array
      required:
      - tags
      type: object
    AppsController.ApiBulkImportResponse:
      example:
        success:
        - success
        - success
        errors:
        - source: source
          message: message
        - source: source
          message: message
      properties:
        success:
          items:
            type: string
          type: array
        errors:
          items:
            $ref: "#/components/schemas/AppsController.ApiBulkImportResponse.Error"
          type: array
      required:
      - errors
      - success
      type: object
    AppsController.ApiBulkImportResponse.Error:
      example:
        source: source
        message: message
      properties:
        source:
          type: string
        message:
          type: string
      required:
      - message
      - source
      type: object
    AppsController.ApiBulkOperationRequest:
      properties:
        uids:
          items:
            type: string
          type: array
      required:
      - uids
      type: object
    Assertion:
      example:
        isNotNull:
          expression: expression
          value: true
        in:
          expression: expression
          value:
          - value
          - value
        errorMessage:
          expression: expression
          value: value
        equalTo:
          expression: expression
          value: "{}"
        greaterThanOrEqualTo:
          expression: expression
          value: 0.8008281904610115
        description:
          expression: expression
          value: value
        contains:
          expression: expression
          value: value
        lessThan:
          expression: expression
          value: 0.8008281904610115
        isNull:
          expression: expression
          value: true
        endsWith:
          expression: expression
          value: value
        notIn:
          expression: expression
          value:
          - value
          - value
        value:
          expression: expression
          value: "{}"
        taskId: taskId
        lessThanOrEqualTo:
          expression: expression
          value: 0.8008281904610115
        startsWith:
          expression: expression
          value: value
        notEqualTo:
          expression: expression
          value: "{}"
        greaterThan:
          expression: expression
          value: 0.8008281904610115
      properties:
        value:
          $ref: "#/components/schemas/Property_Object_"
        taskId:
          type: string
        errorMessage:
          $ref: "#/components/schemas/Property_String_"
        description:
          $ref: "#/components/schemas/Property_String_"
        endsWith:
          $ref: "#/components/schemas/Property_String_"
        startsWith:
          $ref: "#/components/schemas/Property_String_"
        contains:
          $ref: "#/components/schemas/Property_String_"
        equalTo:
          $ref: "#/components/schemas/Property_Object_"
        notEqualTo:
          $ref: "#/components/schemas/Property_Object_"
        greaterThan:
          $ref: "#/components/schemas/Property_Double_"
        greaterThanOrEqualTo:
          $ref: "#/components/schemas/Property_Double_"
        lessThan:
          $ref: "#/components/schemas/Property_Double_"
        lessThanOrEqualTo:
          $ref: "#/components/schemas/Property_Double_"
        in:
          $ref: "#/components/schemas/Property_List_String__"
        notIn:
          $ref: "#/components/schemas/Property_List_String__"
        isNull:
          $ref: "#/components/schemas/Property_Boolean_"
        isNotNull:
          $ref: "#/components/schemas/Property_Boolean_"
      required:
      - value
      type: object
    AssertionResult:
      example:
        actual: "{}"
        expected: "{}"
        errorMessage: errorMessage
        description: description
        operator: operator
        taskId: taskId
        isSuccess: true
      properties:
        operator:
          type: string
        expected:
          type: object
        actual:
          type: object
        isSuccess:
          type: boolean
        taskId:
          type: string
        description:
          type: string
        errorMessage:
          type: string
      required:
      - actual
      - description
      - errorMessage
      - expected
      - isSuccess
      - operator
      - taskId
      type: object
    AssertionRunError:
      example:
        details: details
        message: message
      properties:
        message:
          type: string
        details:
          type: string
      required:
      - details
      - message
      type: object
    AttributeReference:
      properties:
        fullAttributeName:
          type: string
        fullyQualifiedAttributeName:
          type: string
        attributeBase:
          type: string
        urn:
          type: string
        attributeName:
          type: string
        subAttributeName:
          type: string
      type: object
    AuditLog:
      allOf:
      - $ref: "#/components/schemas/BaseAuditLog"
      - properties:
          deleted:
            type: boolean
          appliedPatch:
            items:
              type: object
            type: array
          revertPatch:
            items:
              type: object
            type: array
        type: object
      example:
        date: 2000-01-23T04:56:07.000+00:00
        deleted: true
        appliedPatch:
        - "{}"
        - "{}"
        revertPatch:
        - "{}"
        - "{}"
        tenantId: tenantId
        ipAddress: ipAddress
        id: id
        detail:
          permission: FLOW
          id: id
          type: type
          resourceType: AUDITLOG
        type: READ
        impersonatedBy: impersonatedBy
        userId: userId
      required:
      - appliedPatch
      - revertPatch
      type: object
    AuditLogController.ApiAuditLogItem:
      example:
        auditLog:
          date: 2000-01-23T04:56:07.000+00:00
          deleted: true
          appliedPatch:
          - "{}"
          - "{}"
          revertPatch:
          - "{}"
          - "{}"
          tenantId: tenantId
          ipAddress: ipAddress
          id: id
          detail:
            permission: FLOW
            id: id
            type: type
            resourceType: AUDITLOG
          type: READ
          impersonatedBy: impersonatedBy
          userId: userId
        user:
          lastName: lastName
          auths:
          - uid: uid
            name: name
            type: type
          - uid: uid
            name: name
            type: type
          groups:
          - "{}"
          - "{}"
          description: description
          groupList:
          - groupId: groupId
            tenantId: tenantId
            managedExternally: true
            membership: OWNER
          - groupId: groupId
            tenantId: tenantId
            managedExternally: true
            membership: OWNER
          type: STANDARD
          firstName: firstName
          name: name
          id: id
          superAdmin: true
          email: email
          providers:
          - securityIntegrationId: securityIntegrationId
            tenantId: tenantId
            externalId: externalId
            attributes:
              key: "{}"
            securityIntegrationName: securityIntegrationName
          - securityIntegrationId: securityIntegrationId
            tenantId: tenantId
            externalId: externalId
            attributes:
              key: "{}"
            securityIntegrationName: securityIntegrationName
          username: username
      properties:
        auditLog:
          $ref: "#/components/schemas/AuditLog"
        user:
          $ref: "#/components/schemas/ApiUser"
      required:
      - auditLog
      - user
      type: object
    AuditLogController.AuditLogDiff:
      example:
        before: before
        after: after
      properties:
        before:
          type: string
        after:
          type: string
      required:
      - after
      - before
      type: object
    AuditLogController.AuditLogOption:
      example:
        date: 2000-01-23T04:56:07.000+00:00
        id: id
        username: username
      properties:
        id:
          type: string
        date:
          format: date-time
          type: string
        username:
          type: string
      required:
      - date
      - id
      - username
      type: object
    AuditLogController.FindRequest:
      properties:
        resource:
          $ref: "#/components/schemas/ResourceType_1"
        type:
          allOf:
          - $ref: "#/components/schemas/CrudEventType"
          nullable: true
        detail:
          additionalProperties:
            type: object
          type: object
      required:
      - detail
      - resource
      type: object
    AuditLogDetail:
      example:
        permission: FLOW
        id: id
        type: type
        resourceType: AUDITLOG
      properties:
        permission:
          $ref: "#/components/schemas/Permission"
        resourceType:
          $ref: "#/components/schemas/ResourceType_1"
        type:
          type: string
        id:
          type: string
      required:
      - type
      type: object
    AuthController.Auth:
      example:
        loginPassword: true
        oauths:
        - oauths
        - oauths
        mailsEnabled: true
      properties:
        loginPassword:
          type: boolean
        mailsEnabled:
          type: boolean
        oauths:
          items:
            type: string
          type: array
      type: object
    AuthController.InvitationUserRequest:
      properties:
        firstName:
          type: string
        lastName:
          type: string
        password:
          type: string
      required:
      - firstName
      - lastName
      - password
      type: object
    AuthController.ResetPasswordRequest:
      properties:
        token:
          type: string
        password:
          type: string
      required:
      - password
      - token
      type: object
    Backfill:
      properties:
        start:
          format: date-time
          title: The start date.
          type: string
        end:
          format: date-time
          title: The end date.
          type: string
        currentDate:
          format: date-time
          title: The current date of the backfill being done.
          type: string
        paused:
          title: Whether the backfill is paused.
          type: boolean
        inputs:
          additionalProperties:
            type: object
          title: The inputs to pass to the backfilled executions.
          type: object
        labels:
          items:
            $ref: "#/components/schemas/Label"
          title: The labels to pass to the backfilled executions.
          type: array
        previousNextExecutionDate:
          format: date-time
          title: The nextExecutionDate before the backfill was created.
          type: string
      required:
      - start
      title: A backfill configuration.
      type: object
    Banner:
      example:
        endDate: 2000-01-23T04:56:07.000+00:00
        tenantId: tenantId
        active: true
        id: id
        message: message
        type: INFO
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        message:
          type: string
        type:
          $ref: "#/components/schemas/Banner.Type"
        startDate:
          format: date-time
          nullable: true
          type: string
        endDate:
          format: date-time
          nullable: true
          type: string
        tenantId:
          nullable: true
          type: string
        active:
          type: boolean
      required:
      - message
      type: object
    Banner.Type:
      enum:
      - INFO
      - WARNING
      - ERROR
      type: string
    BaseAuditLog:
      properties:
        tenantId:
          type: string
        id:
          type: string
        type:
          $ref: "#/components/schemas/CrudEventType"
        detail:
          $ref: "#/components/schemas/AuditLogDetail"
        date:
          format: date-time
          type: string
        userId:
          type: string
        ipAddress:
          type: string
        impersonatedBy:
          type: string
        deleted:
          type: boolean
      required:
      - date
      - deleted
      - detail
      - id
      - impersonatedBy
      - ipAddress
      - tenantId
      - type
      - userId
      type: object
    BaseResource_PatchRequest_:
      properties:
        schemas:
          items:
            type: string
          minItems: 1
          type: array
      type: object
    BaseResource_ScimResource_:
      properties:
        schemas:
          items:
            type: string
          minItems: 1
          type: array
      type: object
    BaseResource_SearchRequest_:
      properties:
        schemas:
          items:
            type: string
          minItems: 1
          type: array
      type: object
    Binding:
      example:
        deleted: true
        namespaceId: namespaceId
        roleId: roleId
        externalId: externalId
        id: id
        type: USER
      properties:
        id:
          type: string
        type:
          $ref: "#/components/schemas/Binding.Type"
        externalId:
          type: string
        roleId:
          type: string
        namespaceId:
          type: string
        deleted:
          type: boolean
      required:
      - deleted
      - externalId
      - id
      - namespaceId
      - roleId
      - type
      type: object
    Binding.Type:
      enum:
      - USER
      - GROUP
      type: string
    Blueprint:
      example:
        includedTasks:
        - includedTasks
        - includedTasks
        deleted: true
        publishedAt: 2000-01-23T04:56:07.000+00:00
        description: description
        id: id
        title: title
        tags:
        - tags
        - tags
      properties:
        id:
          type: string
        title:
          maxLength: 150
          minLength: 1
          type: string
        description:
          type: string
        tags:
          items:
            type: string
          type: array
        includedTasks:
          items:
            type: string
          type: array
        publishedAt:
          format: date-time
          type: string
        deleted:
          type: boolean
      required:
      - deleted
      - description
      - id
      - includedTasks
      - publishedAt
      - tags
      - title
      type: object
    BlueprintController.ApiBlueprintItem:
      example:
        includedTasks:
        - includedTasks
        - includedTasks
        publishedAt: 2000-01-23T04:56:07.000+00:00
        description: description
        id: id
        title: title
        tags:
        - tags
        - tags
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        includedTasks:
          items:
            type: string
          type: array
        tags:
          items:
            type: string
          type: array
        publishedAt:
          format: date-time
          type: string
      required:
      - description
      - id
      - includedTasks
      - publishedAt
      - tags
      - title
      type: object
    BlueprintController.ApiBlueprintItemWithSource:
      allOf:
      - $ref: "#/components/schemas/BlueprintController.ApiBlueprintItem"
      - properties:
          source:
            type: string
          kind:
            $ref: "#/components/schemas/BlueprintController.Kind"
        type: object
      example:
        includedTasks:
        - includedTasks
        - includedTasks
        publishedAt: 2000-01-23T04:56:07.000+00:00
        kind: APP
        description: description
        id: id
        source: source
        title: title
        tags:
        - tags
        - tags
      type: object
    BlueprintController.ApiBlueprintTagItem:
      example:
        publishedAt: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        publishedAt:
          format: date-time
          type: string
      required:
      - id
      - name
      - publishedAt
      type: object
    BlueprintController.Kind:
      enum:
      - APP
      - DASHBOARD
      - FLOW
      type: string
    BlueprintWithFlow:
      allOf:
      - $ref: "#/components/schemas/Blueprint"
      - properties:
          deleted:
            type: boolean
          flow:
            minLength: 1
            type: string
        type: object
      example:
        includedTasks:
        - includedTasks
        - includedTasks
        deleted: true
        publishedAt: 2000-01-23T04:56:07.000+00:00
        description: description
        id: id
        title: title
        flow: flow
        tags:
        - tags
        - tags
      required:
      - deleted
      - flow
      type: object
    Breakpoint:
      example:
        id: id
        value: value
      properties:
        id:
          type: string
        value:
          nullable: true
          type: string
      required:
      - id
      type: object
    BulkErrorResponse:
      example:
        invalids: "{}"
        message: message
      properties:
        message:
          type: string
        invalids:
          type: object
      type: object
    BulkResponse:
      example:
        count: 0
      properties:
        count:
          format: int32
          type: integer
      type: object
    Cache:
      example:
        ttl: ttl
        enabled: true
      properties:
        enabled:
          type: boolean
        ttl:
          type: string
      required:
      - enabled
      type: object
    ChartFiltersOverrides:
      example:
        pageNumber: 6
        endDate: 2000-01-23T04:56:07.000+00:00
        namespace: namespace
        pageSize: 0
        filters:
        - field: QUERY
          operation: EQUALS
          value: "{}"
        - field: QUERY
          operation: EQUALS
          value: "{}"
        startDate: 2000-01-23T04:56:07.000+00:00
        labels:
          key: labels
      properties:
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        pageSize:
          format: int32
          type: integer
        pageNumber:
          format: int32
          type: integer
        namespace:
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
        filters:
          items:
            $ref: "#/components/schemas/QueryFilter"
          type: array
      type: object
    Chart_ChartOption_:
      example:
        chartOptions: "{}"
        id: id
        type: type
      properties:
        id:
          minLength: 1
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_-]*"
          type: string
        type:
          minLength: 1
          pattern: "\\p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*(\\.\\\
            p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*)*"
          type: string
        chartOptions:
          type: object
      required:
      - id
      - type
      type: object
    Concurrency:
      example:
        limit: 1
        behavior: QUEUE
      properties:
        limit:
          format: int32
          minimum: 1
          type: integer
        behavior:
          $ref: "#/components/schemas/Concurrency.Behavior"
      required:
      - behavior
      - limit
      type: object
    Concurrency.Behavior:
      enum:
      - QUEUE
      - CANCEL
      - FAIL
      type: string
    Condition:
      example:
        type: type
      properties:
        type:
          pattern: "\\p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*(\\.\\\
            p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*)*"
          type: string
      required:
      - type
      type: object
    ConversionService:
      type: object
    ConversionServiceProvider:
      properties:
        conversionService:
          type: object
      required:
      - conversionService
      type: object
    ConvertibleMultiValues_String_:
      allOf:
      - $ref: "#/components/schemas/ConvertibleValues_List_String__"
      - $ref: "#/components/schemas/ConversionServiceProvider"
      - properties:
          empty:
            type: boolean
        type: object
      type: object
    ConvertibleValues_List_String__:
      allOf:
      - $ref: "#/components/schemas/ConversionServiceProvider"
      - properties:
          empty:
            type: boolean
          conversionService:
            $ref: "#/components/schemas/ConversionService"
        type: object
      type: object
    CreateApiTokenRequest:
      example:
        maxAge: maxAge
        name: name
        description: description
        extended: true
      properties:
        name:
          pattern: "^(?=.{1,63}$)[a-z0-9]+(?:-[a-z0-9]+)*$"
          type: string
        description:
          type: string
        maxAge:
          type: string
        extended:
          type: boolean
      required:
      - description
      - extended
      - maxAge
      - name
      type: object
    CreateApiTokenResponse:
      example:
        fullToken: fullToken
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        fullToken:
          type: string
      required:
      - fullToken
      - id
      - name
      type: object
    CreateSecurityIntegrationRequest:
      description: Create SecurityIntegration Request
      example:
        name: name
        description: description
        type: SCIM
      properties:
        name:
          description: The name of security integration.
          pattern: "^(?=.{1,63}$)[a-z0-9]+(?:-[a-z0-9]+)*$"
          type: string
        description:
          description: The description of security integration.
          type: string
        type:
          $ref: "#/components/schemas/SecurityIntegration.Type"
      required:
      - description
      - name
      - type
      type: object
    CrudEventType:
      enum:
      - READ
      - CREATE
      - UPDATE
      - DELETE
      - LOGIN
      - LOGOUT
      - IMPERSONATE
      - LOGIN_FAILURE
      - ACCOUNT_LOCKED
      type: string
    DailyExecutionStatistics:
      properties:
        startDate:
          format: date-time
          type: string
        duration:
          $ref: "#/components/schemas/DailyExecutionStatistics.Duration"
        executionCounts:
          $ref: "#/components/schemas/DailyExecutionStatistics_executionCounts"
        groupBy:
          type: string
      required:
      - duration
      - executionCounts
      - groupBy
      - startDate
      type: object
    DailyExecutionStatistics.Duration:
      properties:
        min:
          type: string
        avg:
          type: string
        max:
          type: string
        sum:
          type: string
        count:
          format: int64
          type: integer
      required:
      - avg
      - count
      - max
      - min
      - sum
      type: object
    Dashboard:
      example:
        sourceCode: sourceCode
        timeWindow:
          default: default
          max: max
        charts:
        - chartOptions: "{}"
          id: id
          type: type
        - chartOptions: "{}"
          id: id
          type: type
        description: description
        title: title
      properties:
        title:
          minLength: 1
          type: string
        description:
          type: string
        timeWindow:
          $ref: "#/components/schemas/TimeWindow"
        charts:
          items:
            $ref: "#/components/schemas/Chart_ChartOption_"
          type: array
        sourceCode:
          type: string
      required:
      - title
      type: object
    DashboardController.PreviewRequest:
      properties:
        chart:
          minLength: 1
          type: string
        globalFilter:
          allOf:
          - $ref: "#/components/schemas/ChartFiltersOverrides"
          nullable: true
      required:
      - chart
      type: object
    DeletedInterface:
      properties:
        deleted:
          type: boolean
      type: object
    DependsOn:
      properties:
        inputs:
          items:
            type: string
          nullable: true
          type: array
        condition:
          nullable: true
          type: string
      type: object
    DocumentationWithSchema:
      example:
        schema:
          outputs:
            key: "{}"
          definitions:
            key: "{}"
          properties:
            key: "{}"
        markdown: markdown
      properties:
        markdown:
          type: string
        schema:
          $ref: "#/components/schemas/PluginSchema"
      type: object
    EditionProvider.Edition:
      enum:
      - OSS
      - EE
      type: string
    Email:
      description: Scim core schema.
      properties:
        type:
          type: string
        value:
          type: string
        primary:
          type: boolean
      type: object
    Event_AppResponse_:
      properties:
        data:
          $ref: "#/components/schemas/AppResponse"
        id:
          type: string
        name:
          type: string
        comment:
          type: string
        retry:
          type: string
      type: object
    Event_ExecutionStatusEvent_:
      properties:
        data:
          $ref: "#/components/schemas/ExecutionStatusEvent"
        id:
          type: string
        name:
          type: string
        comment:
          type: string
        retry:
          type: string
      type: object
    Event_Execution_:
      properties:
        data:
          $ref: "#/components/schemas/Execution"
        id:
          type: string
        name:
          type: string
        comment:
          type: string
        retry:
          type: string
      type: object
    Event_LogEntry_:
      properties:
        data:
          $ref: "#/components/schemas/LogEntry"
        id:
          type: string
        name:
          type: string
        comment:
          type: string
        retry:
          type: string
      type: object
    ExecutableTask.SubflowId:
      example:
        namespace: namespace
        flowId: flowId
        revision: 1
      properties:
        namespace:
          type: string
        flowId:
          type: string
        revision:
          format: int32
          nullable: true
          type: integer
      required:
      - flowId
      - namespace
      type: object
    Execution:
      example:
        outputs:
          key: "{}"
        variables:
          key: "{}"
        metadata:
          attemptNumber: 1
          originalCreatedDate: 2000-01-23T04:56:07.000+00:00
        inputs:
          key: "{}"
        kind: ""
        trigger:
          variables:
            key: "{}"
          logFile: https://openapi-generator.tech
          id: id
          type: type
        taskRunList:
        - outputs:
            key: "{}"
          parentTaskRunId: parentTaskRunId
          executionId: executionId
          forceExecution: true
          namespace: namespace
          iteration: 6
          dynamic: true
          id: id
          state:
            duration: duration
            current: CREATED
            endDate: 2000-01-23T04:56:07.000+00:00
            histories:
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            startDate: 2000-01-23T04:56:07.000+00:00
          items: items
          flowId: flowId
          value: value
          taskId: taskId
          attempts:
          - workerId: workerId
            logFile: https://openapi-generator.tech
            metrics:
            - name: name
              description: description
              type: type
              value: "{}"
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            - name: name
              description: description
              type: type
              value: "{}"
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            state:
              duration: duration
              current: CREATED
              endDate: 2000-01-23T04:56:07.000+00:00
              histories:
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              startDate: 2000-01-23T04:56:07.000+00:00
          - workerId: workerId
            logFile: https://openapi-generator.tech
            metrics:
            - name: name
              description: description
              type: type
              value: "{}"
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            - name: name
              description: description
              type: type
              value: "{}"
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            state:
              duration: duration
              current: CREATED
              endDate: 2000-01-23T04:56:07.000+00:00
              histories:
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              startDate: 2000-01-23T04:56:07.000+00:00
        - outputs:
            key: "{}"
          parentTaskRunId: parentTaskRunId
          executionId: executionId
          forceExecution: true
          namespace: namespace
          iteration: 6
          dynamic: true
          id: id
          state:
            duration: duration
            current: CREATED
            endDate: 2000-01-23T04:56:07.000+00:00
            histories:
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            startDate: 2000-01-23T04:56:07.000+00:00
          items: items
          flowId: flowId
          value: value
          taskId: taskId
          attempts:
          - workerId: workerId
            logFile: https://openapi-generator.tech
            metrics:
            - name: name
              description: description
              type: type
              value: "{}"
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            - name: name
              description: description
              type: type
              value: "{}"
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            state:
              duration: duration
              current: CREATED
              endDate: 2000-01-23T04:56:07.000+00:00
              histories:
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              startDate: 2000-01-23T04:56:07.000+00:00
          - workerId: workerId
            logFile: https://openapi-generator.tech
            metrics:
            - name: name
              description: description
              type: type
              value: "{}"
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            - name: name
              description: description
              type: type
              value: "{}"
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            state:
              duration: duration
              current: CREATED
              endDate: 2000-01-23T04:56:07.000+00:00
              histories:
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              startDate: 2000-01-23T04:56:07.000+00:00
        parentId: parentId
        labels:
        - value: value
          key: key
        - value: value
          key: key
        fixtures:
        - outputs:
            key: "{}"
          description:
            expression: expression
            value: value
          id: id
          state: null
          value: value
        - outputs:
            key: "{}"
          description:
            expression: expression
            value: value
          id: id
          state: null
          value: value
        traceParent: traceParent
        flowRevision: 0
        deleted: true
        namespace: namespace
        scheduleDate: 2000-01-23T04:56:07.000+00:00
        id: id
        state:
          duration: duration
          current: CREATED
          endDate: 2000-01-23T04:56:07.000+00:00
          histories:
          - date: 2000-01-23T04:56:07.000+00:00
            state: null
          - date: 2000-01-23T04:56:07.000+00:00
            state: null
          startDate: 2000-01-23T04:56:07.000+00:00
        originalId: originalId
        breakpoints:
        - id: id
          value: value
        - id: id
          value: value
        flowId: flowId
      properties:
        labels:
          items:
            $ref: "#/components/schemas/Label"
          type: array
        id:
          type: string
        namespace:
          type: string
        flowId:
          type: string
        flowRevision:
          format: int32
          type: integer
        taskRunList:
          items:
            $ref: "#/components/schemas/TaskRun"
          type: array
        inputs:
          additionalProperties:
            type: object
          type: object
        outputs:
          additionalProperties:
            type: object
          type: object
        variables:
          additionalProperties:
            type: object
          type: object
        state:
          $ref: "#/components/schemas/State"
        parentId:
          type: string
        originalId:
          type: string
        trigger:
          $ref: "#/components/schemas/ExecutionTrigger"
        deleted:
          type: boolean
        metadata:
          $ref: "#/components/schemas/ExecutionMetadata"
        scheduleDate:
          format: date-time
          nullable: true
          type: string
        traceParent:
          type: string
        fixtures:
          items:
            $ref: "#/components/schemas/TaskFixture"
          nullable: true
          type: array
        kind:
          allOf:
          - $ref: "#/components/schemas/ExecutionKind"
          nullable: true
        breakpoints:
          items:
            $ref: "#/components/schemas/Breakpoint"
          nullable: true
          type: array
      required:
      - deleted
      - flowId
      - flowRevision
      - id
      - inputs
      - labels
      - metadata
      - namespace
      - originalId
      - outputs
      - parentId
      - state
      - taskRunList
      - traceParent
      - trigger
      - variables
      type: object
    ExecutionController.ApiValidateExecutionInputsResponse:
      example:
        inputs:
        - input:
            dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          isDefault: true
          value: "{}"
          enabled: true
          errors:
          - message: message
          - message: message
        - input:
            dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          isDefault: true
          value: "{}"
          enabled: true
          errors:
          - message: message
          - message: message
        namespace: namespace
        id: id
      properties:
        id:
          type: string
        namespace:
          type: string
        inputs:
          items:
            $ref: "#/components/schemas/ExecutionController.ApiValidateExecutionInputsResponse.ApiInputAndValue"
          type: array
      required:
      - id
      - inputs
      - namespace
      type: object
    ExecutionController.ApiValidateExecutionInputsResponse.ApiInputAndValue:
      example:
        input:
          dependsOn: ""
          defaults: ""
          displayName: displayName
          name: name
          description: description
          id: id
          type: ""
          required: true
        isDefault: true
        value: "{}"
        enabled: true
        errors:
        - message: message
        - message: message
      properties:
        input:
          $ref: "#/components/schemas/Input_Object_"
        value:
          type: object
        enabled:
          type: boolean
        isDefault:
          type: boolean
        errors:
          items:
            $ref: "#/components/schemas/ExecutionController.ApiValidateExecutionInputsResponse.ApiInputError"
          type: array
      required:
      - enabled
      - errors
      - input
      - isDefault
      - value
      type: object
    ExecutionController.ApiValidateExecutionInputsResponse.ApiInputError:
      example:
        message: message
      properties:
        message:
          type: string
      required:
      - message
      type: object
    ExecutionController.EvalResult:
      example:
        result: result
        stackTrace: stackTrace
        error: error
      properties:
        result:
          type: string
        error:
          type: string
        stackTrace:
          type: string
      type: object
    ExecutionController.ExecutionResponse:
      allOf:
      - $ref: "#/components/schemas/Execution"
      - properties:
          deleted:
            type: boolean
          url:
            format: uri
            type: string
        type: object
      example:
        outputs:
          key: "{}"
        variables:
          key: "{}"
        metadata:
          attemptNumber: 1
          originalCreatedDate: 2000-01-23T04:56:07.000+00:00
        inputs:
          key: "{}"
        kind: ""
        trigger:
          variables:
            key: "{}"
          logFile: https://openapi-generator.tech
          id: id
          type: type
        taskRunList:
        - outputs:
            key: "{}"
          parentTaskRunId: parentTaskRunId
          executionId: executionId
          forceExecution: true
          namespace: namespace
          iteration: 6
          dynamic: true
          id: id
          state:
            duration: duration
            current: CREATED
            endDate: 2000-01-23T04:56:07.000+00:00
            histories:
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            startDate: 2000-01-23T04:56:07.000+00:00
          items: items
          flowId: flowId
          value: value
          taskId: taskId
          attempts:
          - workerId: workerId
            logFile: https://openapi-generator.tech
            metrics:
            - name: name
              description: description
              type: type
              value: "{}"
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            - name: name
              description: description
              type: type
              value: "{}"
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            state:
              duration: duration
              current: CREATED
              endDate: 2000-01-23T04:56:07.000+00:00
              histories:
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              startDate: 2000-01-23T04:56:07.000+00:00
          - workerId: workerId
            logFile: https://openapi-generator.tech
            metrics:
            - name: name
              description: description
              type: type
              value: "{}"
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            - name: name
              description: description
              type: type
              value: "{}"
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            state:
              duration: duration
              current: CREATED
              endDate: 2000-01-23T04:56:07.000+00:00
              histories:
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              startDate: 2000-01-23T04:56:07.000+00:00
        - outputs:
            key: "{}"
          parentTaskRunId: parentTaskRunId
          executionId: executionId
          forceExecution: true
          namespace: namespace
          iteration: 6
          dynamic: true
          id: id
          state:
            duration: duration
            current: CREATED
            endDate: 2000-01-23T04:56:07.000+00:00
            histories:
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            startDate: 2000-01-23T04:56:07.000+00:00
          items: items
          flowId: flowId
          value: value
          taskId: taskId
          attempts:
          - workerId: workerId
            logFile: https://openapi-generator.tech
            metrics:
            - name: name
              description: description
              type: type
              value: "{}"
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            - name: name
              description: description
              type: type
              value: "{}"
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            state:
              duration: duration
              current: CREATED
              endDate: 2000-01-23T04:56:07.000+00:00
              histories:
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              startDate: 2000-01-23T04:56:07.000+00:00
          - workerId: workerId
            logFile: https://openapi-generator.tech
            metrics:
            - name: name
              description: description
              type: type
              value: "{}"
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            - name: name
              description: description
              type: type
              value: "{}"
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            state:
              duration: duration
              current: CREATED
              endDate: 2000-01-23T04:56:07.000+00:00
              histories:
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              startDate: 2000-01-23T04:56:07.000+00:00
        parentId: parentId
        url: https://openapi-generator.tech
        labels:
        - value: value
          key: key
        - value: value
          key: key
        fixtures:
        - outputs:
            key: "{}"
          description:
            expression: expression
            value: value
          id: id
          state: null
          value: value
        - outputs:
            key: "{}"
          description:
            expression: expression
            value: value
          id: id
          state: null
          value: value
        traceParent: traceParent
        flowRevision: 0
        deleted: true
        namespace: namespace
        scheduleDate: 2000-01-23T04:56:07.000+00:00
        id: id
        state:
          duration: duration
          current: CREATED
          endDate: 2000-01-23T04:56:07.000+00:00
          histories:
          - date: 2000-01-23T04:56:07.000+00:00
            state: null
          - date: 2000-01-23T04:56:07.000+00:00
            state: null
          startDate: 2000-01-23T04:56:07.000+00:00
        originalId: originalId
        breakpoints:
        - id: id
          value: value
        - id: id
          value: value
        flowId: flowId
      required:
      - deleted
      - url
      type: object
    ExecutionController.LastExecutionResponse:
      example:
        namespace: namespace
        id: id
        flowId: flowId
        startDate: 2000-01-23T04:56:07.000+00:00
        status: CREATED
      properties:
        id:
          type: string
        flowId:
          type: string
        namespace:
          type: string
        startDate:
          format: date-time
          type: string
        status:
          $ref: "#/components/schemas/State.Type"
      required:
      - flowId
      - id
      - namespace
      - startDate
      - status
      type: object
    ExecutionController.SetLabelsByIdsRequest:
      properties:
        executionsId:
          items:
            type: string
          type: array
        executionLabels:
          items:
            $ref: "#/components/schemas/Label"
          type: array
      required:
      - executionLabels
      - executionsId
      type: object
    ExecutionController.StateRequest:
      properties:
        taskRunId:
          type: string
        state:
          $ref: "#/components/schemas/State.Type"
      required:
      - state
      - taskRunId
      type: object
    ExecutionController.WebhookResponse:
      example:
        outputs:
          key: "{}"
        flowRevision: 0
        tenantId: tenantId
        namespace: namespace
        id: id
        trigger:
          variables:
            key: "{}"
          logFile: https://openapi-generator.tech
          id: id
          type: type
        state:
          duration: duration
          current: CREATED
          endDate: 2000-01-23T04:56:07.000+00:00
          histories:
          - date: 2000-01-23T04:56:07.000+00:00
            state: null
          - date: 2000-01-23T04:56:07.000+00:00
            state: null
          startDate: 2000-01-23T04:56:07.000+00:00
        flowId: flowId
        url: https://openapi-generator.tech
        labels:
        - value: value
          key: key
        - value: value
          key: key
      properties:
        tenantId:
          type: string
        id:
          type: string
        namespace:
          type: string
        flowId:
          type: string
        flowRevision:
          format: int32
          type: integer
        trigger:
          $ref: "#/components/schemas/ExecutionTrigger"
        outputs:
          additionalProperties:
            type: object
          type: object
        labels:
          items:
            $ref: "#/components/schemas/Label"
          type: array
        state:
          $ref: "#/components/schemas/State"
        url:
          format: uri
          type: string
      required:
      - flowId
      - flowRevision
      - id
      - labels
      - namespace
      - outputs
      - state
      - tenantId
      - trigger
      - url
      type: object
    ExecutionKind:
      enum:
      - NORMAL
      - TEST
      - PLAYGROUND
      type: string
    ExecutionMetadata:
      example:
        attemptNumber: 1
        originalCreatedDate: 2000-01-23T04:56:07.000+00:00
      properties:
        attemptNumber:
          format: int32
          type: integer
        originalCreatedDate:
          format: date-time
          type: string
      required:
      - attemptNumber
      - originalCreatedDate
      type: object
    ExecutionRepositoryInterface.ChildFilter:
      enum:
      - CHILD
      - MAIN
      type: string
    ExecutionRepositoryInterface.FlowFilter:
      properties:
        namespace:
          type: string
        id:
          type: string
      required:
      - id
      - namespace
      type: object
    ExecutionStatusEvent:
      properties:
        executionId:
          type: string
        tenantId:
          type: string
        namespace:
          type: string
        flowId:
          type: string
        state:
          $ref: "#/components/schemas/State"
      required:
      - executionId
      - flowId
      - namespace
      - state
      - tenantId
      type: object
    ExecutionTrigger:
      example:
        variables:
          key: "{}"
        logFile: https://openapi-generator.tech
        id: id
        type: type
      properties:
        id:
          type: string
        type:
          type: string
        variables:
          additionalProperties:
            type: object
          type: object
        logFile:
          format: uri
          type: string
      required:
      - id
      - logFile
      - type
      - variables
      type: object
    ExecutionUsage:
      properties:
        dailyExecutionsCount:
          items:
            $ref: "#/components/schemas/DailyExecutionStatistics"
          type: array
        dailyTaskRunsCount:
          items:
            $ref: "#/components/schemas/DailyExecutionStatistics"
          type: array
      type: object
    FileAttributes:
      example:
        fileName: fileName
        metadata:
          key: metadata
        lastModifiedTime: 0
        creationTime: 6
        size: 1
        type: File
      properties:
        fileName:
          type: string
        lastModifiedTime:
          format: int64
          type: integer
        creationTime:
          format: int64
          type: integer
        type:
          $ref: "#/components/schemas/FileAttributes.FileType"
        size:
          format: int64
          type: integer
        metadata:
          additionalProperties:
            type: string
          type: object
      type: object
    FileAttributes.FileType:
      enum:
      - File
      - Directory
      type: string
      x-enum-varnames:
      - File
      - Directory
    FileMetas:
      example:
        size: 0
      properties:
        size:
          format: int64
          type: integer
      required:
      - size
      type: object
    Filter:
      properties:
        filter:
          type: string
        expression:
          type: object
      required:
      - filter
      type: object
    FilterExpression:
      type: object
    Fixtures:
      example:
        inputs:
          key: ""
        files:
          key: files
        trigger:
          variables:
            key: "{}"
          id: id
          type: type
        tasks:
        - outputs:
            key: "{}"
          description:
            expression: expression
            value: value
          id: id
          state: null
          value: value
        - outputs:
            key: "{}"
          description:
            expression: expression
            value: value
          id: id
          state: null
          value: value
      properties:
        inputs:
          additionalProperties: true
          type: object
        files:
          additionalProperties:
            type: string
          type: object
        tasks:
          items:
            $ref: "#/components/schemas/TaskFixture"
          type: array
        trigger:
          $ref: "#/components/schemas/TriggerFixture"
      type: object
    Flow:
      allOf:
      - $ref: "#/components/schemas/AbstractFlow"
      - properties:
          id:
            maxLength: 100
            minLength: 1
            pattern: "^[a-zA-Z0-9][a-zA-Z0-9._-]*"
            type: string
          namespace:
            maxLength: 150
            minLength: 1
            pattern: "^[a-z0-9][a-z0-9._-]*"
            type: string
          revision:
            format: int32
            minimum: 1
            type: integer
          description:
            type: string
          inputs:
            items:
              $ref: "#/components/schemas/Input_Object_"
            type: array
          disabled:
            type: boolean
          labels:
            $ref: "#/components/schemas/Flow_allOf_labels"
          workerGroup:
            $ref: "#/components/schemas/WorkerGroup"
          deleted:
            type: boolean
          finally:
            items:
              $ref: "#/components/schemas/Task"
            type: array
          taskDefaults:
            deprecated: true
            items:
              $ref: "#/components/schemas/PluginDefault"
            type: array
          variables:
            additionalProperties:
              type: object
            type: object
          tasks:
            additionalProperties: true
            items:
              $ref: "#/components/schemas/Task"
            minItems: 1
            type: array
          errors:
            items:
              $ref: "#/components/schemas/Task"
            type: array
          listeners:
            deprecated: true
            items:
              $ref: "#/components/schemas/Listener"
            type: array
          afterExecution:
            items:
              $ref: "#/components/schemas/Task"
            type: array
          triggers:
            items:
              $ref: "#/components/schemas/AbstractTrigger"
            type: array
          pluginDefaults:
            items:
              $ref: "#/components/schemas/PluginDefault"
            type: array
          concurrency:
            $ref: "#/components/schemas/Concurrency"
          outputs:
            description: Output values make information about the execution of your
              Flow available and expose for other Kestra flows to use. Output values
              are similar to return values in programming languages.
            items:
              $ref: "#/components/schemas/Output"
            title: Output values available and exposes to other flows.
            type: array
          retry:
            $ref: "#/components/schemas/AbstractRetry"
          sla:
            items:
              $ref: "#/components/schemas/SLA"
            type: array
        type: object
      example:
        outputs:
        - displayName: displayName
          description: description
          id: id
          type: STRING
          value: "{}"
          required: true
        - displayName: displayName
          description: description
          id: id
          type: STRING
          value: "{}"
          required: true
        variables:
          key: "{}"
        listeners:
        - description: description
          conditions:
          - type: type
          - type: type
          tasks:
          - taskCache:
              ttl: ttl
              enabled: true
            description: description
            type: type
            logToFile: true
            version: version
            timeout:
              expression: expression
              value: value
            allowWarning: true
            allowFailure: true
            logLevel: ERROR
            runIf: runIf
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            retry: "{}"
          - taskCache:
              ttl: ttl
              enabled: true
            description: description
            type: type
            logToFile: true
            version: version
            timeout:
              expression: expression
              value: value
            allowWarning: true
            allowFailure: true
            logLevel: ERROR
            runIf: runIf
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            retry: "{}"
        - description: description
          conditions:
          - type: type
          - type: type
          tasks:
          - taskCache:
              ttl: ttl
              enabled: true
            description: description
            type: type
            logToFile: true
            version: version
            timeout:
              expression: expression
              value: value
            allowWarning: true
            allowFailure: true
            logLevel: ERROR
            runIf: runIf
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            retry: "{}"
          - taskCache:
              ttl: ttl
              enabled: true
            description: description
            type: type
            logToFile: true
            version: version
            timeout:
              expression: expression
              value: value
            allowWarning: true
            allowFailure: true
            logLevel: ERROR
            runIf: runIf
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            retry: "{}"
        inputs:
        - dependsOn: ""
          defaults: ""
          displayName: displayName
          name: name
          description: description
          id: id
          type: ""
          required: true
        - dependsOn: ""
          defaults: ""
          displayName: displayName
          name: name
          description: description
          id: id
          type: ""
          required: true
        finally:
        - taskCache:
            ttl: ttl
            enabled: true
          description: description
          type: type
          logToFile: true
          version: version
          timeout:
            expression: expression
            value: value
          allowWarning: true
          allowFailure: true
          logLevel: ERROR
          runIf: runIf
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          retry: "{}"
        - taskCache:
            ttl: ttl
            enabled: true
          description: description
          type: type
          logToFile: true
          version: version
          timeout:
            expression: expression
            value: value
          allowWarning: true
          allowFailure: true
          logLevel: ERROR
          runIf: runIf
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          retry: "{}"
        description: description
        sla:
        - id: id
          type: MAX_DURATION
          behavior: FAIL
          labels:
          - FlowWithSource_allOf_labels
          - FlowWithSource_allOf_labels
        - id: id
          type: MAX_DURATION
          behavior: FAIL
          labels:
          - FlowWithSource_allOf_labels
          - FlowWithSource_allOf_labels
        afterExecution:
        - taskCache:
            ttl: ttl
            enabled: true
          description: description
          type: type
          logToFile: true
          version: version
          timeout:
            expression: expression
            value: value
          allowWarning: true
          allowFailure: true
          logLevel: ERROR
          runIf: runIf
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          retry: "{}"
        - taskCache:
            ttl: ttl
            enabled: true
          description: description
          type: type
          logToFile: true
          version: version
          timeout:
            expression: expression
            value: value
          allowWarning: true
          allowFailure: true
          logLevel: ERROR
          runIf: runIf
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          retry: "{}"
        triggers:
        - minLogLevel: ""
          stopAfter:
          - CREATED
          - CREATED
          description: description
          type: type
          logToFile: true
          version: version
          labels:
          - The_labels_to_pass_to_the_execution_created_
          - The_labels_to_pass_to_the_execution_created_
          failOnTriggerError: true
          logLevel: null
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          conditions:
          - type: type
          - type: type
        - minLogLevel: ""
          stopAfter:
          - CREATED
          - CREATED
          description: description
          type: type
          logToFile: true
          version: version
          labels:
          - The_labels_to_pass_to_the_execution_created_
          - The_labels_to_pass_to_the_execution_created_
          failOnTriggerError: true
          logLevel: null
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          conditions:
          - type: type
          - type: type
        pluginDefaults:
        - forced: true
          values:
            key: "{}"
          type: type
        - forced: true
          values:
            key: "{}"
          type: type
        revision: 1
        labels:
        - Flow_allOf_labels
        - Flow_allOf_labels
        concurrency:
          limit: 1
          behavior: QUEUE
        deleted: true
        taskDefaults:
        - forced: true
          values:
            key: "{}"
          type: type
        - forced: true
          values:
            key: "{}"
          type: type
        namespace: namespace
        disabled: true
        id: id
        workerGroup:
          fallback: FAIL
          key: key
        tasks:
        - taskCache:
            ttl: ttl
            enabled: true
          description: description
          type: type
          logToFile: true
          version: version
          timeout:
            expression: expression
            value: value
          allowWarning: true
          allowFailure: true
          logLevel: ERROR
          runIf: runIf
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          retry: "{}"
        - taskCache:
            ttl: ttl
            enabled: true
          description: description
          type: type
          logToFile: true
          version: version
          timeout:
            expression: expression
            value: value
          allowWarning: true
          allowFailure: true
          logLevel: ERROR
          runIf: runIf
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          retry: "{}"
        errors:
        - taskCache:
            ttl: ttl
            enabled: true
          description: description
          type: type
          logToFile: true
          version: version
          timeout:
            expression: expression
            value: value
          allowWarning: true
          allowFailure: true
          logLevel: ERROR
          runIf: runIf
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          retry: "{}"
        - taskCache:
            ttl: ttl
            enabled: true
          description: description
          type: type
          logToFile: true
          version: version
          timeout:
            expression: expression
            value: value
          allowWarning: true
          allowFailure: true
          logLevel: ERROR
          runIf: runIf
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          retry: "{}"
        retry: null
      required:
      - deleted
      - disabled
      - id
      - namespace
      - tasks
      type: object
    FlowController.TaskValidationType:
      enum:
      - TASKS
      - TRIGGERS
      type: string
    FlowForExecution:
      allOf:
      - $ref: "#/components/schemas/AbstractFlow"
      - properties:
          id:
            maxLength: 100
            minLength: 1
            pattern: "^[a-zA-Z0-9][a-zA-Z0-9._-]*"
            type: string
          namespace:
            maxLength: 150
            minLength: 1
            pattern: "^[a-z0-9][a-z0-9._-]*"
            type: string
          revision:
            format: int32
            minimum: 1
            type: integer
          description:
            type: string
          inputs:
            items:
              $ref: "#/components/schemas/Input_Object_"
            type: array
          outputs:
            items:
              $ref: "#/components/schemas/Output"
            type: array
          disabled:
            type: boolean
          labels:
            $ref: "#/components/schemas/FlowForExecution_allOf_labels"
          variables:
            additionalProperties: true
            type: object
          workerGroup:
            $ref: "#/components/schemas/WorkerGroup"
          deleted:
            type: boolean
          tasks:
            items:
              $ref: "#/components/schemas/TaskForExecution"
            minItems: 1
            type: array
          errors:
            items:
              $ref: "#/components/schemas/TaskForExecution"
            type: array
          finally:
            items:
              $ref: "#/components/schemas/TaskForExecution"
            type: array
          afterExecution:
            items:
              $ref: "#/components/schemas/TaskForExecution"
            type: array
          triggers:
            items:
              $ref: "#/components/schemas/AbstractTriggerForExecution"
            type: array
        type: object
      example:
        outputs:
        - displayName: displayName
          description: description
          id: id
          type: STRING
          value: "{}"
          required: true
        - displayName: displayName
          description: description
          id: id
          type: STRING
          value: "{}"
          required: true
        variables:
          key: ""
        inputs:
        - dependsOn: ""
          defaults: ""
          displayName: displayName
          name: name
          description: description
          id: id
          type: ""
          required: true
        - dependsOn: ""
          defaults: ""
          displayName: displayName
          name: name
          description: description
          id: id
          type: ""
          required: true
        finally:
        - inputs:
          - dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          - dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          subflowId:
            namespace: namespace
            flowId: flowId
            revision: 1
          id: id
          type: type
          version: version
          tasks:
          - null
          - null
        - inputs:
          - dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          - dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          subflowId:
            namespace: namespace
            flowId: flowId
            revision: 1
          id: id
          type: type
          version: version
          tasks:
          - null
          - null
        description: description
        afterExecution:
        - inputs:
          - dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          - dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          subflowId:
            namespace: namespace
            flowId: flowId
            revision: 1
          id: id
          type: type
          version: version
          tasks:
          - null
          - null
        - inputs:
          - dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          - dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          subflowId:
            namespace: namespace
            flowId: flowId
            revision: 1
          id: id
          type: type
          version: version
          tasks:
          - null
          - null
        triggers:
        - id: id
          type: type
          version: version
        - id: id
          type: type
          version: version
        revision: 1
        labels:
        - FlowForExecution_allOf_labels
        - FlowForExecution_allOf_labels
        deleted: true
        namespace: namespace
        disabled: true
        id: id
        workerGroup:
          fallback: FAIL
          key: key
        tasks:
        - inputs:
          - dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          - dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          subflowId:
            namespace: namespace
            flowId: flowId
            revision: 1
          id: id
          type: type
          version: version
          tasks:
          - null
          - null
        - inputs:
          - dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          - dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          subflowId:
            namespace: namespace
            flowId: flowId
            revision: 1
          id: id
          type: type
          version: version
          tasks:
          - null
          - null
        errors:
        - inputs:
          - dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          - dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          subflowId:
            namespace: namespace
            flowId: flowId
            revision: 1
          id: id
          type: type
          version: version
          tasks:
          - null
          - null
        - inputs:
          - dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          - dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          subflowId:
            namespace: namespace
            flowId: flowId
            revision: 1
          id: id
          type: type
          version: version
          tasks:
          - null
          - null
      required:
      - deleted
      - disabled
      - id
      - namespace
      - tasks
      type: object
    FlowGenerationPrompt:
      example:
        conversationId: conversationId
        userPrompt: userPrompt
        flowYaml: flowYaml
      properties:
        conversationId:
          type: string
        userPrompt:
          type: string
        flowYaml:
          type: string
      required:
      - conversationId
      - flowYaml
      - userPrompt
      type: object
    FlowGraph:
      example:
        nodes:
        - uid: uid
          branchType: ERROR
          type: type
        - uid: uid
          branchType: ERROR
          type: type
        flowables:
        - flowables
        - flowables
        edges:
        - source: source
          target: target
          relation:
            relationType: SEQUENTIAL
            value: value
        - source: source
          target: target
          relation:
            relationType: SEQUENTIAL
            value: value
        clusters:
        - cluster:
            uid: uid
            branchType: ERROR
            type: type
          nodes:
          - nodes
          - nodes
          start: start
          end: end
          parents:
          - parents
          - parents
        - cluster:
            uid: uid
            branchType: ERROR
            type: type
          nodes:
          - nodes
          - nodes
          start: start
          end: end
          parents:
          - parents
          - parents
      properties:
        nodes:
          items:
            $ref: "#/components/schemas/AbstractGraph"
          type: array
        edges:
          items:
            $ref: "#/components/schemas/FlowGraph.Edge"
          type: array
        clusters:
          items:
            $ref: "#/components/schemas/FlowGraph.Cluster"
          type: array
        flowables:
          items:
            type: string
          type: array
      required:
      - clusters
      - edges
      - flowables
      - nodes
      type: object
    FlowGraph.Cluster:
      example:
        cluster:
          uid: uid
          branchType: ERROR
          type: type
        nodes:
        - nodes
        - nodes
        start: start
        end: end
        parents:
        - parents
        - parents
      properties:
        cluster:
          $ref: "#/components/schemas/AbstractGraph"
        nodes:
          items:
            type: string
          type: array
        parents:
          items:
            type: string
          type: array
        start:
          type: string
        end:
          type: string
      required:
      - cluster
      - end
      - nodes
      - parents
      - start
      type: object
    FlowGraph.Edge:
      example:
        source: source
        target: target
        relation:
          relationType: SEQUENTIAL
          value: value
      properties:
        source:
          type: string
        target:
          type: string
        relation:
          $ref: "#/components/schemas/Relation"
      required:
      - relation
      - source
      - target
      type: object
    FlowId:
      properties:
        id:
          type: string
        namespace:
          type: string
        revision:
          format: int32
          type: integer
        tenantId:
          type: string
      type: object
    FlowInterface:
      allOf:
      - $ref: "#/components/schemas/FlowId"
      - $ref: "#/components/schemas/DeletedInterface"
      - $ref: "#/components/schemas/TenantInterface"
      - properties:
          description:
            type: string
          disabled:
            type: boolean
          deleted:
            type: boolean
          labels:
            items:
              $ref: "#/components/schemas/Label"
            type: array
          inputs:
            items:
              $ref: "#/components/schemas/Input_Object_"
            type: array
          outputs:
            items:
              $ref: "#/components/schemas/Output"
            type: array
          variables:
            additionalProperties:
              type: object
            type: object
          workerGroup:
            $ref: "#/components/schemas/WorkerGroup"
          concurrency:
            $ref: "#/components/schemas/Concurrency"
          sla:
            items:
              $ref: "#/components/schemas/SLA"
            type: array
          source:
            type: string
        type: object
      example:
        outputs:
        - displayName: displayName
          description: description
          id: id
          type: STRING
          value: "{}"
          required: true
        - displayName: displayName
          description: description
          id: id
          type: STRING
          value: "{}"
          required: true
        variables:
          key: "{}"
        inputs:
        - dependsOn: ""
          defaults: ""
          displayName: displayName
          name: name
          description: description
          id: id
          type: ""
          required: true
        - dependsOn: ""
          defaults: ""
          displayName: displayName
          name: name
          description: description
          id: id
          type: ""
          required: true
        description: description
        sla:
        - id: id
          type: MAX_DURATION
          behavior: FAIL
          labels:
          - FlowWithSource_allOf_labels
          - FlowWithSource_allOf_labels
        - id: id
          type: MAX_DURATION
          behavior: FAIL
          labels:
          - FlowWithSource_allOf_labels
          - FlowWithSource_allOf_labels
        source: source
        revision: 0
        labels:
        - value: value
          key: key
        - value: value
          key: key
        concurrency:
          limit: 1
          behavior: QUEUE
        deleted: true
        namespace: namespace
        tenantId: tenantId
        disabled: true
        id: id
        workerGroup:
          fallback: FAIL
          key: key
      type: object
    FlowNode:
      example:
        uid: uid
        namespace: namespace
        id: id
      properties:
        uid:
          type: string
        namespace:
          type: string
        id:
          type: string
      required:
      - id
      - namespace
      - uid
      type: object
    FlowRelation:
      enum:
      - FLOW_TASK
      - FLOW_TRIGGER
      type: string
    FlowScope:
      enum:
      - USER
      - SYSTEM
      type: string
    FlowTopologyGraph:
      example:
        nodes:
        - uid: uid
          namespace: namespace
          id: id
        - uid: uid
          namespace: namespace
          id: id
        edges:
        - source: source
          target: target
          relation: FLOW_TASK
        - source: source
          target: target
          relation: FLOW_TASK
      properties:
        nodes:
          items:
            $ref: "#/components/schemas/FlowNode"
          type: array
        edges:
          items:
            $ref: "#/components/schemas/FlowTopologyGraph.Edge"
          type: array
      required:
      - edges
      - nodes
      type: object
    FlowTopologyGraph.Edge:
      example:
        source: source
        target: target
        relation: FLOW_TASK
      properties:
        source:
          type: string
        target:
          type: string
        relation:
          $ref: "#/components/schemas/FlowRelation"
      required:
      - relation
      - source
      - target
      type: object
    FlowUsage:
      properties:
        count:
          format: int32
          type: integer
        namespacesCount:
          format: int64
          type: integer
        taskTypeCount:
          additionalProperties:
            format: int64
            type: integer
          type: object
        triggerTypeCount:
          additionalProperties:
            format: int64
            type: integer
          type: object
        taskRunnerTypeCount:
          additionalProperties:
            format: int64
            type: integer
          type: object
      type: object
    FlowWithSource:
      allOf:
      - $ref: "#/components/schemas/Flow"
      - $ref: "#/components/schemas/AbstractFlow"
      - properties:
          id:
            maxLength: 100
            minLength: 1
            pattern: "^[a-zA-Z0-9][a-zA-Z0-9._-]*"
            type: string
          namespace:
            maxLength: 150
            minLength: 1
            pattern: "^[a-z0-9][a-z0-9._-]*"
            type: string
          revision:
            format: int32
            minimum: 1
            type: integer
          description:
            type: string
          inputs:
            items:
              $ref: "#/components/schemas/Input_Object_"
            type: array
          disabled:
            type: boolean
          labels:
            $ref: "#/components/schemas/FlowWithSource_allOf_labels"
          workerGroup:
            $ref: "#/components/schemas/WorkerGroup"
          deleted:
            type: boolean
          variables:
            additionalProperties:
              type: object
            type: object
          concurrency:
            $ref: "#/components/schemas/Concurrency"
          outputs:
            description: Output values make information about the execution of your
              Flow available and expose for other Kestra flows to use. Output values
              are similar to return values in programming languages.
            items:
              $ref: "#/components/schemas/Output"
            title: Output values available and exposes to other flows.
            type: array
          sla:
            items:
              $ref: "#/components/schemas/SLA"
            type: array
        type: object
      example:
        outputs:
        - displayName: displayName
          description: description
          id: id
          type: STRING
          value: "{}"
          required: true
        - displayName: displayName
          description: description
          id: id
          type: STRING
          value: "{}"
          required: true
        variables:
          key: "{}"
        listeners:
        - description: description
          conditions:
          - type: type
          - type: type
          tasks:
          - taskCache:
              ttl: ttl
              enabled: true
            description: description
            type: type
            logToFile: true
            version: version
            timeout:
              expression: expression
              value: value
            allowWarning: true
            allowFailure: true
            logLevel: ERROR
            runIf: runIf
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            retry: "{}"
          - taskCache:
              ttl: ttl
              enabled: true
            description: description
            type: type
            logToFile: true
            version: version
            timeout:
              expression: expression
              value: value
            allowWarning: true
            allowFailure: true
            logLevel: ERROR
            runIf: runIf
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            retry: "{}"
        - description: description
          conditions:
          - type: type
          - type: type
          tasks:
          - taskCache:
              ttl: ttl
              enabled: true
            description: description
            type: type
            logToFile: true
            version: version
            timeout:
              expression: expression
              value: value
            allowWarning: true
            allowFailure: true
            logLevel: ERROR
            runIf: runIf
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            retry: "{}"
          - taskCache:
              ttl: ttl
              enabled: true
            description: description
            type: type
            logToFile: true
            version: version
            timeout:
              expression: expression
              value: value
            allowWarning: true
            allowFailure: true
            logLevel: ERROR
            runIf: runIf
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            retry: "{}"
        inputs:
        - dependsOn: ""
          defaults: ""
          displayName: displayName
          name: name
          description: description
          id: id
          type: ""
          required: true
        - dependsOn: ""
          defaults: ""
          displayName: displayName
          name: name
          description: description
          id: id
          type: ""
          required: true
        finally:
        - taskCache:
            ttl: ttl
            enabled: true
          description: description
          type: type
          logToFile: true
          version: version
          timeout:
            expression: expression
            value: value
          allowWarning: true
          allowFailure: true
          logLevel: ERROR
          runIf: runIf
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          retry: "{}"
        - taskCache:
            ttl: ttl
            enabled: true
          description: description
          type: type
          logToFile: true
          version: version
          timeout:
            expression: expression
            value: value
          allowWarning: true
          allowFailure: true
          logLevel: ERROR
          runIf: runIf
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          retry: "{}"
        description: description
        sla:
        - id: id
          type: MAX_DURATION
          behavior: FAIL
          labels:
          - FlowWithSource_allOf_labels
          - FlowWithSource_allOf_labels
        - id: id
          type: MAX_DURATION
          behavior: FAIL
          labels:
          - FlowWithSource_allOf_labels
          - FlowWithSource_allOf_labels
        afterExecution:
        - taskCache:
            ttl: ttl
            enabled: true
          description: description
          type: type
          logToFile: true
          version: version
          timeout:
            expression: expression
            value: value
          allowWarning: true
          allowFailure: true
          logLevel: ERROR
          runIf: runIf
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          retry: "{}"
        - taskCache:
            ttl: ttl
            enabled: true
          description: description
          type: type
          logToFile: true
          version: version
          timeout:
            expression: expression
            value: value
          allowWarning: true
          allowFailure: true
          logLevel: ERROR
          runIf: runIf
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          retry: "{}"
        triggers:
        - minLogLevel: ""
          stopAfter:
          - CREATED
          - CREATED
          description: description
          type: type
          logToFile: true
          version: version
          labels:
          - The_labels_to_pass_to_the_execution_created_
          - The_labels_to_pass_to_the_execution_created_
          failOnTriggerError: true
          logLevel: null
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          conditions:
          - type: type
          - type: type
        - minLogLevel: ""
          stopAfter:
          - CREATED
          - CREATED
          description: description
          type: type
          logToFile: true
          version: version
          labels:
          - The_labels_to_pass_to_the_execution_created_
          - The_labels_to_pass_to_the_execution_created_
          failOnTriggerError: true
          logLevel: null
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          conditions:
          - type: type
          - type: type
        pluginDefaults:
        - forced: true
          values:
            key: "{}"
          type: type
        - forced: true
          values:
            key: "{}"
          type: type
        revision: 1
        labels: null
        concurrency:
          limit: 1
          behavior: QUEUE
        deleted: true
        taskDefaults:
        - forced: true
          values:
            key: "{}"
          type: type
        - forced: true
          values:
            key: "{}"
          type: type
        namespace: namespace
        disabled: true
        id: id
        workerGroup:
          fallback: FAIL
          key: key
        tasks:
        - taskCache:
            ttl: ttl
            enabled: true
          description: description
          type: type
          logToFile: true
          version: version
          timeout:
            expression: expression
            value: value
          allowWarning: true
          allowFailure: true
          logLevel: ERROR
          runIf: runIf
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          retry: "{}"
        - taskCache:
            ttl: ttl
            enabled: true
          description: description
          type: type
          logToFile: true
          version: version
          timeout:
            expression: expression
            value: value
          allowWarning: true
          allowFailure: true
          logLevel: ERROR
          runIf: runIf
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          retry: "{}"
        errors:
        - taskCache:
            ttl: ttl
            enabled: true
          description: description
          type: type
          logToFile: true
          version: version
          timeout:
            expression: expression
            value: value
          allowWarning: true
          allowFailure: true
          logLevel: ERROR
          runIf: runIf
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          retry: "{}"
        - taskCache:
            ttl: ttl
            enabled: true
          description: description
          type: type
          logToFile: true
          version: version
          timeout:
            expression: expression
            value: value
          allowWarning: true
          allowFailure: true
          logLevel: ERROR
          runIf: runIf
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          retry: "{}"
        retry: null
      required:
      - deleted
      - disabled
      - id
      - namespace
      type: object
    GroupIdentifier:
      example:
        groupId: groupId
        tenantId: tenantId
        managedExternally: true
        membership: OWNER
      properties:
        tenantId:
          nullable: true
          type: string
        groupId:
          type: string
        membership:
          $ref: "#/components/schemas/GroupIdentifier.Membership"
        managedExternally:
          type: boolean
      required:
      - groupId
      - managedExternally
      - membership
      - tenantId
      type: object
    GroupIdentifier.Membership:
      enum:
      - OWNER
      - MEMBER
      type: string
    GroupUsage:
      example:
        count: 0
      properties:
        count:
          format: int64
          type: integer
      type: object
    HttpParameters:
      allOf:
      - $ref: "#/components/schemas/ConvertibleMultiValues_String_"
      - $ref: "#/components/schemas/ConvertibleValues_List_String__"
      - $ref: "#/components/schemas/ConversionServiceProvider"
      type: object
    IAMBindingController.ApiBindingDetail:
      example:
        role:
          name: name
          id: id
        namespace: namespace
        id: id
        type: USER
        user: ""
        group: ""
      properties:
        id:
          type: string
        type:
          $ref: "#/components/schemas/Binding.Type"
        namespace:
          nullable: true
          type: string
        role:
          $ref: "#/components/schemas/IAMBindingController.ApiRole"
        group:
          allOf:
          - $ref: "#/components/schemas/IAMBindingController.ApiBindingGroup"
          nullable: true
        user:
          allOf:
          - $ref: "#/components/schemas/IAMBindingController.ApiBindingUser"
          nullable: true
      required:
      - id
      - role
      - type
      type: object
    IAMBindingController.ApiBindingGroup:
      properties:
        id:
          type: string
        name:
          type: string
      required:
      - id
      - name
      type: object
    IAMBindingController.ApiBindingUser:
      properties:
        id:
          type: string
        username:
          type: string
        displayName:
          type: string
        type:
          $ref: "#/components/schemas/UserType"
      required:
      - displayName
      - id
      - type
      - username
      type: object
    IAMBindingController.ApiCreateBindingRequest:
      properties:
        type:
          $ref: "#/components/schemas/Binding.Type"
        externalId:
          type: string
        roleId:
          type: string
        namespaceId:
          nullable: true
          type: string
      required:
      - externalId
      - roleId
      - type
      type: object
    IAMBindingController.ApiRole:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
      required:
      - id
      - name
      type: object
    IAMGroupController.ApiCreateGroupRequest:
      properties:
        name:
          type: string
        description:
          type: string
        membersId:
          items:
            type: string
          type: array
      required:
      - description
      - membersId
      - name
      type: object
    IAMGroupController.ApiGroupDetail:
      example:
        name: name
        description: description
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
      required:
      - description
      - id
      - name
      type: object
    IAMGroupController.ApiGroupMember:
      example:
        displayName: displayName
        groups:
        - external: true
          name: name
          id: id
          membership: OWNER
        - external: true
          name: name
          id: id
          membership: OWNER
        id: id
        username: username
      properties:
        id:
          type: string
        username:
          type: string
        displayName:
          type: string
        groups:
          items:
            $ref: "#/components/schemas/IAMGroupController.ApiGroupMembership"
          type: array
      required:
      - displayName
      - groups
      - id
      - username
      type: object
    IAMGroupController.ApiGroupMembership:
      example:
        external: true
        name: name
        id: id
        membership: OWNER
      properties:
        id:
          type: string
        name:
          type: string
        external:
          type: boolean
        membership:
          $ref: "#/components/schemas/GroupIdentifier.Membership"
      required:
      - external
      - id
      - membership
      - name
      type: object
    IAMGroupController.ApiUpdateGroupRequest:
      description: Represents updatable properties for a Group.
      properties:
        name:
          description: of the group.
          type: string
        description:
          description: of the group.
          type: string
      required:
      - description
      - name
      type: object
    IAMInvitationController.ApiInvitationCreateRequest:
      properties:
        createUserIfNotExist:
          type: boolean
        superAdmin:
          type: boolean
        roles:
          items:
            $ref: "#/components/schemas/IAMInvitationController.ApiInvitationRole"
          type: array
        groups:
          items:
            type: string
          type: array
        email:
          type: string
      required:
      - createUserIfNotExist
      - email
      - groups
      - roles
      - superAdmin
      type: object
    IAMInvitationController.ApiInvitationDetail:
      example:
        expiredAt: 2000-01-23T04:56:07.000+00:00
        roles:
        - isDefault: true
          name: name
          id: id
          isManaged: true
        - isDefault: true
          name: name
          id: id
          isManaged: true
        tenantId: tenantId
        link: link
        groups:
        - name: name
          id: id
        - name: name
          id: id
        id: id
        sentAt: 2000-01-23T04:56:07.000+00:00
        superAdmin: true
        email: email
        status: PENDING
        acceptedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        roles:
          items:
            $ref: "#/components/schemas/ApiRoleSummary"
          type: array
        groups:
          items:
            $ref: "#/components/schemas/ApiGroupSummary"
          type: array
        tenantId:
          type: string
        email:
          type: string
        status:
          $ref: "#/components/schemas/Invitation.InvitationStatus"
        sentAt:
          format: date-time
          type: string
        expiredAt:
          format: date-time
          type: string
        acceptedAt:
          format: date-time
          type: string
        superAdmin:
          type: boolean
        link:
          type: string
      required:
      - acceptedAt
      - email
      - expiredAt
      - groups
      - id
      - link
      - roles
      - sentAt
      - status
      - superAdmin
      - tenantId
      type: object
    IAMInvitationController.ApiInvitationRole:
      properties:
        id:
          type: string
        namespaces:
          items:
            type: string
          type: array
      required:
      - id
      - namespaces
      type: object
    IAMRoleController.ApiRoleCreateOrUpdateRequest:
      properties:
        permissions:
          $ref: "#/components/schemas/IAMRoleController_ApiRoleCreateOrUpdateRequest_permissions"
        name:
          type: string
        description:
          type: string
        isDefault:
          type: boolean
      required:
      - description
      - isDefault
      - name
      - permissions
      type: object
    IAMRoleController.ApiRoleDetail:
      example:
        isDefault: true
        permissions:
          NAMESPACE:
          - NAMESPACE
          - NAMESPACE
          APPEXECUTION:
          - APPEXECUTION
          - APPEXECUTION
          APP:
          - APP
          - APP
          TENANT_ACCESS:
          - TENANT_ACCESS
          - TENANT_ACCESS
          SERVICE_ACCOUNT:
          - SERVICE_ACCOUNT
          - SERVICE_ACCOUNT
          BLUEPRINT:
          - BLUEPRINT
          - BLUEPRINT
          EXECUTION:
          - EXECUTION
          - EXECUTION
          USER:
          - USER
          - USER
          FLOW:
          - FLOW
          - FLOW
          GROUP_MEMBERSHIP:
          - GROUP_MEMBERSHIP
          - GROUP_MEMBERSHIP
          ROLE:
          - ROLE
          - ROLE
          INVITATION:
          - INVITATION
          - INVITATION
          GROUP:
          - GROUP
          - GROUP
          TEST:
          - TEST
          - TEST
          DASHBOARD:
          - DASHBOARD
          - DASHBOARD
          IMPERSONATE:
          - IMPERSONATE
          - IMPERSONATE
          TEMPLATE:
          - TEMPLATE
          - TEMPLATE
          AUDITLOG:
          - AUDITLOG
          - AUDITLOG
          SETTING:
          - SETTING
          - SETTING
          INFRASTRUCTURE:
          - INFRASTRUCTURE
          - INFRASTRUCTURE
          KVSTORE:
          - KVSTORE
          - KVSTORE
          UNKNOWN:
          - UNKNOWN
          - UNKNOWN
          BINDING:
          - BINDING
          - BINDING
          SECRET:
          - SECRET
          - SECRET
        name: name
        description: description
        id: id
        isManaged: true
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        permissions:
          $ref: "#/components/schemas/IAMRoleController_ApiRoleCreateOrUpdateRequest_permissions"
        isDefault:
          type: boolean
        isManaged:
          type: boolean
      required:
      - description
      - id
      - isDefault
      - isManaged
      - name
      - permissions
      type: object
    IAMServiceAccountController.ApiCreateServiceAccountRequest:
      description: Request payload for updating service account details
      properties:
        name:
          pattern: "^(?=.{1,63}$)[a-z0-9]+(?:-[a-z0-9]+)*$"
          type: string
        description:
          type: string
        superAdmin:
          type: boolean
        tenants:
          items:
            type: string
          type: array
      required:
      - description
      - name
      - superAdmin
      - tenants
      type: object
    IAMServiceAccountController.ApiGroup:
      example:
        id: id
      properties:
        id:
          type: string
      required:
      - id
      type: object
    IAMServiceAccountController.ApiPatchServiceAccountRequest:
      description: Request payload for updating service account details
      properties:
        name:
          pattern: "^(?=.{1,63}$)[a-z0-9]+(?:-[a-z0-9]+)*$"
          type: string
        description:
          type: string
      required:
      - description
      - name
      type: object
    IAMServiceAccountController.ApiServiceAccountDetail:
      description: A User Service Account.
      example:
        tenants:
        - name: name
          id: id
        - name: name
          id: id
        name: name
        description: description
        id: id
        superAdmin: true
      properties:
        id:
          description: the identifier of this service account.
          type: string
        name:
          description: the name of this service account.
          pattern: "^(?=.{1,63}$)[a-z0-9]+(?:-[a-z0-9]+)*$"
          type: string
        description:
          description: the description of this service account.
          type: string
        tenants:
          items:
            $ref: "#/components/schemas/ApiTenantSummary"
          type: array
        superAdmin:
          type: boolean
      required:
      - description
      - id
      - name
      - superAdmin
      - tenants
      type: object
    IAMServiceAccountController.ApiServiceAccountRequest:
      description: A User Service Account.
      properties:
        groups:
          items:
            $ref: "#/components/schemas/IAMServiceAccountController.ApiGroup"
          type: array
        name:
          pattern: "^(?=.{1,63}$)[a-z0-9]+(?:-[a-z0-9]+)*$"
          type: string
        description:
          type: string
        superAdmin:
          type: boolean
      required:
      - description
      - groups
      - name
      - superAdmin
      type: object
    IAMServiceAccountController.ApiServiceAccountResponse:
      description: A User Service Account.
      example:
        name: name
        description: description
        groups:
        - id: id
        - id: id
        id: id
        superAdmin: true
      properties:
        id:
          description: the identifier of this service account.
          type: string
        name:
          description: the name of this service account.
          pattern: "^(?=.{1,63}$)[a-z0-9]+(?:-[a-z0-9]+)*$"
          type: string
        description:
          description: the description of this service account.
          type: string
        groups:
          items:
            $ref: "#/components/schemas/IAMServiceAccountController.ApiGroup"
          type: array
        superAdmin:
          type: boolean
      required:
      - description
      - groups
      - id
      - name
      - superAdmin
      type: object
    IAMTenantAccessController.ApiAuthentication:
      example:
        name: name
        type: type
      properties:
        name:
          type: string
        type:
          type: string
      required:
      - name
      - type
      type: object
    IAMTenantAccessController.ApiCreateTenantAccessRequest:
      properties:
        email:
          type: string
      required:
      - email
      type: object
    IAMTenantAccessController.ApiGroup:
      example:
        external: true
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        external:
          type: boolean
      required:
      - external
      - id
      - name
      type: object
    IAMTenantAccessController.ApiRoleAssignment:
      example:
        sourceId: sourceId
        permissions:
        - permission: FLOW
          actions:
          - READ
          - READ
        - permission: FLOW
          actions:
          - READ
          - READ
        origin: BINDING
        name: name
        namespace: namespace
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        namespace:
          type: string
        origin:
          $ref: "#/components/schemas/RBACService.RoleAssignment.RoleOrigin"
        sourceId:
          type: string
        permissions:
          items:
            $ref: "#/components/schemas/IAMTenantAccessController.ApiUserPermission"
          type: array
      required:
      - id
      - name
      - namespace
      - origin
      - permissions
      - sourceId
      type: object
    IAMTenantAccessController.ApiTenantAccess:
      example:
        displayName: displayName
        roles:
        - sourceId: sourceId
          permissions:
          - permission: FLOW
            actions:
            - READ
            - READ
          - permission: FLOW
            actions:
            - READ
            - READ
          origin: BINDING
          name: name
          namespace: namespace
          id: id
        - sourceId: sourceId
          permissions:
          - permission: FLOW
            actions:
            - READ
            - READ
          - permission: FLOW
            actions:
            - READ
            - READ
          origin: BINDING
          name: name
          namespace: namespace
          id: id
        tenantId: tenantId
        groups:
        - external: true
          name: name
          id: id
        - external: true
          name: name
          id: id
        userId: userId
        superAdmin: true
        username: username
      properties:
        tenantId:
          type: string
        userId:
          type: string
        username:
          type: string
        displayName:
          type: string
        groups:
          items:
            $ref: "#/components/schemas/IAMTenantAccessController.ApiGroup"
          type: array
        roles:
          items:
            $ref: "#/components/schemas/IAMTenantAccessController.ApiRoleAssignment"
          type: array
        superAdmin:
          type: boolean
      required:
      - displayName
      - groups
      - roles
      - superAdmin
      - tenantId
      - userId
      - username
      type: object
    IAMTenantAccessController.ApiUserPermission:
      example:
        permission: FLOW
        actions:
        - READ
        - READ
      properties:
        permission:
          $ref: "#/components/schemas/Permission"
        actions:
          items:
            $ref: "#/components/schemas/Action"
          type: array
      required:
      - actions
      - permission
      type: object
    IAMTenantAccessController.ApiUserTenantAccess:
      example:
        displayName: displayName
        auths:
        - name: name
          type: type
        - name: name
          type: type
        description: description
        groups:
        - external: true
          name: name
          id: id
        - external: true
          name: name
          id: id
        id: id
        username: username
      properties:
        id:
          type: string
        username:
          type: string
        displayName:
          type: string
        description:
          type: string
        groups:
          items:
            $ref: "#/components/schemas/IAMTenantAccessController.ApiGroup"
          type: array
        auths:
          items:
            $ref: "#/components/schemas/IAMTenantAccessController.ApiAuthentication"
          type: array
      required:
      - auths
      - description
      - displayName
      - groups
      - id
      - username
      type: object
    IAMTenantAccessController.UserApiAutocomplete:
      allOf:
      - $ref: "#/components/schemas/ApiAutocomplete"
      - properties:
          username:
            nullable: true
            type: string
        type: object
      type: object
    IAMUserController.ApiCreateOrUpdateUserRequest:
      properties:
        tenants:
          items:
            type: string
          type: array
        groups:
          items:
            type: string
          type: array
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        superAdmin:
          type: boolean
        restricted:
          type: boolean
      required:
      - email
      - firstName
      - groups
      - lastName
      - password
      - restricted
      - superAdmin
      - tenants
      type: object
    IAMUserController.ApiGroup:
      example:
        tenantId: tenantId
        id: id
      properties:
        id:
          type: string
        tenantId:
          type: string
      required:
      - id
      - tenantId
      type: object
    IAMUserController.ApiPatchRestrictedRequest:
      properties:
        restricted:
          type: boolean
      required:
      - restricted
      type: object
    IAMUserController.ApiPatchUserPasswordRequest:
      properties:
        password:
          type: string
      required:
      - password
      type: object
    IAMUserController.ApiUser:
      example:
        firstName: firstName
        lastName: lastName
        tenants:
        - name: name
          id: id
        - name: name
          id: id
        displayName: displayName
        auths:
        - name: name
          id: id
          type: type
        - name: name
          id: id
          type: type
        restricted: true
        groups:
        - tenantId: tenantId
          id: id
        - tenantId: tenantId
          id: id
        id: id
        superAdmin: true
        email: email
        username: username
      properties:
        id:
          type: string
        username:
          type: string
        displayName:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        tenants:
          items:
            $ref: "#/components/schemas/ApiTenantSummary"
          type: array
        auths:
          items:
            $ref: "#/components/schemas/IAMUserController.ApiUserAuth"
          type: array
        groups:
          items:
            $ref: "#/components/schemas/IAMUserController.ApiGroup"
          type: array
        superAdmin:
          type: boolean
        restricted:
          type: boolean
      required:
      - auths
      - displayName
      - email
      - firstName
      - groups
      - id
      - lastName
      - restricted
      - superAdmin
      - tenants
      - username
      type: object
    IAMUserController.ApiUserAuth:
      example:
        name: name
        id: id
        type: type
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
      required:
      - id
      - name
      - type
      type: object
    IAMUserController.ApiUserSummary:
      example:
        tenants:
        - name: name
          id: id
        - name: name
          id: id
        displayName: displayName
        auths:
        - name: name
          id: id
          type: type
        - name: name
          id: id
          type: type
        id: id
        superAdmin: true
        username: username
      properties:
        id:
          type: string
        username:
          type: string
        displayName:
          type: string
        tenants:
          items:
            $ref: "#/components/schemas/ApiTenantSummary"
          type: array
        auths:
          items:
            $ref: "#/components/schemas/IAMUserController.ApiUserAuth"
          type: array
        superAdmin:
          type: boolean
      required:
      - auths
      - displayName
      - id
      - superAdmin
      - tenants
      - username
      type: object
    IAMUserGroupController.ApiUpdateUserGroupsRequest:
      properties:
        groupIds:
          items:
            type: string
          type: array
      required:
      - groupIds
      type: object
    IdWithNamespace:
      example:
        namespace: namespace
        id: id
      properties:
        namespace:
          type: string
        id:
          type: string
      type: object
    IdentityProvider:
      properties:
        attributes:
          additionalProperties:
            type: object
          type: object
        externalId:
          type: string
        securityIntegrationId:
          type: string
        securityIntegrationName:
          type: string
      required:
      - attributes
      - externalId
      - securityIntegrationId
      - securityIntegrationName
      type: object
    InputType:
      example:
        cls: cls
        type: type
      properties:
        type:
          type: string
        cls:
          type: string
      required:
      - cls
      - type
      type: object
    Input_Object_:
      example:
        dependsOn: ""
        defaults: ""
        displayName: displayName
        name: name
        description: description
        id: id
        type: ""
        required: true
      properties:
        name:
          deprecated: true
          type: string
        id:
          minLength: 1
          pattern: "^[a-zA-Z0-9][.a-zA-Z0-9_-]*"
          title: The ID of the input.
          type: string
        type:
          allOf:
          - $ref: "#/components/schemas/Type"
          title: The type of the input.
        description:
          title: The description of the input.
          type: string
        dependsOn:
          allOf:
          - $ref: "#/components/schemas/DependsOn"
          title: The dependencies of the input.
        required:
          type: boolean
        defaults:
          allOf:
          - $ref: "#/components/schemas/Property_Object_"
          title: The default value to use if no value is specified.
        displayName:
          title: The display name of the input.
          type: string
      required:
      - id
      - type
      type: object
    InstanceController.ApiActiveService:
      example:
        total: 6
        type: EXECUTOR
      properties:
        type:
          $ref: "#/components/schemas/ServiceType"
        total:
          format: int64
          type: integer
      required:
      - total
      - type
      type: object
    InstanceController.ApiActiveServiceList:
      example:
        total: 0
        services:
        - total: 6
          type: EXECUTOR
        - total: 6
          type: EXECUTOR
      properties:
        total:
          format: int32
          type: integer
        services:
          items:
            $ref: "#/components/schemas/InstanceController.ApiActiveService"
          type: array
      required:
      - services
      - total
      type: object
    InstanceController.ApiCreateOrUpdateWorkerGroupRequest:
      description: ApiCreateWorkerGroupRequest.
      properties:
        key:
          description: The key of the worker group.
          type: string
        description:
          description: The description of the worker group.
          type: string
        allowedTenants:
          items:
            type: string
          type: array
      required:
      - allowedTenants
      - description
      - key
      type: object
    InstanceController.ApiPluginArtifact:
      example:
        versions:
        - versions
        - versions
        groupId: groupId
        icon: icon
        artifactId: artifactId
        title: title
      properties:
        title:
          type: string
        icon:
          type: string
        groupId:
          type: string
        artifactId:
          type: string
        versions:
          items:
            type: string
          type: array
      required:
      - artifactId
      - groupId
      - icon
      - title
      - versions
      type: object
    InstanceController.ApiPluginArtifactList_PluginArtifact_:
      example:
        total: 0
        results:
        - "{}"
        - "{}"
      properties:
        total:
          format: int32
          type: integer
        results:
          items:
            type: object
          type: array
      required:
      - results
      - total
      type: object
    InstanceController.ApiPluginArtifactList_PluginResolutionResult_:
      example:
        total: 0
        results:
        - "{}"
        - "{}"
      properties:
        total:
          format: int32
          type: integer
        results:
          items:
            type: object
          type: array
      required:
      - results
      - total
      type: object
    InstanceController.ApiPluginListRequest:
      properties:
        plugins:
          items:
            type: string
          type: array
      required:
      - plugins
      type: object
    InstanceController.ApiPluginVersionDetails:
      example:
        groupId: groupId
        classes:
        - classes:
          - name: name
            icon: icon
          - name: name
            icon: icon
          type: type
        - classes:
          - name: name
            icon: icon
          - name: name
            icon: icon
          type: type
        icon: icon
        description: description
        artifactId: artifactId
        title: title
        version: version
      properties:
        artifactId:
          type: string
        groupId:
          type: string
        version:
          type: string
        title:
          type: string
        description:
          type: string
        icon:
          type: string
        classes:
          items:
            $ref: "#/components/schemas/InstanceController.ApiPluginVersionDetails.ApiPluginClasses"
          type: array
      required:
      - artifactId
      - classes
      - description
      - groupId
      - icon
      - title
      - version
      type: object
    InstanceController.ApiPluginVersionDetails.ApiPluginClass:
      example:
        name: name
        icon: icon
      properties:
        name:
          type: string
        icon:
          type: string
      required:
      - icon
      - name
      type: object
    InstanceController.ApiPluginVersionDetails.ApiPluginClasses:
      example:
        classes:
        - name: name
          icon: icon
        - name: name
          icon: icon
        type: type
      properties:
        type:
          type: string
        classes:
          items:
            $ref: "#/components/schemas/InstanceController.ApiPluginVersionDetails.ApiPluginClass"
          type: array
      required:
      - classes
      - type
      type: object
    InstanceController.ApiPluginVersions:
      example:
        versions:
        - metadata:
            lastModifiedTime: 6
            size: 0
            creationTime: 1
            name: name
            uri: https://openapi-generator.tech
          version: version
        - metadata:
            lastModifiedTime: 6
            size: 0
            creationTime: 1
            name: name
            uri: https://openapi-generator.tech
          version: version
        groupId: groupId
        artifactId: artifactId
      properties:
        groupId:
          type: string
        artifactId:
          type: string
        versions:
          items:
            $ref: "#/components/schemas/InstanceController.ApiPluginVersions.ApiPluginVersionAndMetadata"
          type: array
      required:
      - artifactId
      - groupId
      - versions
      type: object
    InstanceController.ApiPluginVersions.ApiPluginVersionAndMetadata:
      example:
        metadata:
          lastModifiedTime: 6
          size: 0
          creationTime: 1
          name: name
          uri: https://openapi-generator.tech
        version: version
      properties:
        version:
          type: string
        metadata:
          $ref: "#/components/schemas/PluginArtifactMetadata"
      required:
      - metadata
      - version
      type: object
    InstanceController.ApiServerInstance:
      example:
        hostname: hostname
        id: id
        type: SERVER
        version: version
      properties:
        id:
          type: string
        type:
          $ref: "#/components/schemas/ServerInstance.Type"
        version:
          type: string
        hostname:
          type: string
      required:
      - hostname
      - id
      - type
      - version
      type: object
    InstanceController.ApiServiceInstance:
      example:
        server:
          hostname: hostname
          id: id
          type: SERVER
          version: version
        createdAt: 2000-01-23T04:56:07.000+00:00
        id: id
        state: CREATED
        type: EXECUTOR
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        type:
          $ref: "#/components/schemas/ServiceType"
        state:
          $ref: "#/components/schemas/Service.ServiceState"
        server:
          $ref: "#/components/schemas/InstanceController.ApiServerInstance"
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
      - createdAt
      - id
      - server
      - state
      - type
      - updatedAt
      type: object
    InstanceController.ApiWorkerGroup:
      description: ApiWorkerGroup.
      example:
        allowedTenants:
        - allowedTenants
        - allowedTenants
        description: description
        id: id
        key: key
      properties:
        id:
          description: The ID of worker group.
          type: string
        key:
          description: The key of the worker group.
          type: string
        description:
          description: The description of the worker group.
          type: string
        allowedTenants:
          items:
            type: string
          type: array
      required:
      - allowedTenants
      - description
      - id
      - key
      type: object
    InstanceController.ApiWorkerGroupDetails:
      description: ApiWorkerGroupDetails.
      example:
        allowedTenants:
        - allowedTenants
        - allowedTenants
        description: description
        id: id
        workers:
        - server:
            hostname: hostname
            id: id
            metrics:
            - baseUnit: baseUnit
              name: name
              description: description
              type: type
              value: "{}"
              tags:
              - value: value
                key: key
              - value: value
                key: key
            - baseUnit: baseUnit
              name: name
              description: description
              type: type
              value: "{}"
              tags:
              - value: value
                key: key
              - value: value
                key: key
            type: SERVER
            version: version
            props:
              key: "{}"
          createdAt: 2000-01-23T04:56:07.000+00:00
          metrics:
          - baseUnit: baseUnit
            name: name
            description: description
            type: type
            value: "{}"
            tags:
            - value: value
              key: key
            - value: value
              key: key
          - baseUnit: baseUnit
            name: name
            description: description
            type: type
            value: "{}"
            tags:
            - value: value
              key: key
            - value: value
              key: key
          state: CREATED
          id: id
          type: EXECUTOR
          config:
            terminationGracePeriod: 5m
            workerTaskRestartStrategy: ""
            liveness:
              heartbeatInterval: 3s
              interval: 5s
              initialDelay: 45s
              enabled: true
              timeout: 45s
          events:
          - state: null
            type: type
            value: value
            ts: 2000-01-23T04:56:07.000+00:00
          - state: null
            type: type
            value: value
            ts: 2000-01-23T04:56:07.000+00:00
          seqId: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
          props:
            key: "{}"
        - server:
            hostname: hostname
            id: id
            metrics:
            - baseUnit: baseUnit
              name: name
              description: description
              type: type
              value: "{}"
              tags:
              - value: value
                key: key
              - value: value
                key: key
            - baseUnit: baseUnit
              name: name
              description: description
              type: type
              value: "{}"
              tags:
              - value: value
                key: key
              - value: value
                key: key
            type: SERVER
            version: version
            props:
              key: "{}"
          createdAt: 2000-01-23T04:56:07.000+00:00
          metrics:
          - baseUnit: baseUnit
            name: name
            description: description
            type: type
            value: "{}"
            tags:
            - value: value
              key: key
            - value: value
              key: key
          - baseUnit: baseUnit
            name: name
            description: description
            type: type
            value: "{}"
            tags:
            - value: value
              key: key
            - value: value
              key: key
          state: CREATED
          id: id
          type: EXECUTOR
          config:
            terminationGracePeriod: 5m
            workerTaskRestartStrategy: ""
            liveness:
              heartbeatInterval: 3s
              interval: 5s
              initialDelay: 45s
              enabled: true
              timeout: 45s
          events:
          - state: null
            type: type
            value: value
            ts: 2000-01-23T04:56:07.000+00:00
          - state: null
            type: type
            value: value
            ts: 2000-01-23T04:56:07.000+00:00
          seqId: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
          props:
            key: "{}"
        key: key
      properties:
        id:
          description: The ID of worker group.
          type: string
        key:
          description: The key of the worker group.
          type: string
        description:
          description: The description of the worker group.
          type: string
        allowedTenants:
          items:
            type: string
          type: array
        workers:
          description: The list of workers for the group.
          items:
            $ref: "#/components/schemas/ServiceInstance"
          type: array
      required:
      - allowedTenants
      - description
      - id
      - key
      - workers
      type: object
    InstanceController.ApiWorkerGroupItem:
      description: ApiWorkerGroup.
      example:
        activeWorkers: 0
        description: description
        id: id
        key: key
      properties:
        id:
          description: The ID of worker group.
          type: string
        key:
          description: The key of the worker group.
          type: string
        description:
          description: The description of the worker group.
          type: string
        activeWorkers:
          description: The number of active workers for the group.
          format: int32
          type: integer
      required:
      - activeWorkers
      - description
      - id
      - key
      type: object
    InstanceController.ApiWorkerGroupList:
      description: ApiWorkerGroupList.
      example:
        workerGroups:
        - activeWorkers: 0
          description: description
          id: id
          key: key
        - activeWorkers: 0
          description: description
          id: id
          key: key
      properties:
        workerGroups:
          description: The list of worker groups.
          items:
            $ref: "#/components/schemas/InstanceController.ApiWorkerGroupItem"
          type: array
      required:
      - workerGroups
      type: object
    Invitation:
      example:
        bindings:
        - deleted: true
          namespaceId: namespaceId
          roleId: roleId
          externalId: externalId
          id: id
          type: USER
        - deleted: true
          namespaceId: namespaceId
          roleId: roleId
          externalId: externalId
          id: id
          type: USER
        link: link
        sentAt: 2000-01-23T04:56:07.000+00:00
        expiredAt: 2000-01-23T04:56:07.000+00:00
        deleted: true
        groupIds:
        - groupIds
        - groupIds
        tenantId: tenantId
        id: id
        userType: STANDARD
        isExpired: true
        superAdmin: true
        email: email
        status: PENDING
        acceptedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        isExpired:
          type: boolean
        email:
          pattern: "^$|^[a-zA-Z0-9_!#$%&’*+/=?`{|}~^.-]+@[a-zA-Z0-9.-]+$"
          type: string
        id:
          type: string
        bindings:
          items:
            $ref: "#/components/schemas/Binding"
          type: array
        groupIds:
          items:
            type: string
          type: array
        tenantId:
          type: string
        status:
          $ref: "#/components/schemas/Invitation.InvitationStatus"
        sentAt:
          format: date-time
          type: string
        expiredAt:
          format: date-time
          type: string
        acceptedAt:
          format: date-time
          type: string
        deleted:
          type: boolean
        userType:
          $ref: "#/components/schemas/UserType"
        superAdmin:
          type: boolean
        link:
          type: string
      required:
      - acceptedAt
      - bindings
      - deleted
      - email
      - expiredAt
      - groupIds
      - id
      - isExpired
      - link
      - sentAt
      - status
      - superAdmin
      - tenantId
      - userType
      type: object
    Invitation.InvitationStatus:
      enum:
      - PENDING
      - ACCEPTED
      - EXPIRED
      type: string
    Isolation:
      example:
        deniedServices:
        - EXECUTOR
        - EXECUTOR
        enabled: true
      properties:
        deniedServices:
          items:
            $ref: "#/components/schemas/ServiceType"
          type: array
        enabled:
          type: boolean
      required:
      - deniedServices
      - enabled
      type: object
    KVController.ApiDeleteBulkRequest:
      properties:
        keys:
          items:
            type: string
          type: array
      required:
      - keys
      type: object
    KVController.ApiDeleteBulkResponse:
      example:
        keys:
        - keys
        - keys
      properties:
        keys:
          items:
            type: string
          type: array
      required:
      - keys
      type: object
    KVController.TypedValue:
      example:
        type: STRING
        value: "{}"
      properties:
        type:
          $ref: "#/components/schemas/KVType"
        value:
          type: object
      required:
      - type
      - value
      type: object
    KVEntry:
      example:
        updateDate: 2000-01-23T04:56:07.000+00:00
        description: description
        creationDate: 2000-01-23T04:56:07.000+00:00
        key: key
        expirationDate: 2000-01-23T04:56:07.000+00:00
      properties:
        key:
          type: string
        description:
          nullable: true
          type: string
        creationDate:
          format: date-time
          type: string
        updateDate:
          format: date-time
          type: string
        expirationDate:
          format: date-time
          nullable: true
          type: string
      required:
      - creationDate
      - key
      - updateDate
      type: object
    KVType:
      enum:
      - STRING
      - NUMBER
      - BOOLEAN
      - DATETIME
      - DATE
      - DURATION
      - JSON
      type: string
    Label:
      example:
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          type: string
      required:
      - key
      - value
      type: object
    LeftSidebarConfiguration:
      example:
        disabledMenus:
        - disabledMenus
        - disabledMenus
      properties:
        disabledMenus:
          items:
            type: string
          type: array
      type: object
    Level:
      enum:
      - ERROR
      - WARN
      - INFO
      - DEBUG
      - TRACE
      type: string
    Listener:
      example:
        description: description
        conditions:
        - type: type
        - type: type
        tasks:
        - taskCache:
            ttl: ttl
            enabled: true
          description: description
          type: type
          logToFile: true
          version: version
          timeout:
            expression: expression
            value: value
          allowWarning: true
          allowFailure: true
          logLevel: ERROR
          runIf: runIf
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          retry: "{}"
        - taskCache:
            ttl: ttl
            enabled: true
          description: description
          type: type
          logToFile: true
          version: version
          timeout:
            expression: expression
            value: value
          allowWarning: true
          allowFailure: true
          logLevel: ERROR
          runIf: runIf
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          retry: "{}"
      properties:
        description:
          type: string
        conditions:
          items:
            $ref: "#/components/schemas/Condition"
          type: array
        tasks:
          items:
            $ref: "#/components/schemas/Task"
          minItems: 1
          type: array
      required:
      - conditions
      - description
      - tasks
      type: object
    LogEntry:
      example:
        attemptNumber: 0
        level: ERROR
        triggerId: triggerId
        thread: thread
        message: message
        taskRunId: taskRunId
        executionId: executionId
        deleted: true
        namespace: namespace
        flowId: flowId
        executionKind: ""
        taskId: taskId
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        namespace:
          type: string
        flowId:
          type: string
        taskId:
          nullable: true
          type: string
        executionId:
          nullable: true
          type: string
        taskRunId:
          nullable: true
          type: string
        attemptNumber:
          format: int32
          nullable: true
          type: integer
        triggerId:
          nullable: true
          type: string
        timestamp:
          format: date-time
          type: string
        level:
          $ref: "#/components/schemas/Level"
        thread:
          type: string
        message:
          type: string
        deleted:
          type: boolean
        executionKind:
          allOf:
          - $ref: "#/components/schemas/ExecutionKind"
          nullable: true
      required:
      - deleted
      - flowId
      - level
      - message
      - namespace
      - thread
      - timestamp
      type: object
    Map_Object.Object_:
      properties:
        empty:
          type: boolean
      type: object
    MeController.ApiMe:
      example:
        tenants:
        - name: name
          logo: logo
          id: id
        - name: name
          logo: logo
          id: id
        restricted: true
        auths:
        - name: name
          type: type
        - name: name
          type: type
        profile:
          firstName: firstName
          lastName: lastName
          email: email
          username: username
        id: id
        superAdmin: true
      properties:
        id:
          type: string
        superAdmin:
          type: boolean
        restricted:
          type: boolean
        profile:
          $ref: "#/components/schemas/MeController.ApiProfile"
        auths:
          items:
            $ref: "#/components/schemas/IAMTenantAccessController.ApiAuthentication"
          type: array
        tenants:
          items:
            $ref: "#/components/schemas/MeController.ApiTenant"
          type: array
      required:
      - auths
      - id
      - profile
      - restricted
      - superAdmin
      - tenants
      type: object
    MeController.ApiProfile:
      example:
        firstName: firstName
        lastName: lastName
        email: email
        username: username
      properties:
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
      required:
      - email
      - firstName
      - lastName
      - username
      type: object
    MeController.ApiTenant:
      example:
        name: name
        logo: logo
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        logo:
          type: string
      required:
      - id
      - logo
      - name
      type: object
    MeController.ApiUpdatePasswordRequest:
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
      required:
      - newPassword
      - oldPassword
      type: object
    MeController.ApiUserDetailsRequest:
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
      required:
      - email
      - firstName
      - lastName
      type: object
    Meta:
      properties:
        resourceType:
          minLength: 1
          type: string
        created:
          format: date-time
          type: string
        lastModified:
          format: date-time
          type: string
        location:
          type: string
        version:
          type: string
      type: object
    Metric:
      example:
        baseUnit: baseUnit
        name: name
        description: description
        type: type
        value: "{}"
        tags:
        - value: value
          key: key
        - value: value
          key: key
      properties:
        name:
          type: string
        type:
          type: string
        description:
          type: string
        baseUnit:
          type: string
        tags:
          items:
            $ref: "#/components/schemas/Metric.Tag"
          type: array
        value:
          type: object
      required:
      - baseUnit
      - description
      - name
      - tags
      - type
      - value
      type: object
    Metric.Tag:
      example:
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          type: string
      required:
      - key
      - value
      type: object
    MetricAggregation:
      example:
        date: 2000-01-23T04:56:07.000+00:00
        name: name
        value: 0.8008281904610115
      properties:
        name:
          type: string
        value:
          format: double
          type: number
        date:
          format: date-time
          type: string
      required:
      - date
      - name
      - value
      type: object
    MetricAggregations:
      example:
        groupBy: groupBy
        aggregations:
        - date: 2000-01-23T04:56:07.000+00:00
          name: name
          value: 0.8008281904610115
        - date: 2000-01-23T04:56:07.000+00:00
          name: name
          value: 0.8008281904610115
      properties:
        groupBy:
          type: string
        aggregations:
          items:
            $ref: "#/components/schemas/MetricAggregation"
          type: array
      required:
      - aggregations
      - groupBy
      type: object
    MetricEntry:
      example:
        taskRunId: taskRunId
        executionId: executionId
        deleted: true
        namespace: namespace
        name: name
        type: type
        flowId: flowId
        value: 0.8008281904610115
        executionKind: ""
        taskId: taskId
        timestamp: 2000-01-23T04:56:07.000+00:00
        tags:
          key: tags
      properties:
        namespace:
          type: string
        flowId:
          type: string
        taskId:
          nullable: true
          type: string
        executionId:
          nullable: true
          type: string
        taskRunId:
          nullable: true
          type: string
        type:
          type: string
        name:
          type: string
        value:
          format: double
          type: number
        timestamp:
          format: date-time
          type: string
        tags:
          additionalProperties:
            type: string
          nullable: true
          type: object
        deleted:
          type: boolean
        executionKind:
          allOf:
          - $ref: "#/components/schemas/ExecutionKind"
          nullable: true
      required:
      - deleted
      - flowId
      - name
      - namespace
      - timestamp
      - type
      - value
      type: object
    MiscController.ApiUsage:
      properties:
        flows:
          $ref: "#/components/schemas/FlowUsage"
        executions:
          $ref: "#/components/schemas/ExecutionUsage"
      type: object
    MiscController.BasicAuthCredentials:
      properties:
        uid:
          type: string
        username:
          type: string
        password:
          type: string
      required:
      - password
      - uid
      - username
      type: object
    MiscController.Configuration:
      properties:
        uuid:
          type: string
        version:
          type: string
        edition:
          $ref: "#/components/schemas/EditionProvider.Edition"
        commitId:
          type: string
        commitDate:
          format: date-time
          type: string
        isCustomDashboardsEnabled:
          type: boolean
        isTaskRunEnabled:
          type: boolean
        isAnonymousUsageEnabled:
          type: boolean
        isUiAnonymousUsageEnabled:
          type: boolean
        isTemplateEnabled:
          type: boolean
        environment:
          $ref: "#/components/schemas/MiscController.Environment"
        url:
          type: string
        preview:
          $ref: "#/components/schemas/MiscController.Preview"
        systemNamespace:
          type: string
        hiddenLabelsPrefixes:
          items:
            type: string
          type: array
        resourceToFilters:
          items:
            $ref: "#/components/schemas/QueryFilter.ResourceField"
          type: array
        isAiEnabled:
          type: boolean
        isBasicAuthInitialized:
          type: boolean
        pluginsHash:
          format: int64
          type: integer
      type: object
    MiscController.EEConfiguration:
      allOf:
      - $ref: "#/components/schemas/MiscController.Configuration"
      - properties:
          tenants:
            $ref: "#/components/schemas/MiscController.TenantConfigurationInfo"
          secretsEnabled:
            type: boolean
          supportedStorages:
            items:
              $ref: "#/components/schemas/MiscController.PluginIdAndVersion"
            type: array
          supportedSecrets:
            items:
              $ref: "#/components/schemas/MiscController.PluginIdAndVersion"
            type: array
          pluginManagementEnabled:
            type: boolean
          pluginCustomEnabled:
            type: boolean
          banner:
            $ref: "#/components/schemas/Banner"
          mailServiceEnabled:
            type: boolean
          outputsInInternalStorageEnabled:
            type: boolean
          leftSidebar:
            $ref: "#/components/schemas/LeftSidebarConfiguration"
          rightSidebar:
            $ref: "#/components/schemas/RightSidebarConfiguration"
          inMaintenance:
            type: boolean
          passwordRegexp:
            type: string
        type: object
      example:
        preview:
          initial: 0
          max: 6
        isBasicAuthInitialized: true
        inMaintenance: true
        edition: OSS
        pluginManagementEnabled: true
        uuid: uuid
        pluginsHash: 1
        isCustomDashboardsEnabled: true
        leftSidebar:
          disabledMenus:
          - disabledMenus
          - disabledMenus
        outputsInInternalStorageEnabled: true
        supportedStorages:
        - id: id
          version: version
        - id: id
          version: version
        isUiAnonymousUsageEnabled: true
        mailServiceEnabled: true
        pluginCustomEnabled: true
        supportedSecrets:
        - id: id
          version: version
        - id: id
          version: version
        isAiEnabled: true
        tenants:
          secretByTenant: true
          storageByTenant: true
        hiddenLabelsPrefixes:
        - hiddenLabelsPrefixes
        - hiddenLabelsPrefixes
        resourceToFilters:
        - name: name
          fields:
          - operations:
            - name: name
              value: value
            - name: name
              value: value
            name: name
            value: value
          - operations:
            - name: name
              value: value
            - name: name
              value: value
            name: name
            value: value
        - name: name
          fields:
          - operations:
            - name: name
              value: value
            - name: name
              value: value
            name: name
            value: value
          - operations:
            - name: name
              value: value
            - name: name
              value: value
            name: name
            value: value
        banner:
          endDate: 2000-01-23T04:56:07.000+00:00
          tenantId: tenantId
          active: true
          id: id
          message: message
          type: INFO
          startDate: 2000-01-23T04:56:07.000+00:00
        commitId: commitId
        isAnonymousUsageEnabled: true
        version: version
        rightSidebar:
          customLinks:
            key:
              title: title
              url: url
        passwordRegexp: passwordRegexp
        url: url
        commitDate: 2000-01-23T04:56:07.000+00:00
        isTaskRunEnabled: true
        environment:
          color: color
          name: name
        secretsEnabled: true
        isTemplateEnabled: true
        systemNamespace: systemNamespace
      type: object
    MiscController.Environment:
      example:
        color: color
        name: name
      properties:
        name:
          type: string
        color:
          type: string
      required:
      - color
      - name
      type: object
    MiscController.LicenseInfo:
      example:
        maxServers: 0
        expired: true
        standalone: true
        expiry: 2000-01-23T04:56:07.000+00:00
        type: type
        workerGroups: true
      properties:
        type:
          type: string
        expiry:
          format: date-time
          type: string
        expired:
          type: boolean
        maxServers:
          format: int32
          type: integer
        standalone:
          type: boolean
        workerGroups:
          type: boolean
      required:
      - expired
      - expiry
      - maxServers
      - standalone
      - type
      - workerGroups
      type: object
    MiscController.PluginIdAndVersion:
      example:
        id: id
        version: version
      properties:
        id:
          type: string
        version:
          type: string
      required:
      - id
      - version
      type: object
    MiscController.Preview:
      example:
        initial: 0
        max: 6
      properties:
        initial:
          format: int32
          type: integer
        max:
          format: int32
          type: integer
      required:
      - initial
      - max
      type: object
    MiscController.TenantConfigurationInfo:
      example:
        secretByTenant: true
        storageByTenant: true
      properties:
        storageByTenant:
          type: boolean
        secretByTenant:
          type: boolean
      required:
      - secretByTenant
      - storageByTenant
      type: object
    Name:
      description: Scim core schema.
      properties:
        familyName:
          type: string
        givenName:
          type: string
      type: object
    Namespace:
      allOf:
      - $ref: "#/components/schemas/NamespaceLight"
      description: A namespace is a logical grouping of flows and tasks. It is used
        to organize and manage flows and tasks within Kestra.
      example:
        variables:
          key: "{}"
        secretConfiguration:
          key: "{}"
        storageIsolation:
          deniedServices:
          - EXECUTOR
          - EXECUTOR
          enabled: true
        description: description
        pluginDefaults:
        - forced: true
          values:
            key: "{}"
          type: type
        - forced: true
          values:
            key: "{}"
          type: type
        secretReadOnly: true
        secretIsolation:
          deniedServices:
          - EXECUTOR
          - EXECUTOR
          enabled: true
        allowedNamespaces:
        - namespace: namespace
        - namespace: namespace
        deleted: true
        allowedTriggers:
        - namespace: namespace
          flowId: flowId
        - namespace: namespace
          flowId: flowId
        storageConfiguration:
          key: "{}"
        secretType: secretType
        storageType: storageType
        id: id
        workerGroup:
          fallback: FAIL
          key: key
        outputsInInternalStorage: true
      properties:
        id:
          pattern: "^[a-z0-9][a-z0-9._-]*"
          type: string
        deleted:
          type: boolean
        allowedTriggers:
          deprecated: true
          items:
            $ref: "#/components/schemas/Namespace.AllowedTrigger"
          type: array
        storageIsolation:
          $ref: "#/components/schemas/Isolation"
        secretIsolation:
          $ref: "#/components/schemas/Isolation"
        description:
          type: string
        variables:
          additionalProperties:
            type: object
          type: object
        pluginDefaults:
          items:
            $ref: "#/components/schemas/PluginDefault"
          type: array
        allowedNamespaces:
          items:
            $ref: "#/components/schemas/Namespace.AllowedNamespace"
          type: array
        workerGroup:
          $ref: "#/components/schemas/WorkerGroup"
        storageType:
          type: string
        storageConfiguration:
          additionalProperties:
            type: object
          type: object
        secretType:
          type: string
        secretReadOnly:
          type: boolean
        secretConfiguration:
          additionalProperties:
            type: object
          type: object
        outputsInInternalStorage:
          type: boolean
      required:
      - allowedNamespaces
      - deleted
      - description
      - id
      - pluginDefaults
      - variables
      - workerGroup
      type: object
    Namespace.AllowedNamespace:
      example:
        namespace: namespace
      properties:
        namespace:
          type: string
      required:
      - namespace
      type: object
    Namespace.AllowedTrigger:
      deprecated: true
      example:
        namespace: namespace
        flowId: flowId
      properties:
        namespace:
          type: string
        flowId:
          type: string
      required:
      - flowId
      - namespace
      type: object
    NamespaceLight:
      properties:
        id:
          pattern: "^[a-z0-9][a-z0-9._-]*"
          type: string
        deleted:
          type: boolean
      required:
      - deleted
      - id
      type: object
    Output:
      example:
        displayName: displayName
        description: description
        id: id
        type: STRING
        value: "{}"
        required: true
      properties:
        id:
          minLength: 1
          pattern: "^[a-zA-Z0-9][.a-zA-Z0-9_-]*"
          type: string
        description:
          type: string
        value:
          type: object
        type:
          $ref: "#/components/schemas/Type"
        displayName:
          type: string
        required:
          type: boolean
      required:
      - id
      - type
      - value
      type: object
    PageRequest:
      properties:
        startIndex:
          format: int32
          type: integer
        count:
          format: int32
          type: integer
      type: object
    PagedResults_ApiGroupSummary_:
      example:
        total: 0
        results:
        - name: name
          id: id
        - name: name
          id: id
      properties:
        results:
          items:
            $ref: "#/components/schemas/ApiGroupSummary"
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_ApiRoleSummary_:
      example:
        total: 0
        results:
        - isDefault: true
          name: name
          id: id
          isManaged: true
        - isDefault: true
          name: name
          id: id
          isManaged: true
      properties:
        results:
          items:
            $ref: "#/components/schemas/ApiRoleSummary"
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_AppsController.ApiAppCatalogItem_:
      example:
        total: 0
        results:
        - uid: uid
          name: name
          description: description
          type: type
          tags:
          - tags
          - tags
        - uid: uid
          name: name
          description: description
          type: type
          tags:
          - tags
          - tags
      properties:
        results:
          items:
            $ref: "#/components/schemas/AppsController.ApiAppCatalogItem"
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_AppsController.ApiApp_:
      example:
        total: 0
        results:
        - uid: uid
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          namespace: namespace
          id: id
          type: type
          updated: 2000-01-23T04:56:07.000+00:00
          enabled: true
          tags:
          - tags
          - tags
        - uid: uid
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          namespace: namespace
          id: id
          type: type
          updated: 2000-01-23T04:56:07.000+00:00
          enabled: true
          tags:
          - tags
          - tags
      properties:
        results:
          items:
            $ref: "#/components/schemas/AppsController.ApiApp"
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_AuditLogController.ApiAuditLogItem_:
      example:
        total: 0
        results:
        - auditLog:
            date: 2000-01-23T04:56:07.000+00:00
            deleted: true
            appliedPatch:
            - "{}"
            - "{}"
            revertPatch:
            - "{}"
            - "{}"
            tenantId: tenantId
            ipAddress: ipAddress
            id: id
            detail:
              permission: FLOW
              id: id
              type: type
              resourceType: AUDITLOG
            type: READ
            impersonatedBy: impersonatedBy
            userId: userId
          user:
            lastName: lastName
            auths:
            - uid: uid
              name: name
              type: type
            - uid: uid
              name: name
              type: type
            groups:
            - "{}"
            - "{}"
            description: description
            groupList:
            - groupId: groupId
              tenantId: tenantId
              managedExternally: true
              membership: OWNER
            - groupId: groupId
              tenantId: tenantId
              managedExternally: true
              membership: OWNER
            type: STANDARD
            firstName: firstName
            name: name
            id: id
            superAdmin: true
            email: email
            providers:
            - securityIntegrationId: securityIntegrationId
              tenantId: tenantId
              externalId: externalId
              attributes:
                key: "{}"
              securityIntegrationName: securityIntegrationName
            - securityIntegrationId: securityIntegrationId
              tenantId: tenantId
              externalId: externalId
              attributes:
                key: "{}"
              securityIntegrationName: securityIntegrationName
            username: username
        - auditLog:
            date: 2000-01-23T04:56:07.000+00:00
            deleted: true
            appliedPatch:
            - "{}"
            - "{}"
            revertPatch:
            - "{}"
            - "{}"
            tenantId: tenantId
            ipAddress: ipAddress
            id: id
            detail:
              permission: FLOW
              id: id
              type: type
              resourceType: AUDITLOG
            type: READ
            impersonatedBy: impersonatedBy
            userId: userId
          user:
            lastName: lastName
            auths:
            - uid: uid
              name: name
              type: type
            - uid: uid
              name: name
              type: type
            groups:
            - "{}"
            - "{}"
            description: description
            groupList:
            - groupId: groupId
              tenantId: tenantId
              managedExternally: true
              membership: OWNER
            - groupId: groupId
              tenantId: tenantId
              managedExternally: true
              membership: OWNER
            type: STANDARD
            firstName: firstName
            name: name
            id: id
            superAdmin: true
            email: email
            providers:
            - securityIntegrationId: securityIntegrationId
              tenantId: tenantId
              externalId: externalId
              attributes:
                key: "{}"
              securityIntegrationName: securityIntegrationName
            - securityIntegrationId: securityIntegrationId
              tenantId: tenantId
              externalId: externalId
              attributes:
                key: "{}"
              securityIntegrationName: securityIntegrationName
            username: username
      properties:
        results:
          items:
            $ref: "#/components/schemas/AuditLogController.ApiAuditLogItem"
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_BlueprintController.ApiBlueprintItem_:
      example:
        total: 0
        results:
        - includedTasks:
          - includedTasks
          - includedTasks
          publishedAt: 2000-01-23T04:56:07.000+00:00
          description: description
          id: id
          title: title
          tags:
          - tags
          - tags
        - includedTasks:
          - includedTasks
          - includedTasks
          publishedAt: 2000-01-23T04:56:07.000+00:00
          description: description
          id: id
          title: title
          tags:
          - tags
          - tags
      properties:
        results:
          items:
            $ref: "#/components/schemas/BlueprintController.ApiBlueprintItem"
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_Blueprint_:
      example:
        total: 0
        results:
        - includedTasks:
          - includedTasks
          - includedTasks
          deleted: true
          publishedAt: 2000-01-23T04:56:07.000+00:00
          description: description
          id: id
          title: title
          tags:
          - tags
          - tags
        - includedTasks:
          - includedTasks
          - includedTasks
          deleted: true
          publishedAt: 2000-01-23T04:56:07.000+00:00
          description: description
          id: id
          title: title
          tags:
          - tags
          - tags
      properties:
        results:
          items:
            $ref: "#/components/schemas/Blueprint"
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_Dashboard_:
      example:
        total: 0
        results:
        - sourceCode: sourceCode
          timeWindow:
            default: default
            max: max
          charts:
          - chartOptions: "{}"
            id: id
            type: type
          - chartOptions: "{}"
            id: id
            type: type
          description: description
          title: title
        - sourceCode: sourceCode
          timeWindow:
            default: default
            max: max
          charts:
          - chartOptions: "{}"
            id: id
            type: type
          - chartOptions: "{}"
            id: id
            type: type
          description: description
          title: title
      properties:
        results:
          items:
            $ref: "#/components/schemas/Dashboard"
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_Execution_:
      example:
        total: 5
        results:
        - outputs:
            key: "{}"
          variables:
            key: "{}"
          metadata:
            attemptNumber: 1
            originalCreatedDate: 2000-01-23T04:56:07.000+00:00
          inputs:
            key: "{}"
          kind: ""
          trigger:
            variables:
              key: "{}"
            logFile: https://openapi-generator.tech
            id: id
            type: type
          taskRunList:
          - outputs:
              key: "{}"
            parentTaskRunId: parentTaskRunId
            executionId: executionId
            forceExecution: true
            namespace: namespace
            iteration: 6
            dynamic: true
            id: id
            state:
              duration: duration
              current: CREATED
              endDate: 2000-01-23T04:56:07.000+00:00
              histories:
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              startDate: 2000-01-23T04:56:07.000+00:00
            items: items
            flowId: flowId
            value: value
            taskId: taskId
            attempts:
            - workerId: workerId
              logFile: https://openapi-generator.tech
              metrics:
              - name: name
                description: description
                type: type
                value: "{}"
                tags:
                  key: tags
                timestamp: 2000-01-23T04:56:07.000+00:00
              - name: name
                description: description
                type: type
                value: "{}"
                tags:
                  key: tags
                timestamp: 2000-01-23T04:56:07.000+00:00
              state:
                duration: duration
                current: CREATED
                endDate: 2000-01-23T04:56:07.000+00:00
                histories:
                - date: 2000-01-23T04:56:07.000+00:00
                  state: null
                - date: 2000-01-23T04:56:07.000+00:00
                  state: null
                startDate: 2000-01-23T04:56:07.000+00:00
            - workerId: workerId
              logFile: https://openapi-generator.tech
              metrics:
              - name: name
                description: description
                type: type
                value: "{}"
                tags:
                  key: tags
                timestamp: 2000-01-23T04:56:07.000+00:00
              - name: name
                description: description
                type: type
                value: "{}"
                tags:
                  key: tags
                timestamp: 2000-01-23T04:56:07.000+00:00
              state:
                duration: duration
                current: CREATED
                endDate: 2000-01-23T04:56:07.000+00:00
                histories:
                - date: 2000-01-23T04:56:07.000+00:00
                  state: null
                - date: 2000-01-23T04:56:07.000+00:00
                  state: null
                startDate: 2000-01-23T04:56:07.000+00:00
          - outputs:
              key: "{}"
            parentTaskRunId: parentTaskRunId
            executionId: executionId
            forceExecution: true
            namespace: namespace
            iteration: 6
            dynamic: true
            id: id
            state:
              duration: duration
              current: CREATED
              endDate: 2000-01-23T04:56:07.000+00:00
              histories:
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              startDate: 2000-01-23T04:56:07.000+00:00
            items: items
            flowId: flowId
            value: value
            taskId: taskId
            attempts:
            - workerId: workerId
              logFile: https://openapi-generator.tech
              metrics:
              - name: name
                description: description
                type: type
                value: "{}"
                tags:
                  key: tags
                timestamp: 2000-01-23T04:56:07.000+00:00
              - name: name
                description: description
                type: type
                value: "{}"
                tags:
                  key: tags
                timestamp: 2000-01-23T04:56:07.000+00:00
              state:
                duration: duration
                current: CREATED
                endDate: 2000-01-23T04:56:07.000+00:00
                histories:
                - date: 2000-01-23T04:56:07.000+00:00
                  state: null
                - date: 2000-01-23T04:56:07.000+00:00
                  state: null
                startDate: 2000-01-23T04:56:07.000+00:00
            - workerId: workerId
              logFile: https://openapi-generator.tech
              metrics:
              - name: name
                description: description
                type: type
                value: "{}"
                tags:
                  key: tags
                timestamp: 2000-01-23T04:56:07.000+00:00
              - name: name
                description: description
                type: type
                value: "{}"
                tags:
                  key: tags
                timestamp: 2000-01-23T04:56:07.000+00:00
              state:
                duration: duration
                current: CREATED
                endDate: 2000-01-23T04:56:07.000+00:00
                histories:
                - date: 2000-01-23T04:56:07.000+00:00
                  state: null
                - date: 2000-01-23T04:56:07.000+00:00
                  state: null
                startDate: 2000-01-23T04:56:07.000+00:00
          parentId: parentId
          labels:
          - value: value
            key: key
          - value: value
            key: key
          fixtures:
          - outputs:
              key: "{}"
            description:
              expression: expression
              value: value
            id: id
            state: null
            value: value
          - outputs:
              key: "{}"
            description:
              expression: expression
              value: value
            id: id
            state: null
            value: value
          traceParent: traceParent
          flowRevision: 0
          deleted: true
          namespace: namespace
          scheduleDate: 2000-01-23T04:56:07.000+00:00
          id: id
          state:
            duration: duration
            current: CREATED
            endDate: 2000-01-23T04:56:07.000+00:00
            histories:
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            startDate: 2000-01-23T04:56:07.000+00:00
          originalId: originalId
          breakpoints:
          - id: id
            value: value
          - id: id
            value: value
          flowId: flowId
        - outputs:
            key: "{}"
          variables:
            key: "{}"
          metadata:
            attemptNumber: 1
            originalCreatedDate: 2000-01-23T04:56:07.000+00:00
          inputs:
            key: "{}"
          kind: ""
          trigger:
            variables:
              key: "{}"
            logFile: https://openapi-generator.tech
            id: id
            type: type
          taskRunList:
          - outputs:
              key: "{}"
            parentTaskRunId: parentTaskRunId
            executionId: executionId
            forceExecution: true
            namespace: namespace
            iteration: 6
            dynamic: true
            id: id
            state:
              duration: duration
              current: CREATED
              endDate: 2000-01-23T04:56:07.000+00:00
              histories:
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              startDate: 2000-01-23T04:56:07.000+00:00
            items: items
            flowId: flowId
            value: value
            taskId: taskId
            attempts:
            - workerId: workerId
              logFile: https://openapi-generator.tech
              metrics:
              - name: name
                description: description
                type: type
                value: "{}"
                tags:
                  key: tags
                timestamp: 2000-01-23T04:56:07.000+00:00
              - name: name
                description: description
                type: type
                value: "{}"
                tags:
                  key: tags
                timestamp: 2000-01-23T04:56:07.000+00:00
              state:
                duration: duration
                current: CREATED
                endDate: 2000-01-23T04:56:07.000+00:00
                histories:
                - date: 2000-01-23T04:56:07.000+00:00
                  state: null
                - date: 2000-01-23T04:56:07.000+00:00
                  state: null
                startDate: 2000-01-23T04:56:07.000+00:00
            - workerId: workerId
              logFile: https://openapi-generator.tech
              metrics:
              - name: name
                description: description
                type: type
                value: "{}"
                tags:
                  key: tags
                timestamp: 2000-01-23T04:56:07.000+00:00
              - name: name
                description: description
                type: type
                value: "{}"
                tags:
                  key: tags
                timestamp: 2000-01-23T04:56:07.000+00:00
              state:
                duration: duration
                current: CREATED
                endDate: 2000-01-23T04:56:07.000+00:00
                histories:
                - date: 2000-01-23T04:56:07.000+00:00
                  state: null
                - date: 2000-01-23T04:56:07.000+00:00
                  state: null
                startDate: 2000-01-23T04:56:07.000+00:00
          - outputs:
              key: "{}"
            parentTaskRunId: parentTaskRunId
            executionId: executionId
            forceExecution: true
            namespace: namespace
            iteration: 6
            dynamic: true
            id: id
            state:
              duration: duration
              current: CREATED
              endDate: 2000-01-23T04:56:07.000+00:00
              histories:
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              startDate: 2000-01-23T04:56:07.000+00:00
            items: items
            flowId: flowId
            value: value
            taskId: taskId
            attempts:
            - workerId: workerId
              logFile: https://openapi-generator.tech
              metrics:
              - name: name
                description: description
                type: type
                value: "{}"
                tags:
                  key: tags
                timestamp: 2000-01-23T04:56:07.000+00:00
              - name: name
                description: description
                type: type
                value: "{}"
                tags:
                  key: tags
                timestamp: 2000-01-23T04:56:07.000+00:00
              state:
                duration: duration
                current: CREATED
                endDate: 2000-01-23T04:56:07.000+00:00
                histories:
                - date: 2000-01-23T04:56:07.000+00:00
                  state: null
                - date: 2000-01-23T04:56:07.000+00:00
                  state: null
                startDate: 2000-01-23T04:56:07.000+00:00
            - workerId: workerId
              logFile: https://openapi-generator.tech
              metrics:
              - name: name
                description: description
                type: type
                value: "{}"
                tags:
                  key: tags
                timestamp: 2000-01-23T04:56:07.000+00:00
              - name: name
                description: description
                type: type
                value: "{}"
                tags:
                  key: tags
                timestamp: 2000-01-23T04:56:07.000+00:00
              state:
                duration: duration
                current: CREATED
                endDate: 2000-01-23T04:56:07.000+00:00
                histories:
                - date: 2000-01-23T04:56:07.000+00:00
                  state: null
                - date: 2000-01-23T04:56:07.000+00:00
                  state: null
                startDate: 2000-01-23T04:56:07.000+00:00
          parentId: parentId
          labels:
          - value: value
            key: key
          - value: value
            key: key
          fixtures:
          - outputs:
              key: "{}"
            description:
              expression: expression
              value: value
            id: id
            state: null
            value: value
          - outputs:
              key: "{}"
            description:
              expression: expression
              value: value
            id: id
            state: null
            value: value
          traceParent: traceParent
          flowRevision: 0
          deleted: true
          namespace: namespace
          scheduleDate: 2000-01-23T04:56:07.000+00:00
          id: id
          state:
            duration: duration
            current: CREATED
            endDate: 2000-01-23T04:56:07.000+00:00
            histories:
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            startDate: 2000-01-23T04:56:07.000+00:00
          originalId: originalId
          breakpoints:
          - id: id
            value: value
          - id: id
            value: value
          flowId: flowId
      properties:
        results:
          items:
            $ref: "#/components/schemas/Execution"
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_Flow_:
      example:
        total: 1
        results:
        - outputs:
          - displayName: displayName
            description: description
            id: id
            type: STRING
            value: "{}"
            required: true
          - displayName: displayName
            description: description
            id: id
            type: STRING
            value: "{}"
            required: true
          variables:
            key: "{}"
          listeners:
          - description: description
            conditions:
            - type: type
            - type: type
            tasks:
            - taskCache:
                ttl: ttl
                enabled: true
              description: description
              type: type
              logToFile: true
              version: version
              timeout:
                expression: expression
                value: value
              allowWarning: true
              allowFailure: true
              logLevel: ERROR
              runIf: runIf
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              retry: "{}"
            - taskCache:
                ttl: ttl
                enabled: true
              description: description
              type: type
              logToFile: true
              version: version
              timeout:
                expression: expression
                value: value
              allowWarning: true
              allowFailure: true
              logLevel: ERROR
              runIf: runIf
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              retry: "{}"
          - description: description
            conditions:
            - type: type
            - type: type
            tasks:
            - taskCache:
                ttl: ttl
                enabled: true
              description: description
              type: type
              logToFile: true
              version: version
              timeout:
                expression: expression
                value: value
              allowWarning: true
              allowFailure: true
              logLevel: ERROR
              runIf: runIf
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              retry: "{}"
            - taskCache:
                ttl: ttl
                enabled: true
              description: description
              type: type
              logToFile: true
              version: version
              timeout:
                expression: expression
                value: value
              allowWarning: true
              allowFailure: true
              logLevel: ERROR
              runIf: runIf
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              retry: "{}"
          inputs:
          - dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          - dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          finally:
          - taskCache:
              ttl: ttl
              enabled: true
            description: description
            type: type
            logToFile: true
            version: version
            timeout:
              expression: expression
              value: value
            allowWarning: true
            allowFailure: true
            logLevel: ERROR
            runIf: runIf
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            retry: "{}"
          - taskCache:
              ttl: ttl
              enabled: true
            description: description
            type: type
            logToFile: true
            version: version
            timeout:
              expression: expression
              value: value
            allowWarning: true
            allowFailure: true
            logLevel: ERROR
            runIf: runIf
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            retry: "{}"
          description: description
          sla:
          - id: id
            type: MAX_DURATION
            behavior: FAIL
            labels:
            - FlowWithSource_allOf_labels
            - FlowWithSource_allOf_labels
          - id: id
            type: MAX_DURATION
            behavior: FAIL
            labels:
            - FlowWithSource_allOf_labels
            - FlowWithSource_allOf_labels
          afterExecution:
          - taskCache:
              ttl: ttl
              enabled: true
            description: description
            type: type
            logToFile: true
            version: version
            timeout:
              expression: expression
              value: value
            allowWarning: true
            allowFailure: true
            logLevel: ERROR
            runIf: runIf
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            retry: "{}"
          - taskCache:
              ttl: ttl
              enabled: true
            description: description
            type: type
            logToFile: true
            version: version
            timeout:
              expression: expression
              value: value
            allowWarning: true
            allowFailure: true
            logLevel: ERROR
            runIf: runIf
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            retry: "{}"
          triggers:
          - minLogLevel: ""
            stopAfter:
            - CREATED
            - CREATED
            description: description
            type: type
            logToFile: true
            version: version
            labels:
            - The_labels_to_pass_to_the_execution_created_
            - The_labels_to_pass_to_the_execution_created_
            failOnTriggerError: true
            logLevel: null
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            conditions:
            - type: type
            - type: type
          - minLogLevel: ""
            stopAfter:
            - CREATED
            - CREATED
            description: description
            type: type
            logToFile: true
            version: version
            labels:
            - The_labels_to_pass_to_the_execution_created_
            - The_labels_to_pass_to_the_execution_created_
            failOnTriggerError: true
            logLevel: null
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            conditions:
            - type: type
            - type: type
          pluginDefaults:
          - forced: true
            values:
              key: "{}"
            type: type
          - forced: true
            values:
              key: "{}"
            type: type
          revision: 1
          labels:
          - Flow_allOf_labels
          - Flow_allOf_labels
          concurrency:
            limit: 1
            behavior: QUEUE
          deleted: true
          taskDefaults:
          - forced: true
            values:
              key: "{}"
            type: type
          - forced: true
            values:
              key: "{}"
            type: type
          namespace: namespace
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          tasks:
          - taskCache:
              ttl: ttl
              enabled: true
            description: description
            type: type
            logToFile: true
            version: version
            timeout:
              expression: expression
              value: value
            allowWarning: true
            allowFailure: true
            logLevel: ERROR
            runIf: runIf
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            retry: "{}"
          - taskCache:
              ttl: ttl
              enabled: true
            description: description
            type: type
            logToFile: true
            version: version
            timeout:
              expression: expression
              value: value
            allowWarning: true
            allowFailure: true
            logLevel: ERROR
            runIf: runIf
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            retry: "{}"
          errors:
          - taskCache:
              ttl: ttl
              enabled: true
            description: description
            type: type
            logToFile: true
            version: version
            timeout:
              expression: expression
              value: value
            allowWarning: true
            allowFailure: true
            logLevel: ERROR
            runIf: runIf
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            retry: "{}"
          - taskCache:
              ttl: ttl
              enabled: true
            description: description
            type: type
            logToFile: true
            version: version
            timeout:
              expression: expression
              value: value
            allowWarning: true
            allowFailure: true
            logLevel: ERROR
            runIf: runIf
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            retry: "{}"
          retry: null
        - outputs:
          - displayName: displayName
            description: description
            id: id
            type: STRING
            value: "{}"
            required: true
          - displayName: displayName
            description: description
            id: id
            type: STRING
            value: "{}"
            required: true
          variables:
            key: "{}"
          listeners:
          - description: description
            conditions:
            - type: type
            - type: type
            tasks:
            - taskCache:
                ttl: ttl
                enabled: true
              description: description
              type: type
              logToFile: true
              version: version
              timeout:
                expression: expression
                value: value
              allowWarning: true
              allowFailure: true
              logLevel: ERROR
              runIf: runIf
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              retry: "{}"
            - taskCache:
                ttl: ttl
                enabled: true
              description: description
              type: type
              logToFile: true
              version: version
              timeout:
                expression: expression
                value: value
              allowWarning: true
              allowFailure: true
              logLevel: ERROR
              runIf: runIf
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              retry: "{}"
          - description: description
            conditions:
            - type: type
            - type: type
            tasks:
            - taskCache:
                ttl: ttl
                enabled: true
              description: description
              type: type
              logToFile: true
              version: version
              timeout:
                expression: expression
                value: value
              allowWarning: true
              allowFailure: true
              logLevel: ERROR
              runIf: runIf
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              retry: "{}"
            - taskCache:
                ttl: ttl
                enabled: true
              description: description
              type: type
              logToFile: true
              version: version
              timeout:
                expression: expression
                value: value
              allowWarning: true
              allowFailure: true
              logLevel: ERROR
              runIf: runIf
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              retry: "{}"
          inputs:
          - dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          - dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          finally:
          - taskCache:
              ttl: ttl
              enabled: true
            description: description
            type: type
            logToFile: true
            version: version
            timeout:
              expression: expression
              value: value
            allowWarning: true
            allowFailure: true
            logLevel: ERROR
            runIf: runIf
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            retry: "{}"
          - taskCache:
              ttl: ttl
              enabled: true
            description: description
            type: type
            logToFile: true
            version: version
            timeout:
              expression: expression
              value: value
            allowWarning: true
            allowFailure: true
            logLevel: ERROR
            runIf: runIf
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            retry: "{}"
          description: description
          sla:
          - id: id
            type: MAX_DURATION
            behavior: FAIL
            labels:
            - FlowWithSource_allOf_labels
            - FlowWithSource_allOf_labels
          - id: id
            type: MAX_DURATION
            behavior: FAIL
            labels:
            - FlowWithSource_allOf_labels
            - FlowWithSource_allOf_labels
          afterExecution:
          - taskCache:
              ttl: ttl
              enabled: true
            description: description
            type: type
            logToFile: true
            version: version
            timeout:
              expression: expression
              value: value
            allowWarning: true
            allowFailure: true
            logLevel: ERROR
            runIf: runIf
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            retry: "{}"
          - taskCache:
              ttl: ttl
              enabled: true
            description: description
            type: type
            logToFile: true
            version: version
            timeout:
              expression: expression
              value: value
            allowWarning: true
            allowFailure: true
            logLevel: ERROR
            runIf: runIf
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            retry: "{}"
          triggers:
          - minLogLevel: ""
            stopAfter:
            - CREATED
            - CREATED
            description: description
            type: type
            logToFile: true
            version: version
            labels:
            - The_labels_to_pass_to_the_execution_created_
            - The_labels_to_pass_to_the_execution_created_
            failOnTriggerError: true
            logLevel: null
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            conditions:
            - type: type
            - type: type
          - minLogLevel: ""
            stopAfter:
            - CREATED
            - CREATED
            description: description
            type: type
            logToFile: true
            version: version
            labels:
            - The_labels_to_pass_to_the_execution_created_
            - The_labels_to_pass_to_the_execution_created_
            failOnTriggerError: true
            logLevel: null
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            conditions:
            - type: type
            - type: type
          pluginDefaults:
          - forced: true
            values:
              key: "{}"
            type: type
          - forced: true
            values:
              key: "{}"
            type: type
          revision: 1
          labels:
          - Flow_allOf_labels
          - Flow_allOf_labels
          concurrency:
            limit: 1
            behavior: QUEUE
          deleted: true
          taskDefaults:
          - forced: true
            values:
              key: "{}"
            type: type
          - forced: true
            values:
              key: "{}"
            type: type
          namespace: namespace
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          tasks:
          - taskCache:
              ttl: ttl
              enabled: true
            description: description
            type: type
            logToFile: true
            version: version
            timeout:
              expression: expression
              value: value
            allowWarning: true
            allowFailure: true
            logLevel: ERROR
            runIf: runIf
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            retry: "{}"
          - taskCache:
              ttl: ttl
              enabled: true
            description: description
            type: type
            logToFile: true
            version: version
            timeout:
              expression: expression
              value: value
            allowWarning: true
            allowFailure: true
            logLevel: ERROR
            runIf: runIf
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            retry: "{}"
          errors:
          - taskCache:
              ttl: ttl
              enabled: true
            description: description
            type: type
            logToFile: true
            version: version
            timeout:
              expression: expression
              value: value
            allowWarning: true
            allowFailure: true
            logLevel: ERROR
            runIf: runIf
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            retry: "{}"
          - taskCache:
              ttl: ttl
              enabled: true
            description: description
            type: type
            logToFile: true
            version: version
            timeout:
              expression: expression
              value: value
            allowWarning: true
            allowFailure: true
            logLevel: ERROR
            runIf: runIf
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            retry: "{}"
          retry: null
      properties:
        results:
          items:
            $ref: "#/components/schemas/Flow"
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_IAMBindingController.ApiBindingDetail_:
      example:
        total: 0
        results:
        - role:
            name: name
            id: id
          namespace: namespace
          id: id
          type: USER
          user: ""
          group: ""
        - role:
            name: name
            id: id
          namespace: namespace
          id: id
          type: USER
          user: ""
          group: ""
      properties:
        results:
          items:
            $ref: "#/components/schemas/IAMBindingController.ApiBindingDetail"
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_IAMGroupController.ApiGroupMember_:
      example:
        total: 0
        results:
        - displayName: displayName
          groups:
          - external: true
            name: name
            id: id
            membership: OWNER
          - external: true
            name: name
            id: id
            membership: OWNER
          id: id
          username: username
        - displayName: displayName
          groups:
          - external: true
            name: name
            id: id
            membership: OWNER
          - external: true
            name: name
            id: id
            membership: OWNER
          id: id
          username: username
      properties:
        results:
          items:
            $ref: "#/components/schemas/IAMGroupController.ApiGroupMember"
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_IAMInvitationController.ApiInvitationDetail_:
      example:
        total: 0
        results:
        - expiredAt: 2000-01-23T04:56:07.000+00:00
          roles:
          - isDefault: true
            name: name
            id: id
            isManaged: true
          - isDefault: true
            name: name
            id: id
            isManaged: true
          tenantId: tenantId
          link: link
          groups:
          - name: name
            id: id
          - name: name
            id: id
          id: id
          sentAt: 2000-01-23T04:56:07.000+00:00
          superAdmin: true
          email: email
          status: PENDING
          acceptedAt: 2000-01-23T04:56:07.000+00:00
        - expiredAt: 2000-01-23T04:56:07.000+00:00
          roles:
          - isDefault: true
            name: name
            id: id
            isManaged: true
          - isDefault: true
            name: name
            id: id
            isManaged: true
          tenantId: tenantId
          link: link
          groups:
          - name: name
            id: id
          - name: name
            id: id
          id: id
          sentAt: 2000-01-23T04:56:07.000+00:00
          superAdmin: true
          email: email
          status: PENDING
          acceptedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        results:
          items:
            $ref: "#/components/schemas/IAMInvitationController.ApiInvitationDetail"
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_IAMServiceAccountController.ApiServiceAccountDetail_:
      example:
        total: 0
        results:
        - tenants:
          - name: name
            id: id
          - name: name
            id: id
          name: name
          description: description
          id: id
          superAdmin: true
        - tenants:
          - name: name
            id: id
          - name: name
            id: id
          name: name
          description: description
          id: id
          superAdmin: true
      properties:
        results:
          items:
            $ref: "#/components/schemas/IAMServiceAccountController.ApiServiceAccountDetail"
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_IAMTenantAccessController.ApiUserTenantAccess_:
      example:
        total: 0
        results:
        - displayName: displayName
          auths:
          - name: name
            type: type
          - name: name
            type: type
          description: description
          groups:
          - external: true
            name: name
            id: id
          - external: true
            name: name
            id: id
          id: id
          username: username
        - displayName: displayName
          auths:
          - name: name
            type: type
          - name: name
            type: type
          description: description
          groups:
          - external: true
            name: name
            id: id
          - external: true
            name: name
            id: id
          id: id
          username: username
      properties:
        results:
          items:
            $ref: "#/components/schemas/IAMTenantAccessController.ApiUserTenantAccess"
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_IAMUserController.ApiUserSummary_:
      example:
        total: 0
        results:
        - tenants:
          - name: name
            id: id
          - name: name
            id: id
          displayName: displayName
          auths:
          - name: name
            id: id
            type: type
          - name: name
            id: id
            type: type
          id: id
          superAdmin: true
          username: username
        - tenants:
          - name: name
            id: id
          - name: name
            id: id
          displayName: displayName
          auths:
          - name: name
            id: id
            type: type
          - name: name
            id: id
            type: type
          id: id
          superAdmin: true
          username: username
      properties:
        results:
          items:
            $ref: "#/components/schemas/IAMUserController.ApiUserSummary"
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_InstanceController.ApiPluginArtifact_:
      example:
        total: 0
        results:
        - versions:
          - versions
          - versions
          groupId: groupId
          icon: icon
          artifactId: artifactId
          title: title
        - versions:
          - versions
          - versions
          groupId: groupId
          icon: icon
          artifactId: artifactId
          title: title
      properties:
        results:
          items:
            $ref: "#/components/schemas/InstanceController.ApiPluginArtifact"
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_InstanceController.ApiServiceInstance_:
      example:
        total: 0
        results:
        - server:
            hostname: hostname
            id: id
            type: SERVER
            version: version
          createdAt: 2000-01-23T04:56:07.000+00:00
          id: id
          state: CREATED
          type: EXECUTOR
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - server:
            hostname: hostname
            id: id
            type: SERVER
            version: version
          createdAt: 2000-01-23T04:56:07.000+00:00
          id: id
          state: CREATED
          type: EXECUTOR
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        results:
          items:
            $ref: "#/components/schemas/InstanceController.ApiServiceInstance"
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_LogEntry_:
      example:
        total: 6
        results:
        - attemptNumber: 0
          level: ERROR
          triggerId: triggerId
          thread: thread
          message: message
          taskRunId: taskRunId
          executionId: executionId
          deleted: true
          namespace: namespace
          flowId: flowId
          executionKind: ""
          taskId: taskId
          timestamp: 2000-01-23T04:56:07.000+00:00
        - attemptNumber: 0
          level: ERROR
          triggerId: triggerId
          thread: thread
          message: message
          taskRunId: taskRunId
          executionId: executionId
          deleted: true
          namespace: namespace
          flowId: flowId
          executionKind: ""
          taskId: taskId
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        results:
          items:
            $ref: "#/components/schemas/LogEntry"
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_Map_String.Object__:
      example:
        total: 0
        results:
        - key: "{}"
        - key: "{}"
      properties:
        results:
          items:
            additionalProperties:
              type: object
            type: object
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_MetricEntry_:
      example:
        total: 6
        results:
        - taskRunId: taskRunId
          executionId: executionId
          deleted: true
          namespace: namespace
          name: name
          type: type
          flowId: flowId
          value: 0.8008281904610115
          executionKind: ""
          taskId: taskId
          timestamp: 2000-01-23T04:56:07.000+00:00
          tags:
            key: tags
        - taskRunId: taskRunId
          executionId: executionId
          deleted: true
          namespace: namespace
          name: name
          type: type
          flowId: flowId
          value: 0.8008281904610115
          executionKind: ""
          taskId: taskId
          timestamp: 2000-01-23T04:56:07.000+00:00
          tags:
            key: tags
      properties:
        results:
          items:
            $ref: "#/components/schemas/MetricEntry"
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_Namespace_:
      example:
        total: 0
        results:
        - variables:
            key: "{}"
          secretConfiguration:
            key: "{}"
          storageIsolation:
            deniedServices:
            - EXECUTOR
            - EXECUTOR
            enabled: true
          description: description
          pluginDefaults:
          - forced: true
            values:
              key: "{}"
            type: type
          - forced: true
            values:
              key: "{}"
            type: type
          secretReadOnly: true
          secretIsolation:
            deniedServices:
            - EXECUTOR
            - EXECUTOR
            enabled: true
          allowedNamespaces:
          - namespace: namespace
          - namespace: namespace
          deleted: true
          allowedTriggers:
          - namespace: namespace
            flowId: flowId
          - namespace: namespace
            flowId: flowId
          storageConfiguration:
            key: "{}"
          secretType: secretType
          storageType: storageType
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          outputsInInternalStorage: true
        - variables:
            key: "{}"
          secretConfiguration:
            key: "{}"
          storageIsolation:
            deniedServices:
            - EXECUTOR
            - EXECUTOR
            enabled: true
          description: description
          pluginDefaults:
          - forced: true
            values:
              key: "{}"
            type: type
          - forced: true
            values:
              key: "{}"
            type: type
          secretReadOnly: true
          secretIsolation:
            deniedServices:
            - EXECUTOR
            - EXECUTOR
            enabled: true
          allowedNamespaces:
          - namespace: namespace
          - namespace: namespace
          deleted: true
          allowedTriggers:
          - namespace: namespace
            flowId: flowId
          - namespace: namespace
            flowId: flowId
          storageConfiguration:
            key: "{}"
          secretType: secretType
          storageType: storageType
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          outputsInInternalStorage: true
      properties:
        results:
          items:
            $ref: "#/components/schemas/Namespace"
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_SearchResult_Flow__:
      example:
        total: 0
        results:
        - model:
            outputs:
            - displayName: displayName
              description: description
              id: id
              type: STRING
              value: "{}"
              required: true
            - displayName: displayName
              description: description
              id: id
              type: STRING
              value: "{}"
              required: true
            variables:
              key: "{}"
            listeners:
            - description: description
              conditions:
              - type: type
              - type: type
              tasks:
              - taskCache:
                  ttl: ttl
                  enabled: true
                description: description
                type: type
                logToFile: true
                version: version
                timeout:
                  expression: expression
                  value: value
                allowWarning: true
                allowFailure: true
                logLevel: ERROR
                runIf: runIf
                disabled: true
                id: id
                workerGroup:
                  fallback: FAIL
                  key: key
                retry: "{}"
              - taskCache:
                  ttl: ttl
                  enabled: true
                description: description
                type: type
                logToFile: true
                version: version
                timeout:
                  expression: expression
                  value: value
                allowWarning: true
                allowFailure: true
                logLevel: ERROR
                runIf: runIf
                disabled: true
                id: id
                workerGroup:
                  fallback: FAIL
                  key: key
                retry: "{}"
            - description: description
              conditions:
              - type: type
              - type: type
              tasks:
              - taskCache:
                  ttl: ttl
                  enabled: true
                description: description
                type: type
                logToFile: true
                version: version
                timeout:
                  expression: expression
                  value: value
                allowWarning: true
                allowFailure: true
                logLevel: ERROR
                runIf: runIf
                disabled: true
                id: id
                workerGroup:
                  fallback: FAIL
                  key: key
                retry: "{}"
              - taskCache:
                  ttl: ttl
                  enabled: true
                description: description
                type: type
                logToFile: true
                version: version
                timeout:
                  expression: expression
                  value: value
                allowWarning: true
                allowFailure: true
                logLevel: ERROR
                runIf: runIf
                disabled: true
                id: id
                workerGroup:
                  fallback: FAIL
                  key: key
                retry: "{}"
            inputs:
            - dependsOn: ""
              defaults: ""
              displayName: displayName
              name: name
              description: description
              id: id
              type: ""
              required: true
            - dependsOn: ""
              defaults: ""
              displayName: displayName
              name: name
              description: description
              id: id
              type: ""
              required: true
            finally:
            - taskCache:
                ttl: ttl
                enabled: true
              description: description
              type: type
              logToFile: true
              version: version
              timeout:
                expression: expression
                value: value
              allowWarning: true
              allowFailure: true
              logLevel: ERROR
              runIf: runIf
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              retry: "{}"
            - taskCache:
                ttl: ttl
                enabled: true
              description: description
              type: type
              logToFile: true
              version: version
              timeout:
                expression: expression
                value: value
              allowWarning: true
              allowFailure: true
              logLevel: ERROR
              runIf: runIf
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              retry: "{}"
            description: description
            sla:
            - id: id
              type: MAX_DURATION
              behavior: FAIL
              labels:
              - FlowWithSource_allOf_labels
              - FlowWithSource_allOf_labels
            - id: id
              type: MAX_DURATION
              behavior: FAIL
              labels:
              - FlowWithSource_allOf_labels
              - FlowWithSource_allOf_labels
            afterExecution:
            - taskCache:
                ttl: ttl
                enabled: true
              description: description
              type: type
              logToFile: true
              version: version
              timeout:
                expression: expression
                value: value
              allowWarning: true
              allowFailure: true
              logLevel: ERROR
              runIf: runIf
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              retry: "{}"
            - taskCache:
                ttl: ttl
                enabled: true
              description: description
              type: type
              logToFile: true
              version: version
              timeout:
                expression: expression
                value: value
              allowWarning: true
              allowFailure: true
              logLevel: ERROR
              runIf: runIf
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              retry: "{}"
            triggers:
            - minLogLevel: ""
              stopAfter:
              - CREATED
              - CREATED
              description: description
              type: type
              logToFile: true
              version: version
              labels:
              - The_labels_to_pass_to_the_execution_created_
              - The_labels_to_pass_to_the_execution_created_
              failOnTriggerError: true
              logLevel: null
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              conditions:
              - type: type
              - type: type
            - minLogLevel: ""
              stopAfter:
              - CREATED
              - CREATED
              description: description
              type: type
              logToFile: true
              version: version
              labels:
              - The_labels_to_pass_to_the_execution_created_
              - The_labels_to_pass_to_the_execution_created_
              failOnTriggerError: true
              logLevel: null
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              conditions:
              - type: type
              - type: type
            pluginDefaults:
            - forced: true
              values:
                key: "{}"
              type: type
            - forced: true
              values:
                key: "{}"
              type: type
            revision: 1
            labels:
            - Flow_allOf_labels
            - Flow_allOf_labels
            concurrency:
              limit: 1
              behavior: QUEUE
            deleted: true
            taskDefaults:
            - forced: true
              values:
                key: "{}"
              type: type
            - forced: true
              values:
                key: "{}"
              type: type
            namespace: namespace
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            tasks:
            - taskCache:
                ttl: ttl
                enabled: true
              description: description
              type: type
              logToFile: true
              version: version
              timeout:
                expression: expression
                value: value
              allowWarning: true
              allowFailure: true
              logLevel: ERROR
              runIf: runIf
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              retry: "{}"
            - taskCache:
                ttl: ttl
                enabled: true
              description: description
              type: type
              logToFile: true
              version: version
              timeout:
                expression: expression
                value: value
              allowWarning: true
              allowFailure: true
              logLevel: ERROR
              runIf: runIf
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              retry: "{}"
            errors:
            - taskCache:
                ttl: ttl
                enabled: true
              description: description
              type: type
              logToFile: true
              version: version
              timeout:
                expression: expression
                value: value
              allowWarning: true
              allowFailure: true
              logLevel: ERROR
              runIf: runIf
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              retry: "{}"
            - taskCache:
                ttl: ttl
                enabled: true
              description: description
              type: type
              logToFile: true
              version: version
              timeout:
                expression: expression
                value: value
              allowWarning: true
              allowFailure: true
              logLevel: ERROR
              runIf: runIf
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              retry: "{}"
            retry: null
          fragments:
          - fragments
          - fragments
        - model:
            outputs:
            - displayName: displayName
              description: description
              id: id
              type: STRING
              value: "{}"
              required: true
            - displayName: displayName
              description: description
              id: id
              type: STRING
              value: "{}"
              required: true
            variables:
              key: "{}"
            listeners:
            - description: description
              conditions:
              - type: type
              - type: type
              tasks:
              - taskCache:
                  ttl: ttl
                  enabled: true
                description: description
                type: type
                logToFile: true
                version: version
                timeout:
                  expression: expression
                  value: value
                allowWarning: true
                allowFailure: true
                logLevel: ERROR
                runIf: runIf
                disabled: true
                id: id
                workerGroup:
                  fallback: FAIL
                  key: key
                retry: "{}"
              - taskCache:
                  ttl: ttl
                  enabled: true
                description: description
                type: type
                logToFile: true
                version: version
                timeout:
                  expression: expression
                  value: value
                allowWarning: true
                allowFailure: true
                logLevel: ERROR
                runIf: runIf
                disabled: true
                id: id
                workerGroup:
                  fallback: FAIL
                  key: key
                retry: "{}"
            - description: description
              conditions:
              - type: type
              - type: type
              tasks:
              - taskCache:
                  ttl: ttl
                  enabled: true
                description: description
                type: type
                logToFile: true
                version: version
                timeout:
                  expression: expression
                  value: value
                allowWarning: true
                allowFailure: true
                logLevel: ERROR
                runIf: runIf
                disabled: true
                id: id
                workerGroup:
                  fallback: FAIL
                  key: key
                retry: "{}"
              - taskCache:
                  ttl: ttl
                  enabled: true
                description: description
                type: type
                logToFile: true
                version: version
                timeout:
                  expression: expression
                  value: value
                allowWarning: true
                allowFailure: true
                logLevel: ERROR
                runIf: runIf
                disabled: true
                id: id
                workerGroup:
                  fallback: FAIL
                  key: key
                retry: "{}"
            inputs:
            - dependsOn: ""
              defaults: ""
              displayName: displayName
              name: name
              description: description
              id: id
              type: ""
              required: true
            - dependsOn: ""
              defaults: ""
              displayName: displayName
              name: name
              description: description
              id: id
              type: ""
              required: true
            finally:
            - taskCache:
                ttl: ttl
                enabled: true
              description: description
              type: type
              logToFile: true
              version: version
              timeout:
                expression: expression
                value: value
              allowWarning: true
              allowFailure: true
              logLevel: ERROR
              runIf: runIf
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              retry: "{}"
            - taskCache:
                ttl: ttl
                enabled: true
              description: description
              type: type
              logToFile: true
              version: version
              timeout:
                expression: expression
                value: value
              allowWarning: true
              allowFailure: true
              logLevel: ERROR
              runIf: runIf
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              retry: "{}"
            description: description
            sla:
            - id: id
              type: MAX_DURATION
              behavior: FAIL
              labels:
              - FlowWithSource_allOf_labels
              - FlowWithSource_allOf_labels
            - id: id
              type: MAX_DURATION
              behavior: FAIL
              labels:
              - FlowWithSource_allOf_labels
              - FlowWithSource_allOf_labels
            afterExecution:
            - taskCache:
                ttl: ttl
                enabled: true
              description: description
              type: type
              logToFile: true
              version: version
              timeout:
                expression: expression
                value: value
              allowWarning: true
              allowFailure: true
              logLevel: ERROR
              runIf: runIf
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              retry: "{}"
            - taskCache:
                ttl: ttl
                enabled: true
              description: description
              type: type
              logToFile: true
              version: version
              timeout:
                expression: expression
                value: value
              allowWarning: true
              allowFailure: true
              logLevel: ERROR
              runIf: runIf
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              retry: "{}"
            triggers:
            - minLogLevel: ""
              stopAfter:
              - CREATED
              - CREATED
              description: description
              type: type
              logToFile: true
              version: version
              labels:
              - The_labels_to_pass_to_the_execution_created_
              - The_labels_to_pass_to_the_execution_created_
              failOnTriggerError: true
              logLevel: null
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              conditions:
              - type: type
              - type: type
            - minLogLevel: ""
              stopAfter:
              - CREATED
              - CREATED
              description: description
              type: type
              logToFile: true
              version: version
              labels:
              - The_labels_to_pass_to_the_execution_created_
              - The_labels_to_pass_to_the_execution_created_
              failOnTriggerError: true
              logLevel: null
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              conditions:
              - type: type
              - type: type
            pluginDefaults:
            - forced: true
              values:
                key: "{}"
              type: type
            - forced: true
              values:
                key: "{}"
              type: type
            revision: 1
            labels:
            - Flow_allOf_labels
            - Flow_allOf_labels
            concurrency:
              limit: 1
              behavior: QUEUE
            deleted: true
            taskDefaults:
            - forced: true
              values:
                key: "{}"
              type: type
            - forced: true
              values:
                key: "{}"
              type: type
            namespace: namespace
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            tasks:
            - taskCache:
                ttl: ttl
                enabled: true
              description: description
              type: type
              logToFile: true
              version: version
              timeout:
                expression: expression
                value: value
              allowWarning: true
              allowFailure: true
              logLevel: ERROR
              runIf: runIf
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              retry: "{}"
            - taskCache:
                ttl: ttl
                enabled: true
              description: description
              type: type
              logToFile: true
              version: version
              timeout:
                expression: expression
                value: value
              allowWarning: true
              allowFailure: true
              logLevel: ERROR
              runIf: runIf
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              retry: "{}"
            errors:
            - taskCache:
                ttl: ttl
                enabled: true
              description: description
              type: type
              logToFile: true
              version: version
              timeout:
                expression: expression
                value: value
              allowWarning: true
              allowFailure: true
              logLevel: ERROR
              runIf: runIf
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              retry: "{}"
            - taskCache:
                ttl: ttl
                enabled: true
              description: description
              type: type
              logToFile: true
              version: version
              timeout:
                expression: expression
                value: value
              allowWarning: true
              allowFailure: true
              logLevel: ERROR
              runIf: runIf
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              retry: "{}"
            retry: null
          fragments:
          - fragments
          - fragments
      properties:
        results:
          items:
            $ref: "#/components/schemas/SearchResult_Flow_"
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_TaskRun_:
      example:
        total: 0
        results:
        - outputs:
            key: "{}"
          parentTaskRunId: parentTaskRunId
          executionId: executionId
          forceExecution: true
          namespace: namespace
          iteration: 6
          dynamic: true
          id: id
          state:
            duration: duration
            current: CREATED
            endDate: 2000-01-23T04:56:07.000+00:00
            histories:
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            startDate: 2000-01-23T04:56:07.000+00:00
          items: items
          flowId: flowId
          value: value
          taskId: taskId
          attempts:
          - workerId: workerId
            logFile: https://openapi-generator.tech
            metrics:
            - name: name
              description: description
              type: type
              value: "{}"
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            - name: name
              description: description
              type: type
              value: "{}"
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            state:
              duration: duration
              current: CREATED
              endDate: 2000-01-23T04:56:07.000+00:00
              histories:
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              startDate: 2000-01-23T04:56:07.000+00:00
          - workerId: workerId
            logFile: https://openapi-generator.tech
            metrics:
            - name: name
              description: description
              type: type
              value: "{}"
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            - name: name
              description: description
              type: type
              value: "{}"
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            state:
              duration: duration
              current: CREATED
              endDate: 2000-01-23T04:56:07.000+00:00
              histories:
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              startDate: 2000-01-23T04:56:07.000+00:00
        - outputs:
            key: "{}"
          parentTaskRunId: parentTaskRunId
          executionId: executionId
          forceExecution: true
          namespace: namespace
          iteration: 6
          dynamic: true
          id: id
          state:
            duration: duration
            current: CREATED
            endDate: 2000-01-23T04:56:07.000+00:00
            histories:
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            startDate: 2000-01-23T04:56:07.000+00:00
          items: items
          flowId: flowId
          value: value
          taskId: taskId
          attempts:
          - workerId: workerId
            logFile: https://openapi-generator.tech
            metrics:
            - name: name
              description: description
              type: type
              value: "{}"
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            - name: name
              description: description
              type: type
              value: "{}"
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            state:
              duration: duration
              current: CREATED
              endDate: 2000-01-23T04:56:07.000+00:00
              histories:
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              startDate: 2000-01-23T04:56:07.000+00:00
          - workerId: workerId
            logFile: https://openapi-generator.tech
            metrics:
            - name: name
              description: description
              type: type
              value: "{}"
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            - name: name
              description: description
              type: type
              value: "{}"
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            state:
              duration: duration
              current: CREATED
              endDate: 2000-01-23T04:56:07.000+00:00
              histories:
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        results:
          items:
            $ref: "#/components/schemas/TaskRun"
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_Tenant_:
      example:
        total: 0
        results:
        - secretConfiguration:
            key: "{}"
          requireExistingNamespace: true
          storageIsolation:
            deniedServices:
            - EXECUTOR
            - EXECUTOR
            enabled: true
          secretReadOnly: true
          secretIsolation:
            deniedServices:
            - EXECUTOR
            - EXECUTOR
            enabled: true
          deleted: true
          storageConfiguration:
            key: "{}"
          secretType: secretType
          name: name
          storageType: storageType
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          outputsInInternalStorage: true
        - secretConfiguration:
            key: "{}"
          requireExistingNamespace: true
          storageIsolation:
            deniedServices:
            - EXECUTOR
            - EXECUTOR
            enabled: true
          secretReadOnly: true
          secretIsolation:
            deniedServices:
            - EXECUTOR
            - EXECUTOR
            enabled: true
          deleted: true
          storageConfiguration:
            key: "{}"
          secretType: secretType
          name: name
          storageType: storageType
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          outputsInInternalStorage: true
      properties:
        results:
          items:
            $ref: "#/components/schemas/Tenant"
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_TestSuiteRunResult_:
      example:
        total: 0
        results:
        - endDate: 2000-01-23T04:56:07.000+00:00
          namespace: namespace
          id: id
          testSuiteId: testSuiteId
          state: ERROR
          flowId: flowId
          results:
          - executionId: executionId
            assertionResults:
            - actual: "{}"
              expected: "{}"
              errorMessage: errorMessage
              description: description
              operator: operator
              taskId: taskId
              isSuccess: true
            - actual: "{}"
              expected: "{}"
              errorMessage: errorMessage
              description: description
              operator: operator
              taskId: taskId
              isSuccess: true
            testType: testType
            testId: testId
            state: null
            url: https://openapi-generator.tech
            errors:
            - details: details
              message: message
            - details: details
              message: message
            fixtures:
              inputs:
                key: ""
              files:
                key: files
              trigger:
                variables:
                  key: "{}"
                id: id
                type: type
              tasks:
              - outputs:
                  key: "{}"
                description:
                  expression: expression
                  value: value
                id: id
                state: null
                value: value
              - outputs:
                  key: "{}"
                description:
                  expression: expression
                  value: value
                id: id
                state: null
                value: value
          - executionId: executionId
            assertionResults:
            - actual: "{}"
              expected: "{}"
              errorMessage: errorMessage
              description: description
              operator: operator
              taskId: taskId
              isSuccess: true
            - actual: "{}"
              expected: "{}"
              errorMessage: errorMessage
              description: description
              operator: operator
              taskId: taskId
              isSuccess: true
            testType: testType
            testId: testId
            state: null
            url: https://openapi-generator.tech
            errors:
            - details: details
              message: message
            - details: details
              message: message
            fixtures:
              inputs:
                key: ""
              files:
                key: files
              trigger:
                variables:
                  key: "{}"
                id: id
                type: type
              tasks:
              - outputs:
                  key: "{}"
                description:
                  expression: expression
                  value: value
                id: id
                state: null
                value: value
              - outputs:
                  key: "{}"
                description:
                  expression: expression
                  value: value
                id: id
                state: null
                value: value
          startDate: 2000-01-23T04:56:07.000+00:00
        - endDate: 2000-01-23T04:56:07.000+00:00
          namespace: namespace
          id: id
          testSuiteId: testSuiteId
          state: ERROR
          flowId: flowId
          results:
          - executionId: executionId
            assertionResults:
            - actual: "{}"
              expected: "{}"
              errorMessage: errorMessage
              description: description
              operator: operator
              taskId: taskId
              isSuccess: true
            - actual: "{}"
              expected: "{}"
              errorMessage: errorMessage
              description: description
              operator: operator
              taskId: taskId
              isSuccess: true
            testType: testType
            testId: testId
            state: null
            url: https://openapi-generator.tech
            errors:
            - details: details
              message: message
            - details: details
              message: message
            fixtures:
              inputs:
                key: ""
              files:
                key: files
              trigger:
                variables:
                  key: "{}"
                id: id
                type: type
              tasks:
              - outputs:
                  key: "{}"
                description:
                  expression: expression
                  value: value
                id: id
                state: null
                value: value
              - outputs:
                  key: "{}"
                description:
                  expression: expression
                  value: value
                id: id
                state: null
                value: value
          - executionId: executionId
            assertionResults:
            - actual: "{}"
              expected: "{}"
              errorMessage: errorMessage
              description: description
              operator: operator
              taskId: taskId
              isSuccess: true
            - actual: "{}"
              expected: "{}"
              errorMessage: errorMessage
              description: description
              operator: operator
              taskId: taskId
              isSuccess: true
            testType: testType
            testId: testId
            state: null
            url: https://openapi-generator.tech
            errors:
            - details: details
              message: message
            - details: details
              message: message
            fixtures:
              inputs:
                key: ""
              files:
                key: files
              trigger:
                variables:
                  key: "{}"
                id: id
                type: type
              tasks:
              - outputs:
                  key: "{}"
                description:
                  expression: expression
                  value: value
                id: id
                state: null
                value: value
              - outputs:
                  key: "{}"
                description:
                  expression: expression
                  value: value
                id: id
                state: null
                value: value
          startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        results:
          items:
            $ref: "#/components/schemas/TestSuiteRunResult"
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_TestSuite_:
      example:
        total: 0
        results:
        - deleted: true
          testCases:
          - description: description
            disabled: true
            id: id
            assertions:
            - isNotNull:
                expression: expression
                value: true
              in:
                expression: expression
                value:
                - value
                - value
              errorMessage:
                expression: expression
                value: value
              equalTo:
                expression: expression
                value: "{}"
              greaterThanOrEqualTo:
                expression: expression
                value: 0.8008281904610115
              description:
                expression: expression
                value: value
              contains:
                expression: expression
                value: value
              lessThan:
                expression: expression
                value: 0.8008281904610115
              isNull:
                expression: expression
                value: true
              endsWith:
                expression: expression
                value: value
              notIn:
                expression: expression
                value:
                - value
                - value
              value:
                expression: expression
                value: "{}"
              taskId: taskId
              lessThanOrEqualTo:
                expression: expression
                value: 0.8008281904610115
              startsWith:
                expression: expression
                value: value
              notEqualTo:
                expression: expression
                value: "{}"
              greaterThan:
                expression: expression
                value: 0.8008281904610115
            - isNotNull:
                expression: expression
                value: true
              in:
                expression: expression
                value:
                - value
                - value
              errorMessage:
                expression: expression
                value: value
              equalTo:
                expression: expression
                value: "{}"
              greaterThanOrEqualTo:
                expression: expression
                value: 0.8008281904610115
              description:
                expression: expression
                value: value
              contains:
                expression: expression
                value: value
              lessThan:
                expression: expression
                value: 0.8008281904610115
              isNull:
                expression: expression
                value: true
              endsWith:
                expression: expression
                value: value
              notIn:
                expression: expression
                value:
                - value
                - value
              value:
                expression: expression
                value: "{}"
              taskId: taskId
              lessThanOrEqualTo:
                expression: expression
                value: 0.8008281904610115
              startsWith:
                expression: expression
                value: value
              notEqualTo:
                expression: expression
                value: "{}"
              greaterThan:
                expression: expression
                value: 0.8008281904610115
            type: type
            fixtures:
              inputs:
                key: ""
              files:
                key: files
              trigger:
                variables:
                  key: "{}"
                id: id
                type: type
              tasks:
              - outputs:
                  key: "{}"
                description:
                  expression: expression
                  value: value
                id: id
                state: null
                value: value
              - outputs:
                  key: "{}"
                description:
                  expression: expression
                  value: value
                id: id
                state: null
                value: value
          - description: description
            disabled: true
            id: id
            assertions:
            - isNotNull:
                expression: expression
                value: true
              in:
                expression: expression
                value:
                - value
                - value
              errorMessage:
                expression: expression
                value: value
              equalTo:
                expression: expression
                value: "{}"
              greaterThanOrEqualTo:
                expression: expression
                value: 0.8008281904610115
              description:
                expression: expression
                value: value
              contains:
                expression: expression
                value: value
              lessThan:
                expression: expression
                value: 0.8008281904610115
              isNull:
                expression: expression
                value: true
              endsWith:
                expression: expression
                value: value
              notIn:
                expression: expression
                value:
                - value
                - value
              value:
                expression: expression
                value: "{}"
              taskId: taskId
              lessThanOrEqualTo:
                expression: expression
                value: 0.8008281904610115
              startsWith:
                expression: expression
                value: value
              notEqualTo:
                expression: expression
                value: "{}"
              greaterThan:
                expression: expression
                value: 0.8008281904610115
            - isNotNull:
                expression: expression
                value: true
              in:
                expression: expression
                value:
                - value
                - value
              errorMessage:
                expression: expression
                value: value
              equalTo:
                expression: expression
                value: "{}"
              greaterThanOrEqualTo:
                expression: expression
                value: 0.8008281904610115
              description:
                expression: expression
                value: value
              contains:
                expression: expression
                value: value
              lessThan:
                expression: expression
                value: 0.8008281904610115
              isNull:
                expression: expression
                value: true
              endsWith:
                expression: expression
                value: value
              notIn:
                expression: expression
                value:
                - value
                - value
              value:
                expression: expression
                value: "{}"
              taskId: taskId
              lessThanOrEqualTo:
                expression: expression
                value: 0.8008281904610115
              startsWith:
                expression: expression
                value: value
              notEqualTo:
                expression: expression
                value: "{}"
              greaterThan:
                expression: expression
                value: 0.8008281904610115
            type: type
            fixtures:
              inputs:
                key: ""
              files:
                key: files
              trigger:
                variables:
                  key: "{}"
                id: id
                type: type
              tasks:
              - outputs:
                  key: "{}"
                description:
                  expression: expression
                  value: value
                id: id
                state: null
                value: value
              - outputs:
                  key: "{}"
                description:
                  expression: expression
                  value: value
                id: id
                state: null
                value: value
          namespace: namespace
          description: description
          disabled: true
          id: id
          source: source
          flowId: flowId
        - deleted: true
          testCases:
          - description: description
            disabled: true
            id: id
            assertions:
            - isNotNull:
                expression: expression
                value: true
              in:
                expression: expression
                value:
                - value
                - value
              errorMessage:
                expression: expression
                value: value
              equalTo:
                expression: expression
                value: "{}"
              greaterThanOrEqualTo:
                expression: expression
                value: 0.8008281904610115
              description:
                expression: expression
                value: value
              contains:
                expression: expression
                value: value
              lessThan:
                expression: expression
                value: 0.8008281904610115
              isNull:
                expression: expression
                value: true
              endsWith:
                expression: expression
                value: value
              notIn:
                expression: expression
                value:
                - value
                - value
              value:
                expression: expression
                value: "{}"
              taskId: taskId
              lessThanOrEqualTo:
                expression: expression
                value: 0.8008281904610115
              startsWith:
                expression: expression
                value: value
              notEqualTo:
                expression: expression
                value: "{}"
              greaterThan:
                expression: expression
                value: 0.8008281904610115
            - isNotNull:
                expression: expression
                value: true
              in:
                expression: expression
                value:
                - value
                - value
              errorMessage:
                expression: expression
                value: value
              equalTo:
                expression: expression
                value: "{}"
              greaterThanOrEqualTo:
                expression: expression
                value: 0.8008281904610115
              description:
                expression: expression
                value: value
              contains:
                expression: expression
                value: value
              lessThan:
                expression: expression
                value: 0.8008281904610115
              isNull:
                expression: expression
                value: true
              endsWith:
                expression: expression
                value: value
              notIn:
                expression: expression
                value:
                - value
                - value
              value:
                expression: expression
                value: "{}"
              taskId: taskId
              lessThanOrEqualTo:
                expression: expression
                value: 0.8008281904610115
              startsWith:
                expression: expression
                value: value
              notEqualTo:
                expression: expression
                value: "{}"
              greaterThan:
                expression: expression
                value: 0.8008281904610115
            type: type
            fixtures:
              inputs:
                key: ""
              files:
                key: files
              trigger:
                variables:
                  key: "{}"
                id: id
                type: type
              tasks:
              - outputs:
                  key: "{}"
                description:
                  expression: expression
                  value: value
                id: id
                state: null
                value: value
              - outputs:
                  key: "{}"
                description:
                  expression: expression
                  value: value
                id: id
                state: null
                value: value
          - description: description
            disabled: true
            id: id
            assertions:
            - isNotNull:
                expression: expression
                value: true
              in:
                expression: expression
                value:
                - value
                - value
              errorMessage:
                expression: expression
                value: value
              equalTo:
                expression: expression
                value: "{}"
              greaterThanOrEqualTo:
                expression: expression
                value: 0.8008281904610115
              description:
                expression: expression
                value: value
              contains:
                expression: expression
                value: value
              lessThan:
                expression: expression
                value: 0.8008281904610115
              isNull:
                expression: expression
                value: true
              endsWith:
                expression: expression
                value: value
              notIn:
                expression: expression
                value:
                - value
                - value
              value:
                expression: expression
                value: "{}"
              taskId: taskId
              lessThanOrEqualTo:
                expression: expression
                value: 0.8008281904610115
              startsWith:
                expression: expression
                value: value
              notEqualTo:
                expression: expression
                value: "{}"
              greaterThan:
                expression: expression
                value: 0.8008281904610115
            - isNotNull:
                expression: expression
                value: true
              in:
                expression: expression
                value:
                - value
                - value
              errorMessage:
                expression: expression
                value: value
              equalTo:
                expression: expression
                value: "{}"
              greaterThanOrEqualTo:
                expression: expression
                value: 0.8008281904610115
              description:
                expression: expression
                value: value
              contains:
                expression: expression
                value: value
              lessThan:
                expression: expression
                value: 0.8008281904610115
              isNull:
                expression: expression
                value: true
              endsWith:
                expression: expression
                value: value
              notIn:
                expression: expression
                value:
                - value
                - value
              value:
                expression: expression
                value: "{}"
              taskId: taskId
              lessThanOrEqualTo:
                expression: expression
                value: 0.8008281904610115
              startsWith:
                expression: expression
                value: value
              notEqualTo:
                expression: expression
                value: "{}"
              greaterThan:
                expression: expression
                value: 0.8008281904610115
            type: type
            fixtures:
              inputs:
                key: ""
              files:
                key: files
              trigger:
                variables:
                  key: "{}"
                id: id
                type: type
              tasks:
              - outputs:
                  key: "{}"
                description:
                  expression: expression
                  value: value
                id: id
                state: null
                value: value
              - outputs:
                  key: "{}"
                description:
                  expression: expression
                  value: value
                id: id
                state: null
                value: value
          namespace: namespace
          description: description
          disabled: true
          id: id
          source: source
          flowId: flowId
      properties:
        results:
          items:
            $ref: "#/components/schemas/TestSuite"
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_TriggerController.Triggers_:
      example:
        total: 0
        results:
        - triggerContext:
            date: 2000-01-23T04:56:07.000+00:00
            workerId: workerId
            nextExecutionDate: 2000-01-23T04:56:07.000+00:00
            stopAfter:
            - CREATED
            - CREATED
            triggerId: triggerId
            updatedDate: 2000-01-23T04:56:07.000+00:00
            executionId: executionId
            tenantId: tenantId
            namespace: namespace
            backfill: ""
            evaluateRunningDate: 2000-01-23T04:56:07.000+00:00
            disabled: true
            flowId: flowId
          abstractTrigger:
            minLogLevel: ""
            stopAfter:
            - CREATED
            - CREATED
            description: description
            type: type
            logToFile: true
            version: version
            labels:
            - The_labels_to_pass_to_the_execution_created_
            - The_labels_to_pass_to_the_execution_created_
            failOnTriggerError: true
            logLevel: null
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            conditions:
            - type: type
            - type: type
        - triggerContext:
            date: 2000-01-23T04:56:07.000+00:00
            workerId: workerId
            nextExecutionDate: 2000-01-23T04:56:07.000+00:00
            stopAfter:
            - CREATED
            - CREATED
            triggerId: triggerId
            updatedDate: 2000-01-23T04:56:07.000+00:00
            executionId: executionId
            tenantId: tenantId
            namespace: namespace
            backfill: ""
            evaluateRunningDate: 2000-01-23T04:56:07.000+00:00
            disabled: true
            flowId: flowId
          abstractTrigger:
            minLogLevel: ""
            stopAfter:
            - CREATED
            - CREATED
            description: description
            type: type
            logToFile: true
            version: version
            labels:
            - The_labels_to_pass_to_the_execution_created_
            - The_labels_to_pass_to_the_execution_created_
            failOnTriggerError: true
            logLevel: null
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            conditions:
            - type: type
            - type: type
      properties:
        results:
          items:
            $ref: "#/components/schemas/TriggerController.Triggers"
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_Trigger_:
      example:
        total: 0
        results:
        - date: 2000-01-23T04:56:07.000+00:00
          workerId: workerId
          nextExecutionDate: 2000-01-23T04:56:07.000+00:00
          stopAfter:
          - CREATED
          - CREATED
          triggerId: triggerId
          updatedDate: 2000-01-23T04:56:07.000+00:00
          executionId: executionId
          tenantId: tenantId
          namespace: namespace
          backfill: ""
          evaluateRunningDate: 2000-01-23T04:56:07.000+00:00
          disabled: true
          flowId: flowId
        - date: 2000-01-23T04:56:07.000+00:00
          workerId: workerId
          nextExecutionDate: 2000-01-23T04:56:07.000+00:00
          stopAfter:
          - CREATED
          - CREATED
          triggerId: triggerId
          updatedDate: 2000-01-23T04:56:07.000+00:00
          executionId: executionId
          tenantId: tenantId
          namespace: namespace
          backfill: ""
          evaluateRunningDate: 2000-01-23T04:56:07.000+00:00
          disabled: true
          flowId: flowId
      properties:
        results:
          items:
            $ref: "#/components/schemas/Trigger"
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PatchOperation:
      properties:
        operation:
          $ref: "#/components/schemas/PatchOperation.Type"
        path:
          $ref: "#/components/schemas/PatchOperationPath"
        value:
          type: object
      type: object
    PatchOperation.Type:
      enum:
      - ADD
      - REMOVE
      - REPLACE
      type: string
    PatchOperationPath:
      properties:
        valuePathExpression:
          $ref: "#/components/schemas/ValuePathExpression"
      required:
      - valuePathExpression
      type: object
    PatchRequest:
      allOf:
      - $ref: "#/components/schemas/BaseResource_PatchRequest_"
      - properties:
          patchOperationList:
            items:
              $ref: "#/components/schemas/PatchOperation"
            type: array
        type: object
      type: object
    Permission:
      enum:
      - FLOW
      - BLUEPRINT
      - TEMPLATE
      - NAMESPACE
      - EXECUTION
      - USER
      - GROUP
      - ROLE
      - BINDING
      - AUDITLOG
      - SECRET
      - KVSTORE
      - IMPERSONATE
      - SETTING
      - INFRASTRUCTURE
      - APP
      - APPEXECUTION
      - TEST
      - DASHBOARD
      - TENANT_ACCESS
      - SERVICE_ACCOUNT
      - INVITATION
      - GROUP_MEMBERSHIP
      - UNKNOWN
      type: string
    Plugin:
      example:
        longDescription: longDescription
        storages:
        - deprecated: true
          cls: cls
        - deprecated: true
          cls: cls
        charts:
        - deprecated: true
          cls: cls
        - deprecated: true
          cls: cls
        aliases:
        - aliases
        - aliases
        taskRunners:
        - deprecated: true
          cls: cls
        - deprecated: true
          cls: cls
        description: description
        logExporters:
        - deprecated: true
          cls: cls
        - deprecated: true
          cls: cls
        title: title
        dataFiltersKPI:
        - deprecated: true
          cls: cls
        - deprecated: true
          cls: cls
        guides:
        - guides
        - guides
        controllers:
        - deprecated: true
          cls: cls
        - deprecated: true
          cls: cls
        categories:
        - DATABASE
        - DATABASE
        tasks:
        - deprecated: true
          cls: cls
        - deprecated: true
          cls: cls
        group: group
        apps:
        - deprecated: true
          cls: cls
        - deprecated: true
          cls: cls
        manifest:
          key: manifest
        subGroup: subGroup
        triggers:
        - deprecated: true
          cls: cls
        - deprecated: true
          cls: cls
        version: version
        secrets:
        - deprecated: true
          cls: cls
        - deprecated: true
          cls: cls
        license: license
        appBlocks:
        - deprecated: true
          cls: cls
        - deprecated: true
          cls: cls
        dataFilters:
        - deprecated: true
          cls: cls
        - deprecated: true
          cls: cls
        name: name
        conditions:
        - deprecated: true
          cls: cls
        - deprecated: true
          cls: cls
        additionalPlugins:
        - deprecated: true
          cls: cls
        - deprecated: true
          cls: cls
      properties:
        name:
          type: string
        title:
          type: string
        description:
          type: string
        license:
          type: string
        longDescription:
          type: string
        group:
          type: string
        version:
          type: string
        manifest:
          additionalProperties:
            type: string
          type: object
        guides:
          items:
            type: string
          type: array
        aliases:
          items:
            type: string
          type: array
        tasks:
          items:
            $ref: "#/components/schemas/Plugin.PluginElementMetadata"
          type: array
        triggers:
          items:
            $ref: "#/components/schemas/Plugin.PluginElementMetadata"
          type: array
        conditions:
          items:
            $ref: "#/components/schemas/Plugin.PluginElementMetadata"
          type: array
        controllers:
          items:
            $ref: "#/components/schemas/Plugin.PluginElementMetadata"
          type: array
        storages:
          items:
            $ref: "#/components/schemas/Plugin.PluginElementMetadata"
          type: array
        secrets:
          items:
            $ref: "#/components/schemas/Plugin.PluginElementMetadata"
          type: array
        taskRunners:
          items:
            $ref: "#/components/schemas/Plugin.PluginElementMetadata"
          type: array
        apps:
          items:
            $ref: "#/components/schemas/Plugin.PluginElementMetadata"
          type: array
        appBlocks:
          items:
            $ref: "#/components/schemas/Plugin.PluginElementMetadata"
          type: array
        charts:
          items:
            $ref: "#/components/schemas/Plugin.PluginElementMetadata"
          type: array
        dataFilters:
          items:
            $ref: "#/components/schemas/Plugin.PluginElementMetadata"
          type: array
        dataFiltersKPI:
          items:
            $ref: "#/components/schemas/Plugin.PluginElementMetadata"
          type: array
        logExporters:
          items:
            $ref: "#/components/schemas/Plugin.PluginElementMetadata"
          type: array
        additionalPlugins:
          items:
            $ref: "#/components/schemas/Plugin.PluginElementMetadata"
          type: array
        categories:
          items:
            $ref: "#/components/schemas/PluginSubGroup.PluginCategory"
          type: array
        subGroup:
          type: string
      type: object
    Plugin.PluginElementMetadata:
      example:
        deprecated: true
        cls: cls
      properties:
        cls:
          type: string
        deprecated:
          type: boolean
      required:
      - cls
      - deprecated
      type: object
    PluginArtifact:
      example:
        extension: extension
        groupId: groupId
        classifier: classifier
        artifactId: artifactId
        version: version
        uri: https://openapi-generator.tech
      properties:
        groupId:
          type: string
        artifactId:
          type: string
        extension:
          type: string
        classifier:
          type: string
        version:
          type: string
        uri:
          format: uri
          type: string
      required:
      - artifactId
      - classifier
      - extension
      - groupId
      - uri
      - version
      type: object
    PluginArtifactMetadata:
      example:
        lastModifiedTime: 6
        size: 0
        creationTime: 1
        name: name
        uri: https://openapi-generator.tech
      properties:
        uri:
          format: uri
          type: string
        name:
          type: string
        size:
          format: int64
          type: integer
        lastModifiedTime:
          format: int64
          type: integer
        creationTime:
          format: int64
          type: integer
      required:
      - creationTime
      - lastModifiedTime
      - name
      - size
      - uri
      type: object
    PluginController.ApiPluginVersions:
      example:
        versions:
        - versions
        - versions
        type: type
      properties:
        type:
          type: string
        versions:
          items:
            type: string
          type: array
      required:
      - type
      - versions
      type: object
    PluginDefault:
      example:
        forced: true
        values:
          key: "{}"
        type: type
      properties:
        type:
          type: string
        forced:
          type: boolean
        values:
          additionalProperties:
            type: object
          type: object
      required:
      - forced
      - type
      - values
      type: object
    PluginIcon:
      properties:
        name:
          type: string
        icon:
          type: string
        flowable:
          type: boolean
      type: object
    PluginSchema:
      example:
        outputs:
          key: "{}"
        definitions:
          key: "{}"
        properties:
          key: "{}"
      properties:
        properties:
          additionalProperties:
            type: object
          type: object
        outputs:
          additionalProperties:
            type: object
          type: object
        definitions:
          additionalProperties:
            type: object
          type: object
      type: object
    PluginSubGroup.PluginCategory:
      enum:
      - DATABASE
      - MESSAGING
      - SCRIPT
      - TRANSFORMATION
      - BATCH
      - ALERTING
      - CLOUD
      - STORAGE
      - OTHER
      - TOOL
      - AI
      - CORE
      - INGESTION
      - BI
      type: string
    Property_Boolean_:
      example:
        expression: expression
        value: true
      properties:
        expression:
          type: string
        value:
          type: boolean
      required:
      - expression
      type: object
    Property_Double_:
      example:
        expression: expression
        value: 0.8008281904610115
      properties:
        expression:
          type: string
        value:
          format: double
          type: number
      required:
      - expression
      type: object
    Property_Duration_:
      example:
        expression: expression
        value: value
      properties:
        expression:
          type: string
        value:
          type: string
      required:
      - expression
      type: object
    Property_List_String__:
      example:
        expression: expression
        value:
        - value
        - value
      properties:
        expression:
          type: string
        value:
          items:
            type: string
          type: array
      required:
      - expression
      type: object
    Property_Object_:
      example:
        expression: expression
        value: "{}"
      properties:
        expression:
          type: string
        value:
          type: object
      required:
      - expression
      type: object
    Property_String_:
      example:
        expression: expression
        value: value
      properties:
        expression:
          type: string
        value:
          type: string
      required:
      - expression
      type: object
    QueryFilter:
      example:
        field: QUERY
        operation: EQUALS
        value: "{}"
      properties:
        field:
          $ref: "#/components/schemas/QueryFilter.Field"
        operation:
          $ref: "#/components/schemas/QueryFilter.Op"
        value:
          type: object
      required:
      - field
      - operation
      - value
      type: object
    QueryFilter.Field:
      enum:
      - QUERY
      - SCOPE
      - NAMESPACE
      - LABELS
      - FLOW_ID
      - START_DATE
      - END_DATE
      - STATE
      - TIME_RANGE
      - TRIGGER_EXECUTION_ID
      - TRIGGER_ID
      - EXECUTION_ID
      - CHILD_FILTER
      - WORKER_ID
      - EXISTING_ONLY
      - MIN_LEVEL
      type: string
      x-type: String
    QueryFilter.FieldOp:
      example:
        operations:
        - name: name
          value: value
        - name: name
          value: value
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
        operations:
          items:
            $ref: "#/components/schemas/QueryFilter.Operation"
          type: array
      required:
      - name
      - operations
      - value
      type: object
    QueryFilter.Op:
      enum:
      - EQUALS
      - NOT_EQUALS
      - GREATER_THAN
      - LESS_THAN
      - GREATER_THAN_OR_EQUAL_TO
      - LESS_THAN_OR_EQUAL_TO
      - IN
      - NOT_IN
      - STARTS_WITH
      - ENDS_WITH
      - CONTAINS
      - REGEX
      - PREFIX
      type: string
    QueryFilter.Operation:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
      required:
      - name
      - value
      type: object
    QueryFilter.ResourceField:
      example:
        name: name
        fields:
        - operations:
          - name: name
            value: value
          - name: name
            value: value
          name: name
          value: value
        - operations:
          - name: name
            value: value
          - name: name
            value: value
          name: name
          value: value
      properties:
        name:
          type: string
        fields:
          items:
            $ref: "#/components/schemas/QueryFilter.FieldOp"
          type: array
      required:
      - fields
      - name
      type: object
    RBACService.RoleAssignment.RoleOrigin:
      enum:
      - BINDING
      - GROUP
      type: string
    Relation:
      example:
        relationType: SEQUENTIAL
        value: value
      properties:
        relationType:
          $ref: "#/components/schemas/RelationType"
        value:
          type: string
      required:
      - relationType
      - value
      type: object
    RelationType:
      enum:
      - SEQUENTIAL
      - CHOICE
      - ERROR
      - FINALLY
      - AFTER_EXECUTION
      - PARALLEL
      - DYNAMIC
      type: string
    ResourceType:
      allOf:
      - $ref: "#/components/schemas/ScimResourceWithOptionalId"
      - $ref: "#/components/schemas/ScimResource"
      - $ref: "#/components/schemas/BaseResource_ScimResource_"
      - properties:
          id:
            type: string
          name:
            minLength: 1
            type: string
          description:
            type: string
          endpoint:
            minLength: 1
            type: string
          schemaUrn:
            minLength: 1
            type: string
          schemaExtensions:
            items:
              $ref: "#/components/schemas/ResourceType.SchemaExtensionConfiguration"
            type: array
        type: object
      type: object
    ResourceType.SchemaExtensionConfiguration:
      properties:
        schemaUrn:
          minLength: 1
          type: string
        required:
          type: boolean
      type: object
    ResourceType_1:
      enum:
      - AUDITLOG
      - APP
      - APP_EXECUTION
      - BINDING
      - DASHBOARD
      - EXECUTION
      - FLOW
      - GROUP
      - INVITATION
      - NAMESPACE
      - ROLE
      - SECURITY_INTEGRATION
      - SECRET
      - SETTING
      - TEMPLATE
      - TENANT
      - TENANT_ACCESS
      - TESTSUITE
      - TESTSUITE_RUN
      - VERSIONED_PLUGIN
      - USER
      - WORKER_GROUP
      - INSTANCE
      - UNKNOWN
      type: string
    RightSidebarConfiguration:
      example:
        customLinks:
          key:
            title: title
            url: url
      properties:
        customLinks:
          additionalProperties:
            $ref: "#/components/schemas/RightSidebarConfiguration.CustomLink"
          type: object
      type: object
    RightSidebarConfiguration.CustomLink:
      example:
        title: title
        url: url
      properties:
        title:
          type: string
        url:
          type: string
      required:
      - title
      - url
      type: object
    Role:
      example:
        isDefault: true
        deleted: true
        permissions:
          NAMESPACE:
          - NAMESPACE
          - NAMESPACE
          APPEXECUTION:
          - APPEXECUTION
          - APPEXECUTION
          APP:
          - APP
          - APP
          TENANT_ACCESS:
          - TENANT_ACCESS
          - TENANT_ACCESS
          SERVICE_ACCOUNT:
          - SERVICE_ACCOUNT
          - SERVICE_ACCOUNT
          BLUEPRINT:
          - BLUEPRINT
          - BLUEPRINT
          EXECUTION:
          - EXECUTION
          - EXECUTION
          USER:
          - USER
          - USER
          FLOW:
          - FLOW
          - FLOW
          GROUP_MEMBERSHIP:
          - GROUP_MEMBERSHIP
          - GROUP_MEMBERSHIP
          ROLE:
          - ROLE
          - ROLE
          INVITATION:
          - INVITATION
          - INVITATION
          GROUP:
          - GROUP
          - GROUP
          TEST:
          - TEST
          - TEST
          DASHBOARD:
          - DASHBOARD
          - DASHBOARD
          IMPERSONATE:
          - IMPERSONATE
          - IMPERSONATE
          TEMPLATE:
          - TEMPLATE
          - TEMPLATE
          AUDITLOG:
          - AUDITLOG
          - AUDITLOG
          SETTING:
          - SETTING
          - SETTING
          INFRASTRUCTURE:
          - INFRASTRUCTURE
          - INFRASTRUCTURE
          KVSTORE:
          - KVSTORE
          - KVSTORE
          UNKNOWN:
          - UNKNOWN
          - UNKNOWN
          BINDING:
          - BINDING
          - BINDING
          SECRET:
          - SECRET
          - SECRET
        name: name
        description: description
        id: id
        isManaged: true
      properties:
        isManaged:
          type: boolean
        permissions:
          $ref: "#/components/schemas/IAMRoleController_ApiRoleCreateOrUpdateRequest_permissions"
        id:
          type: string
        name:
          type: string
        description:
          type: string
        isDefault:
          type: boolean
        deleted:
          type: boolean
      required:
      - deleted
      - description
      - id
      - isDefault
      - isManaged
      - name
      - permissions
      type: object
    RoleUsage:
      example:
        count: 2
      properties:
        count:
          format: int64
          type: integer
      type: object
    SLA:
      example:
        id: id
        type: MAX_DURATION
        behavior: FAIL
        labels:
        - FlowWithSource_allOf_labels
        - FlowWithSource_allOf_labels
      properties:
        id:
          minLength: 1
          type: string
        type:
          $ref: "#/components/schemas/SLA.Type"
        behavior:
          $ref: "#/components/schemas/SLA.Behavior"
        labels:
          $ref: "#/components/schemas/FlowWithSource_allOf_labels"
      required:
      - behavior
      - id
      - type
      type: object
    SLA.Behavior:
      enum:
      - FAIL
      - CANCEL
      - NONE
      type: string
    SLA.Type:
      enum:
      - MAX_DURATION
      - EXECUTION_ASSERTION
      type: string
    Schema:
      properties:
        attributes:
          items:
            $ref: "#/components/schemas/Schema.Attribute"
          maxItems: 65535
          minItems: 1
          type: array
        id:
          maxLength: 65535
          minLength: 1
          type: string
        name:
          type: string
        description:
          type: string
        meta:
          $ref: "#/components/schemas/Meta"
      required:
      - id
      type: object
    Schema.Attribute:
      properties:
        attributes:
          items:
            $ref: "#/components/schemas/Schema.Attribute"
          type: array
        urn:
          type: string
        name:
          pattern: "\\p{Alpha}(-|_|\\p{Alnum})*"
          type: string
        type:
          $ref: "#/components/schemas/Schema.Attribute.Type"
        subAttributes:
          items:
            $ref: "#/components/schemas/Schema.Attribute"
          type: array
        multiValued:
          type: boolean
        description:
          type: string
        required:
          type: boolean
        canonicalValues:
          items:
            type: string
          type: array
        caseExact:
          type: boolean
        mutability:
          $ref: "#/components/schemas/Schema.Attribute.Mutability"
        returned:
          $ref: "#/components/schemas/Schema.Attribute.Returned"
        uniqueness:
          $ref: "#/components/schemas/Schema.Attribute.Uniqueness"
        referenceTypes:
          items:
            type: string
          type: array
        accessor:
          type: object
        scimResourceIdReference:
          type: boolean
      type: object
    Schema.Attribute.Mutability:
      enum:
      - IMMUTABLE
      - READ_ONLY
      - READ_WRITE
      - WRITE_ONLY
      type: string
    Schema.Attribute.Returned:
      enum:
      - ALWAYS
      - DEFAULT
      - NEVER
      - REQUEST
      type: string
    Schema.Attribute.Type:
      enum:
      - BINARY
      - BOOLEAN
      - COMPLEX
      - DATE_TIME
      - DECIMAL
      - INTEGER
      - REFERENCE
      - STRING
      type: string
    Schema.Attribute.Uniqueness:
      enum:
      - GLOBAL
      - NONE
      - SERVER
      type: string
    Schema.AttributeAccessor:
      type: object
    SchemaType:
      enum:
      - FLOW
      - TEMPLATE
      - TASK
      - TRIGGER
      - PLUGINDEFAULT
      - APPS
      - TESTSUITES
      - DASHBOARD
      type: string
    ScimExtension:
      properties:
        urn:
          type: string
      type: object
    ScimResource:
      allOf:
      - $ref: "#/components/schemas/BaseResource_ScimResource_"
      - properties:
          baseUrn:
            type: string
          extensions:
            additionalProperties:
              $ref: "#/components/schemas/ScimExtension"
            type: object
          meta:
            $ref: "#/components/schemas/Meta"
          id:
            minLength: 1
            type: string
          externalId:
            type: string
          resourceType:
            type: string
        type: object
      required:
      - meta
      - resourceType
      type: object
    ScimResourceWithOptionalId:
      allOf:
      - $ref: "#/components/schemas/ScimResource"
      - $ref: "#/components/schemas/BaseResource_ScimResource_"
      - properties:
          id:
            type: string
        type: object
      type: object
    ScimUser:
      allOf:
      - $ref: "#/components/schemas/ScimResource"
      - $ref: "#/components/schemas/BaseResource_ScimResource_"
      - properties:
          primaryEmailAddress:
            allOf:
            - $ref: "#/components/schemas/Email"
            nullable: true
          active:
            type: boolean
          emails:
            items:
              $ref: "#/components/schemas/Email"
            type: array
          userName:
            type: string
          name:
            $ref: "#/components/schemas/Name"
          groups:
            items:
              $ref: "#/components/schemas/UserGroup"
            type: array
        type: object
      description: Scim core schema.
      type: object
    SearchRequest:
      allOf:
      - $ref: "#/components/schemas/BaseResource_SearchRequest_"
      - properties:
          pageRequest:
            $ref: "#/components/schemas/PageRequest"
          sortRequest:
            $ref: "#/components/schemas/SortRequest"
          attributes:
            items:
              $ref: "#/components/schemas/AttributeReference"
            type: array
          excludedAttributes:
            items:
              $ref: "#/components/schemas/AttributeReference"
            type: array
          filter:
            $ref: "#/components/schemas/Filter"
          sortBy:
            $ref: "#/components/schemas/AttributeReference"
          sortOrder:
            $ref: "#/components/schemas/SortOrder"
          startIndex:
            format: int32
            type: integer
          count:
            format: int32
            type: integer
        type: object
      type: object
    SearchResult_Flow_:
      example:
        model:
          outputs:
          - displayName: displayName
            description: description
            id: id
            type: STRING
            value: "{}"
            required: true
          - displayName: displayName
            description: description
            id: id
            type: STRING
            value: "{}"
            required: true
          variables:
            key: "{}"
          listeners:
          - description: description
            conditions:
            - type: type
            - type: type
            tasks:
            - taskCache:
                ttl: ttl
                enabled: true
              description: description
              type: type
              logToFile: true
              version: version
              timeout:
                expression: expression
                value: value
              allowWarning: true
              allowFailure: true
              logLevel: ERROR
              runIf: runIf
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              retry: "{}"
            - taskCache:
                ttl: ttl
                enabled: true
              description: description
              type: type
              logToFile: true
              version: version
              timeout:
                expression: expression
                value: value
              allowWarning: true
              allowFailure: true
              logLevel: ERROR
              runIf: runIf
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              retry: "{}"
          - description: description
            conditions:
            - type: type
            - type: type
            tasks:
            - taskCache:
                ttl: ttl
                enabled: true
              description: description
              type: type
              logToFile: true
              version: version
              timeout:
                expression: expression
                value: value
              allowWarning: true
              allowFailure: true
              logLevel: ERROR
              runIf: runIf
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              retry: "{}"
            - taskCache:
                ttl: ttl
                enabled: true
              description: description
              type: type
              logToFile: true
              version: version
              timeout:
                expression: expression
                value: value
              allowWarning: true
              allowFailure: true
              logLevel: ERROR
              runIf: runIf
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              retry: "{}"
          inputs:
          - dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          - dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          finally:
          - taskCache:
              ttl: ttl
              enabled: true
            description: description
            type: type
            logToFile: true
            version: version
            timeout:
              expression: expression
              value: value
            allowWarning: true
            allowFailure: true
            logLevel: ERROR
            runIf: runIf
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            retry: "{}"
          - taskCache:
              ttl: ttl
              enabled: true
            description: description
            type: type
            logToFile: true
            version: version
            timeout:
              expression: expression
              value: value
            allowWarning: true
            allowFailure: true
            logLevel: ERROR
            runIf: runIf
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            retry: "{}"
          description: description
          sla:
          - id: id
            type: MAX_DURATION
            behavior: FAIL
            labels:
            - FlowWithSource_allOf_labels
            - FlowWithSource_allOf_labels
          - id: id
            type: MAX_DURATION
            behavior: FAIL
            labels:
            - FlowWithSource_allOf_labels
            - FlowWithSource_allOf_labels
          afterExecution:
          - taskCache:
              ttl: ttl
              enabled: true
            description: description
            type: type
            logToFile: true
            version: version
            timeout:
              expression: expression
              value: value
            allowWarning: true
            allowFailure: true
            logLevel: ERROR
            runIf: runIf
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            retry: "{}"
          - taskCache:
              ttl: ttl
              enabled: true
            description: description
            type: type
            logToFile: true
            version: version
            timeout:
              expression: expression
              value: value
            allowWarning: true
            allowFailure: true
            logLevel: ERROR
            runIf: runIf
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            retry: "{}"
          triggers:
          - minLogLevel: ""
            stopAfter:
            - CREATED
            - CREATED
            description: description
            type: type
            logToFile: true
            version: version
            labels:
            - The_labels_to_pass_to_the_execution_created_
            - The_labels_to_pass_to_the_execution_created_
            failOnTriggerError: true
            logLevel: null
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            conditions:
            - type: type
            - type: type
          - minLogLevel: ""
            stopAfter:
            - CREATED
            - CREATED
            description: description
            type: type
            logToFile: true
            version: version
            labels:
            - The_labels_to_pass_to_the_execution_created_
            - The_labels_to_pass_to_the_execution_created_
            failOnTriggerError: true
            logLevel: null
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            conditions:
            - type: type
            - type: type
          pluginDefaults:
          - forced: true
            values:
              key: "{}"
            type: type
          - forced: true
            values:
              key: "{}"
            type: type
          revision: 1
          labels:
          - Flow_allOf_labels
          - Flow_allOf_labels
          concurrency:
            limit: 1
            behavior: QUEUE
          deleted: true
          taskDefaults:
          - forced: true
            values:
              key: "{}"
            type: type
          - forced: true
            values:
              key: "{}"
            type: type
          namespace: namespace
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          tasks:
          - taskCache:
              ttl: ttl
              enabled: true
            description: description
            type: type
            logToFile: true
            version: version
            timeout:
              expression: expression
              value: value
            allowWarning: true
            allowFailure: true
            logLevel: ERROR
            runIf: runIf
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            retry: "{}"
          - taskCache:
              ttl: ttl
              enabled: true
            description: description
            type: type
            logToFile: true
            version: version
            timeout:
              expression: expression
              value: value
            allowWarning: true
            allowFailure: true
            logLevel: ERROR
            runIf: runIf
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            retry: "{}"
          errors:
          - taskCache:
              ttl: ttl
              enabled: true
            description: description
            type: type
            logToFile: true
            version: version
            timeout:
              expression: expression
              value: value
            allowWarning: true
            allowFailure: true
            logLevel: ERROR
            runIf: runIf
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            retry: "{}"
          - taskCache:
              ttl: ttl
              enabled: true
            description: description
            type: type
            logToFile: true
            version: version
            timeout:
              expression: expression
              value: value
            allowWarning: true
            allowFailure: true
            logLevel: ERROR
            runIf: runIf
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            retry: "{}"
          retry: null
        fragments:
        - fragments
        - fragments
      properties:
        model:
          $ref: "#/components/schemas/Flow"
        fragments:
          items:
            type: string
          type: array
      required:
      - fragments
      - model
      type: object
    SecurityIntegration.Type:
      enum:
      - SCIM
      type: string
    ServerConfig:
      example:
        terminationGracePeriod: 5m
        workerTaskRestartStrategy: ""
        liveness:
          heartbeatInterval: 3s
          interval: 5s
          initialDelay: 45s
          enabled: true
          timeout: 45s
      properties:
        workerTaskRestartStrategy:
          allOf:
          - $ref: "#/components/schemas/WorkerTaskRestartStrategy"
          nullable: true
        terminationGracePeriod:
          default: 5m
          type: string
        liveness:
          $ref: "#/components/schemas/ServerConfig.Liveness"
      required:
      - liveness
      - terminationGracePeriod
      type: object
    ServerConfig.Liveness:
      example:
        heartbeatInterval: 3s
        interval: 5s
        initialDelay: 45s
        enabled: true
        timeout: 45s
      properties:
        enabled:
          default: true
          type: boolean
        interval:
          default: 5s
          type: string
        timeout:
          default: 45s
          type: string
        initialDelay:
          default: 45s
          type: string
        heartbeatInterval:
          default: 3s
          type: string
      required:
      - enabled
      - heartbeatInterval
      - initialDelay
      - interval
      - timeout
      type: object
    ServerInstance:
      example:
        hostname: hostname
        id: id
        metrics:
        - baseUnit: baseUnit
          name: name
          description: description
          type: type
          value: "{}"
          tags:
          - value: value
            key: key
          - value: value
            key: key
        - baseUnit: baseUnit
          name: name
          description: description
          type: type
          value: "{}"
          tags:
          - value: value
            key: key
          - value: value
            key: key
        type: SERVER
        version: version
        props:
          key: "{}"
      properties:
        id:
          type: string
        type:
          $ref: "#/components/schemas/ServerInstance.Type"
        version:
          type: string
        hostname:
          type: string
        props:
          additionalProperties:
            type: object
          type: object
        metrics:
          items:
            $ref: "#/components/schemas/Metric"
          type: array
      required:
      - hostname
      - id
      - metrics
      - props
      - type
      - version
      type: object
    ServerInstance.Type:
      enum:
      - SERVER
      - STANDALONE
      type: string
    Service.ServiceState:
      enum:
      - CREATED
      - RUNNING
      - ERROR
      - DISCONNECTED
      - TERMINATING
      - TERMINATED_GRACEFULLY
      - TERMINATED_FORCED
      - NOT_RUNNING
      - INACTIVE
      - MAINTENANCE
      type: string
    ServiceInstance:
      example:
        server:
          hostname: hostname
          id: id
          metrics:
          - baseUnit: baseUnit
            name: name
            description: description
            type: type
            value: "{}"
            tags:
            - value: value
              key: key
            - value: value
              key: key
          - baseUnit: baseUnit
            name: name
            description: description
            type: type
            value: "{}"
            tags:
            - value: value
              key: key
            - value: value
              key: key
          type: SERVER
          version: version
          props:
            key: "{}"
        createdAt: 2000-01-23T04:56:07.000+00:00
        metrics:
        - baseUnit: baseUnit
          name: name
          description: description
          type: type
          value: "{}"
          tags:
          - value: value
            key: key
          - value: value
            key: key
        - baseUnit: baseUnit
          name: name
          description: description
          type: type
          value: "{}"
          tags:
          - value: value
            key: key
          - value: value
            key: key
        state: CREATED
        id: id
        type: EXECUTOR
        config:
          terminationGracePeriod: 5m
          workerTaskRestartStrategy: ""
          liveness:
            heartbeatInterval: 3s
            interval: 5s
            initialDelay: 45s
            enabled: true
            timeout: 45s
        events:
        - state: null
          type: type
          value: value
          ts: 2000-01-23T04:56:07.000+00:00
        - state: null
          type: type
          value: value
          ts: 2000-01-23T04:56:07.000+00:00
        seqId: 0
        updatedAt: 2000-01-23T04:56:07.000+00:00
        props:
          key: "{}"
      properties:
        server:
          $ref: "#/components/schemas/ServerInstance"
        metrics:
          items:
            $ref: "#/components/schemas/Metric"
          type: array
        state:
          $ref: "#/components/schemas/Service.ServiceState"
        id:
          type: string
        type:
          $ref: "#/components/schemas/ServiceType"
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        events:
          items:
            $ref: "#/components/schemas/ServiceInstance.TimestampedEvent"
          type: array
        config:
          $ref: "#/components/schemas/ServerConfig"
        props:
          additionalProperties:
            type: object
          type: object
        seqId:
          format: int64
          type: integer
      required:
      - config
      - createdAt
      - events
      - id
      - metrics
      - props
      - seqId
      - server
      - state
      - type
      - updatedAt
      type: object
    ServiceInstance.TimestampedEvent:
      example:
        state: null
        type: type
        value: value
        ts: 2000-01-23T04:56:07.000+00:00
      properties:
        ts:
          format: date-time
          type: string
        value:
          type: string
        type:
          type: string
        state:
          $ref: "#/components/schemas/Service.ServiceState"
      required:
      - state
      - ts
      - type
      - value
      type: object
    ServiceProviderConfiguration:
      allOf:
      - $ref: "#/components/schemas/ScimResourceWithOptionalId"
      - $ref: "#/components/schemas/ScimResource"
      - $ref: "#/components/schemas/BaseResource_ScimResource_"
      - properties:
          id:
            type: string
          documentationUrl:
            type: string
          patch:
            $ref: "#/components/schemas/ServiceProviderConfiguration.SupportedConfiguration"
          bulk:
            $ref: "#/components/schemas/ServiceProviderConfiguration.BulkConfiguration"
          filter:
            $ref: "#/components/schemas/ServiceProviderConfiguration.FilterConfiguration"
          changePassword:
            $ref: "#/components/schemas/ServiceProviderConfiguration.SupportedConfiguration"
          sort:
            $ref: "#/components/schemas/ServiceProviderConfiguration.SupportedConfiguration"
          etag:
            $ref: "#/components/schemas/ServiceProviderConfiguration.SupportedConfiguration"
          authenticationSchemes:
            items:
              $ref: "#/components/schemas/ServiceProviderConfiguration.AuthenticationSchema"
            type: array
        type: object
      type: object
    ServiceProviderConfiguration.AuthenticationSchema:
      properties:
        type:
          $ref: "#/components/schemas/ServiceProviderConfiguration.AuthenticationSchema.Type"
        name:
          type: string
        description:
          type: string
        specUri:
          type: string
        documentationUri:
          type: string
      type: object
    ServiceProviderConfiguration.AuthenticationSchema.Type:
      enum:
      - OAUTH
      - OAUTH2
      - OAUTH_BEARER
      - HTTP_BASIC
      - HTTP_DIGEST
      type: string
    ServiceProviderConfiguration.BulkConfiguration:
      allOf:
      - $ref: "#/components/schemas/ServiceProviderConfiguration.SupportedConfiguration"
      - properties:
          maxOperations:
            format: int32
            type: integer
          maxPayloadSize:
            format: int32
            type: integer
        type: object
      type: object
    ServiceProviderConfiguration.FilterConfiguration:
      allOf:
      - $ref: "#/components/schemas/ServiceProviderConfiguration.SupportedConfiguration"
      - properties:
          maxResults:
            format: int32
            type: integer
        type: object
      type: object
    ServiceProviderConfiguration.SupportedConfiguration:
      properties:
        supported:
          type: boolean
      type: object
    ServiceType:
      enum:
      - EXECUTOR
      - INDEXER
      - SCHEDULER
      - WEBSERVER
      - WORKER
      - INVALID
      type: string
    SetupConfiguration:
      example:
        secretType: secretType
        repositoryType: repositoryType
        queueType: queueType
        storageType: storageType
        done: true
        passwordRegexp: passwordRegexp
      properties:
        done:
          type: boolean
        repositoryType:
          type: string
        queueType:
          type: string
        storageType:
          type: string
        secretType:
          type: string
        passwordRegexp:
          type: string
      required:
      - done
      - passwordRegexp
      type: object
    SetupConfiguration.SetupData:
      properties:
        username:
          type: string
        password:
          type: string
        tenant:
          $ref: "#/components/schemas/Tenant"
      required:
      - password
      - tenant
      - username
      type: object
    SortOrder:
      enum:
      - ASCENDING
      - DESCENDING
      type: string
    SortRequest:
      properties:
        sortBy:
          $ref: "#/components/schemas/AttributeReference"
        sortOrder:
          $ref: "#/components/schemas/SortOrder"
      type: object
    State:
      example:
        duration: duration
        current: CREATED
        endDate: 2000-01-23T04:56:07.000+00:00
        histories:
        - date: 2000-01-23T04:56:07.000+00:00
          state: null
        - date: 2000-01-23T04:56:07.000+00:00
          state: null
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        duration:
          readOnly: true
          type: string
        startDate:
          format: date-time
          readOnly: true
          type: string
        endDate:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        current:
          $ref: "#/components/schemas/State.Type"
        histories:
          items:
            $ref: "#/components/schemas/State.History"
          type: array
      required:
      - current
      type: object
    State.History:
      example:
        date: 2000-01-23T04:56:07.000+00:00
        state: null
      properties:
        state:
          $ref: "#/components/schemas/State.Type"
        date:
          format: date-time
          type: string
      required:
      - date
      - state
      type: object
    State.Type:
      enum:
      - CREATED
      - RUNNING
      - PAUSED
      - RESTARTED
      - KILLING
      - SUCCESS
      - WARNING
      - FAILED
      - KILLED
      - CANCELLED
      - QUEUED
      - RETRYING
      - RETRIED
      - SKIPPED
      - BREAKPOINT
      type: string
    Task:
      example:
        taskCache:
          ttl: ttl
          enabled: true
        description: description
        type: type
        logToFile: true
        version: version
        timeout:
          expression: expression
          value: value
        allowWarning: true
        allowFailure: true
        logLevel: ERROR
        runIf: runIf
        disabled: true
        id: id
        workerGroup:
          fallback: FAIL
          key: key
        retry: "{}"
      properties:
        id:
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_-]*"
          type: string
          x-size-message: Task id must be at most 256 characters
        type:
          minLength: 1
          pattern: "\\p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*(\\.\\\
            p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*)*"
          title: The class name of this task.
          type: string
        version:
          pattern: "\\d+\\.\\d+\\.\\d+(-[a-zA-Z0-9-]+)?|([a-zA-Z0-9]+)"
          title: The version of the plugin to use.
          type: string
        description:
          type: string
        retry:
          type: object
        timeout:
          $ref: "#/components/schemas/Property_Duration_"
        disabled:
          type: boolean
        workerGroup:
          $ref: "#/components/schemas/WorkerGroup"
        logLevel:
          $ref: "#/components/schemas/Level"
        allowFailure:
          type: boolean
        logToFile:
          type: boolean
        runIf:
          type: string
        allowWarning:
          type: boolean
        taskCache:
          $ref: "#/components/schemas/Cache"
      required:
      - id
      - type
      type: object
    TaskFixture:
      example:
        outputs:
          key: "{}"
        description:
          expression: expression
          value: value
        id: id
        state: null
        value: value
      properties:
        id:
          type: string
        value:
          type: string
        state:
          $ref: "#/components/schemas/State.Type"
        outputs:
          additionalProperties:
            type: object
          type: object
        description:
          $ref: "#/components/schemas/Property_String_"
      required:
      - id
      type: object
    TaskForExecution:
      example:
        inputs:
        - dependsOn: ""
          defaults: ""
          displayName: displayName
          name: name
          description: description
          id: id
          type: ""
          required: true
        - dependsOn: ""
          defaults: ""
          displayName: displayName
          name: name
          description: description
          id: id
          type: ""
          required: true
        subflowId:
          namespace: namespace
          flowId: flowId
          revision: 1
        id: id
        type: type
        version: version
        tasks:
        - null
        - null
      properties:
        id:
          minLength: 1
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_-]*"
          type: string
        type:
          minLength: 1
          pattern: "\\p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*(\\.\\\
            p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*)*"
          title: The class name of this task.
          type: string
        version:
          pattern: "\\d+\\.\\d+\\.\\d+(-[a-zA-Z0-9-]+)?|([a-zA-Z0-9]+)"
          title: The version of the plugin to use.
          type: string
        tasks:
          items:
            $ref: "#/components/schemas/TaskForExecution"
          type: array
        inputs:
          items:
            $ref: "#/components/schemas/Input_Object_"
          type: array
        subflowId:
          $ref: "#/components/schemas/ExecutableTask.SubflowId"
      required:
      - id
      - type
      type: object
    TaskRun:
      example:
        outputs:
          key: "{}"
        parentTaskRunId: parentTaskRunId
        executionId: executionId
        forceExecution: true
        namespace: namespace
        iteration: 6
        dynamic: true
        id: id
        state:
          duration: duration
          current: CREATED
          endDate: 2000-01-23T04:56:07.000+00:00
          histories:
          - date: 2000-01-23T04:56:07.000+00:00
            state: null
          - date: 2000-01-23T04:56:07.000+00:00
            state: null
          startDate: 2000-01-23T04:56:07.000+00:00
        items: items
        flowId: flowId
        value: value
        taskId: taskId
        attempts:
        - workerId: workerId
          logFile: https://openapi-generator.tech
          metrics:
          - name: name
            description: description
            type: type
            value: "{}"
            tags:
              key: tags
            timestamp: 2000-01-23T04:56:07.000+00:00
          - name: name
            description: description
            type: type
            value: "{}"
            tags:
              key: tags
            timestamp: 2000-01-23T04:56:07.000+00:00
          state:
            duration: duration
            current: CREATED
            endDate: 2000-01-23T04:56:07.000+00:00
            histories:
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            startDate: 2000-01-23T04:56:07.000+00:00
        - workerId: workerId
          logFile: https://openapi-generator.tech
          metrics:
          - name: name
            description: description
            type: type
            value: "{}"
            tags:
              key: tags
            timestamp: 2000-01-23T04:56:07.000+00:00
          - name: name
            description: description
            type: type
            value: "{}"
            tags:
              key: tags
            timestamp: 2000-01-23T04:56:07.000+00:00
          state:
            duration: duration
            current: CREATED
            endDate: 2000-01-23T04:56:07.000+00:00
            histories:
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        items:
          deprecated: true
          type: string
        id:
          type: string
        executionId:
          type: string
        namespace:
          type: string
        flowId:
          type: string
        taskId:
          type: string
        parentTaskRunId:
          type: string
        value:
          type: string
        attempts:
          items:
            $ref: "#/components/schemas/TaskRunAttempt"
          type: array
        outputs:
          additionalProperties:
            type: object
          type: object
        state:
          $ref: "#/components/schemas/State"
        iteration:
          format: int32
          type: integer
        dynamic:
          type: boolean
        forceExecution:
          nullable: true
          type: boolean
      required:
      - attempts
      - dynamic
      - executionId
      - flowId
      - id
      - iteration
      - namespace
      - outputs
      - parentTaskRunId
      - state
      - taskId
      - value
      type: object
    TaskRunAttempt:
      example:
        workerId: workerId
        logFile: https://openapi-generator.tech
        metrics:
        - name: name
          description: description
          type: type
          value: "{}"
          tags:
            key: tags
          timestamp: 2000-01-23T04:56:07.000+00:00
        - name: name
          description: description
          type: type
          value: "{}"
          tags:
            key: tags
          timestamp: 2000-01-23T04:56:07.000+00:00
        state:
          duration: duration
          current: CREATED
          endDate: 2000-01-23T04:56:07.000+00:00
          histories:
          - date: 2000-01-23T04:56:07.000+00:00
            state: null
          - date: 2000-01-23T04:56:07.000+00:00
            state: null
          startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        metrics:
          deprecated: true
          items:
            $ref: "#/components/schemas/AbstractMetricEntry_Object_"
          type: array
        state:
          $ref: "#/components/schemas/State"
        workerId:
          nullable: true
          type: string
        logFile:
          format: uri
          nullable: true
          type: string
      required:
      - state
      type: object
    Tenant:
      example:
        secretConfiguration:
          key: "{}"
        requireExistingNamespace: true
        storageIsolation:
          deniedServices:
          - EXECUTOR
          - EXECUTOR
          enabled: true
        secretReadOnly: true
        secretIsolation:
          deniedServices:
          - EXECUTOR
          - EXECUTOR
          enabled: true
        deleted: true
        storageConfiguration:
          key: "{}"
        secretType: secretType
        name: name
        storageType: storageType
        id: id
        workerGroup:
          fallback: FAIL
          key: key
        outputsInInternalStorage: true
      properties:
        storageIsolation:
          $ref: "#/components/schemas/Isolation"
        secretIsolation:
          $ref: "#/components/schemas/Isolation"
        id:
          pattern: "^[a-z0-9][a-z0-9_-]*"
          type: string
        name:
          type: string
        deleted:
          type: boolean
        workerGroup:
          $ref: "#/components/schemas/WorkerGroup"
        storageType:
          type: string
        storageConfiguration:
          additionalProperties:
            type: object
          type: object
        secretType:
          type: string
        secretReadOnly:
          type: boolean
        secretConfiguration:
          additionalProperties:
            type: object
          type: object
        requireExistingNamespace:
          type: boolean
        outputsInInternalStorage:
          type: boolean
      required:
      - deleted
      - id
      - name
      - outputsInInternalStorage
      - requireExistingNamespace
      - secretConfiguration
      - secretIsolation
      - secretReadOnly
      - secretType
      - storageConfiguration
      - storageIsolation
      - storageType
      - workerGroup
      type: object
    TenantInterface:
      properties:
        tenantId:
          type: string
      type: object
    TenantUsage:
      example:
        count: 7
      properties:
        count:
          format: int64
          type: integer
      type: object
    TestState:
      enum:
      - ERROR
      - SUCCESS
      - FAILED
      - SKIPPED
      type: string
    TestSuite:
      example:
        deleted: true
        testCases:
        - description: description
          disabled: true
          id: id
          assertions:
          - isNotNull:
              expression: expression
              value: true
            in:
              expression: expression
              value:
              - value
              - value
            errorMessage:
              expression: expression
              value: value
            equalTo:
              expression: expression
              value: "{}"
            greaterThanOrEqualTo:
              expression: expression
              value: 0.8008281904610115
            description:
              expression: expression
              value: value
            contains:
              expression: expression
              value: value
            lessThan:
              expression: expression
              value: 0.8008281904610115
            isNull:
              expression: expression
              value: true
            endsWith:
              expression: expression
              value: value
            notIn:
              expression: expression
              value:
              - value
              - value
            value:
              expression: expression
              value: "{}"
            taskId: taskId
            lessThanOrEqualTo:
              expression: expression
              value: 0.8008281904610115
            startsWith:
              expression: expression
              value: value
            notEqualTo:
              expression: expression
              value: "{}"
            greaterThan:
              expression: expression
              value: 0.8008281904610115
          - isNotNull:
              expression: expression
              value: true
            in:
              expression: expression
              value:
              - value
              - value
            errorMessage:
              expression: expression
              value: value
            equalTo:
              expression: expression
              value: "{}"
            greaterThanOrEqualTo:
              expression: expression
              value: 0.8008281904610115
            description:
              expression: expression
              value: value
            contains:
              expression: expression
              value: value
            lessThan:
              expression: expression
              value: 0.8008281904610115
            isNull:
              expression: expression
              value: true
            endsWith:
              expression: expression
              value: value
            notIn:
              expression: expression
              value:
              - value
              - value
            value:
              expression: expression
              value: "{}"
            taskId: taskId
            lessThanOrEqualTo:
              expression: expression
              value: 0.8008281904610115
            startsWith:
              expression: expression
              value: value
            notEqualTo:
              expression: expression
              value: "{}"
            greaterThan:
              expression: expression
              value: 0.8008281904610115
          type: type
          fixtures:
            inputs:
              key: ""
            files:
              key: files
            trigger:
              variables:
                key: "{}"
              id: id
              type: type
            tasks:
            - outputs:
                key: "{}"
              description:
                expression: expression
                value: value
              id: id
              state: null
              value: value
            - outputs:
                key: "{}"
              description:
                expression: expression
                value: value
              id: id
              state: null
              value: value
        - description: description
          disabled: true
          id: id
          assertions:
          - isNotNull:
              expression: expression
              value: true
            in:
              expression: expression
              value:
              - value
              - value
            errorMessage:
              expression: expression
              value: value
            equalTo:
              expression: expression
              value: "{}"
            greaterThanOrEqualTo:
              expression: expression
              value: 0.8008281904610115
            description:
              expression: expression
              value: value
            contains:
              expression: expression
              value: value
            lessThan:
              expression: expression
              value: 0.8008281904610115
            isNull:
              expression: expression
              value: true
            endsWith:
              expression: expression
              value: value
            notIn:
              expression: expression
              value:
              - value
              - value
            value:
              expression: expression
              value: "{}"
            taskId: taskId
            lessThanOrEqualTo:
              expression: expression
              value: 0.8008281904610115
            startsWith:
              expression: expression
              value: value
            notEqualTo:
              expression: expression
              value: "{}"
            greaterThan:
              expression: expression
              value: 0.8008281904610115
          - isNotNull:
              expression: expression
              value: true
            in:
              expression: expression
              value:
              - value
              - value
            errorMessage:
              expression: expression
              value: value
            equalTo:
              expression: expression
              value: "{}"
            greaterThanOrEqualTo:
              expression: expression
              value: 0.8008281904610115
            description:
              expression: expression
              value: value
            contains:
              expression: expression
              value: value
            lessThan:
              expression: expression
              value: 0.8008281904610115
            isNull:
              expression: expression
              value: true
            endsWith:
              expression: expression
              value: value
            notIn:
              expression: expression
              value:
              - value
              - value
            value:
              expression: expression
              value: "{}"
            taskId: taskId
            lessThanOrEqualTo:
              expression: expression
              value: 0.8008281904610115
            startsWith:
              expression: expression
              value: value
            notEqualTo:
              expression: expression
              value: "{}"
            greaterThan:
              expression: expression
              value: 0.8008281904610115
          type: type
          fixtures:
            inputs:
              key: ""
            files:
              key: files
            trigger:
              variables:
                key: "{}"
              id: id
              type: type
            tasks:
            - outputs:
                key: "{}"
              description:
                expression: expression
                value: value
              id: id
              state: null
              value: value
            - outputs:
                key: "{}"
              description:
                expression: expression
                value: value
              id: id
              state: null
              value: value
        namespace: namespace
        description: description
        disabled: true
        id: id
        source: source
        flowId: flowId
      properties:
        id:
          minLength: 1
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_-]*"
          type: string
        description:
          type: string
        namespace:
          maxLength: 150
          minLength: 1
          pattern: "^[a-z0-9][a-z0-9._-]*"
          type: string
        flowId:
          maxLength: 100
          minLength: 1
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9._-]*"
          type: string
        source:
          type: string
        testCases:
          items:
            $ref: "#/components/schemas/UnitTest"
          minItems: 1
          type: array
        deleted:
          type: boolean
        disabled:
          type: boolean
      required:
      - flowId
      - id
      - namespace
      - testCases
      type: object
    TestSuiteController.RunRequest:
      properties:
        testCases:
          items:
            type: string
          type: array
      required:
      - testCases
      type: object
    TestSuiteController.SearchTestsLastResult:
      properties:
        testSuiteIds:
          items:
            $ref: "#/components/schemas/TestSuiteController.TestSuiteApiId"
          type: array
      required:
      - testSuiteIds
      type: object
    TestSuiteController.TestSuiteApiId:
      properties:
        namespace:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
      required:
      - id
      - namespace
      type: object
    TestSuiteController.TestSuiteBulkRequest:
      properties:
        ids:
          items:
            $ref: "#/components/schemas/TestSuiteController.TestSuiteApiId"
          minItems: 1
          type: array
      required:
      - ids
      type: object
    TestSuiteController.TestsLastResultResponse:
      example:
        results:
        - endDate: 2000-01-23T04:56:07.000+00:00
          namespace: namespace
          id: id
          testSuiteId: testSuiteId
          state: ERROR
          flowId: flowId
          results:
          - executionId: executionId
            assertionResults:
            - actual: "{}"
              expected: "{}"
              errorMessage: errorMessage
              description: description
              operator: operator
              taskId: taskId
              isSuccess: true
            - actual: "{}"
              expected: "{}"
              errorMessage: errorMessage
              description: description
              operator: operator
              taskId: taskId
              isSuccess: true
            testType: testType
            testId: testId
            state: null
            url: https://openapi-generator.tech
            errors:
            - details: details
              message: message
            - details: details
              message: message
            fixtures:
              inputs:
                key: ""
              files:
                key: files
              trigger:
                variables:
                  key: "{}"
                id: id
                type: type
              tasks:
              - outputs:
                  key: "{}"
                description:
                  expression: expression
                  value: value
                id: id
                state: null
                value: value
              - outputs:
                  key: "{}"
                description:
                  expression: expression
                  value: value
                id: id
                state: null
                value: value
          - executionId: executionId
            assertionResults:
            - actual: "{}"
              expected: "{}"
              errorMessage: errorMessage
              description: description
              operator: operator
              taskId: taskId
              isSuccess: true
            - actual: "{}"
              expected: "{}"
              errorMessage: errorMessage
              description: description
              operator: operator
              taskId: taskId
              isSuccess: true
            testType: testType
            testId: testId
            state: null
            url: https://openapi-generator.tech
            errors:
            - details: details
              message: message
            - details: details
              message: message
            fixtures:
              inputs:
                key: ""
              files:
                key: files
              trigger:
                variables:
                  key: "{}"
                id: id
                type: type
              tasks:
              - outputs:
                  key: "{}"
                description:
                  expression: expression
                  value: value
                id: id
                state: null
                value: value
              - outputs:
                  key: "{}"
                description:
                  expression: expression
                  value: value
                id: id
                state: null
                value: value
          startDate: 2000-01-23T04:56:07.000+00:00
        - endDate: 2000-01-23T04:56:07.000+00:00
          namespace: namespace
          id: id
          testSuiteId: testSuiteId
          state: ERROR
          flowId: flowId
          results:
          - executionId: executionId
            assertionResults:
            - actual: "{}"
              expected: "{}"
              errorMessage: errorMessage
              description: description
              operator: operator
              taskId: taskId
              isSuccess: true
            - actual: "{}"
              expected: "{}"
              errorMessage: errorMessage
              description: description
              operator: operator
              taskId: taskId
              isSuccess: true
            testType: testType
            testId: testId
            state: null
            url: https://openapi-generator.tech
            errors:
            - details: details
              message: message
            - details: details
              message: message
            fixtures:
              inputs:
                key: ""
              files:
                key: files
              trigger:
                variables:
                  key: "{}"
                id: id
                type: type
              tasks:
              - outputs:
                  key: "{}"
                description:
                  expression: expression
                  value: value
                id: id
                state: null
                value: value
              - outputs:
                  key: "{}"
                description:
                  expression: expression
                  value: value
                id: id
                state: null
                value: value
          - executionId: executionId
            assertionResults:
            - actual: "{}"
              expected: "{}"
              errorMessage: errorMessage
              description: description
              operator: operator
              taskId: taskId
              isSuccess: true
            - actual: "{}"
              expected: "{}"
              errorMessage: errorMessage
              description: description
              operator: operator
              taskId: taskId
              isSuccess: true
            testType: testType
            testId: testId
            state: null
            url: https://openapi-generator.tech
            errors:
            - details: details
              message: message
            - details: details
              message: message
            fixtures:
              inputs:
                key: ""
              files:
                key: files
              trigger:
                variables:
                  key: "{}"
                id: id
                type: type
              tasks:
              - outputs:
                  key: "{}"
                description:
                  expression: expression
                  value: value
                id: id
                state: null
                value: value
              - outputs:
                  key: "{}"
                description:
                  expression: expression
                  value: value
                id: id
                state: null
                value: value
          startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        results:
          items:
            $ref: "#/components/schemas/TestSuiteRunResult"
          type: array
      required:
      - results
      type: object
    TestSuiteRunResult:
      example:
        endDate: 2000-01-23T04:56:07.000+00:00
        namespace: namespace
        id: id
        testSuiteId: testSuiteId
        state: ERROR
        flowId: flowId
        results:
        - executionId: executionId
          assertionResults:
          - actual: "{}"
            expected: "{}"
            errorMessage: errorMessage
            description: description
            operator: operator
            taskId: taskId
            isSuccess: true
          - actual: "{}"
            expected: "{}"
            errorMessage: errorMessage
            description: description
            operator: operator
            taskId: taskId
            isSuccess: true
          testType: testType
          testId: testId
          state: null
          url: https://openapi-generator.tech
          errors:
          - details: details
            message: message
          - details: details
            message: message
          fixtures:
            inputs:
              key: ""
            files:
              key: files
            trigger:
              variables:
                key: "{}"
              id: id
              type: type
            tasks:
            - outputs:
                key: "{}"
              description:
                expression: expression
                value: value
              id: id
              state: null
              value: value
            - outputs:
                key: "{}"
              description:
                expression: expression
                value: value
              id: id
              state: null
              value: value
        - executionId: executionId
          assertionResults:
          - actual: "{}"
            expected: "{}"
            errorMessage: errorMessage
            description: description
            operator: operator
            taskId: taskId
            isSuccess: true
          - actual: "{}"
            expected: "{}"
            errorMessage: errorMessage
            description: description
            operator: operator
            taskId: taskId
            isSuccess: true
          testType: testType
          testId: testId
          state: null
          url: https://openapi-generator.tech
          errors:
          - details: details
            message: message
          - details: details
            message: message
          fixtures:
            inputs:
              key: ""
            files:
              key: files
            trigger:
              variables:
                key: "{}"
              id: id
              type: type
            tasks:
            - outputs:
                key: "{}"
              description:
                expression: expression
                value: value
              id: id
              state: null
              value: value
            - outputs:
                key: "{}"
              description:
                expression: expression
                value: value
              id: id
              state: null
              value: value
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        testSuiteId:
          type: string
        namespace:
          type: string
        flowId:
          type: string
        state:
          $ref: "#/components/schemas/TestState"
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        results:
          items:
            $ref: "#/components/schemas/UnitTestResult"
          type: array
      required:
      - endDate
      - flowId
      - id
      - namespace
      - results
      - startDate
      - state
      - testSuiteId
      type: object
    TestSuiteService.RunByQueryRequest:
      example:
        namespace: namespace
        flowId: flowId
        includeChildNamespaces: true
      properties:
        namespace:
          nullable: true
          type: string
        flowId:
          nullable: true
          type: string
        includeChildNamespaces:
          default: true
          description: Should child namespaces be included or not
          type: boolean
      required:
      - flowId
      - includeChildNamespaces
      - namespace
      type: object
    TestSuiteService.TestRunByQueryResult:
      example:
        tenantId: tenantId
        numberOfTestSuitesToBeRun: 0
        numberOfTestCasesToBeRun: 6
        requestMade:
          namespace: namespace
          flowId: flowId
          includeChildNamespaces: true
        results:
        - endDate: 2000-01-23T04:56:07.000+00:00
          namespace: namespace
          id: id
          testSuiteId: testSuiteId
          state: ERROR
          flowId: flowId
          results:
          - executionId: executionId
            assertionResults:
            - actual: "{}"
              expected: "{}"
              errorMessage: errorMessage
              description: description
              operator: operator
              taskId: taskId
              isSuccess: true
            - actual: "{}"
              expected: "{}"
              errorMessage: errorMessage
              description: description
              operator: operator
              taskId: taskId
              isSuccess: true
            testType: testType
            testId: testId
            state: null
            url: https://openapi-generator.tech
            errors:
            - details: details
              message: message
            - details: details
              message: message
            fixtures:
              inputs:
                key: ""
              files:
                key: files
              trigger:
                variables:
                  key: "{}"
                id: id
                type: type
              tasks:
              - outputs:
                  key: "{}"
                description:
                  expression: expression
                  value: value
                id: id
                state: null
                value: value
              - outputs:
                  key: "{}"
                description:
                  expression: expression
                  value: value
                id: id
                state: null
                value: value
          - executionId: executionId
            assertionResults:
            - actual: "{}"
              expected: "{}"
              errorMessage: errorMessage
              description: description
              operator: operator
              taskId: taskId
              isSuccess: true
            - actual: "{}"
              expected: "{}"
              errorMessage: errorMessage
              description: description
              operator: operator
              taskId: taskId
              isSuccess: true
            testType: testType
            testId: testId
            state: null
            url: https://openapi-generator.tech
            errors:
            - details: details
              message: message
            - details: details
              message: message
            fixtures:
              inputs:
                key: ""
              files:
                key: files
              trigger:
                variables:
                  key: "{}"
                id: id
                type: type
              tasks:
              - outputs:
                  key: "{}"
                description:
                  expression: expression
                  value: value
                id: id
                state: null
                value: value
              - outputs:
                  key: "{}"
                description:
                  expression: expression
                  value: value
                id: id
                state: null
                value: value
          startDate: 2000-01-23T04:56:07.000+00:00
        - endDate: 2000-01-23T04:56:07.000+00:00
          namespace: namespace
          id: id
          testSuiteId: testSuiteId
          state: ERROR
          flowId: flowId
          results:
          - executionId: executionId
            assertionResults:
            - actual: "{}"
              expected: "{}"
              errorMessage: errorMessage
              description: description
              operator: operator
              taskId: taskId
              isSuccess: true
            - actual: "{}"
              expected: "{}"
              errorMessage: errorMessage
              description: description
              operator: operator
              taskId: taskId
              isSuccess: true
            testType: testType
            testId: testId
            state: null
            url: https://openapi-generator.tech
            errors:
            - details: details
              message: message
            - details: details
              message: message
            fixtures:
              inputs:
                key: ""
              files:
                key: files
              trigger:
                variables:
                  key: "{}"
                id: id
                type: type
              tasks:
              - outputs:
                  key: "{}"
                description:
                  expression: expression
                  value: value
                id: id
                state: null
                value: value
              - outputs:
                  key: "{}"
                description:
                  expression: expression
                  value: value
                id: id
                state: null
                value: value
          - executionId: executionId
            assertionResults:
            - actual: "{}"
              expected: "{}"
              errorMessage: errorMessage
              description: description
              operator: operator
              taskId: taskId
              isSuccess: true
            - actual: "{}"
              expected: "{}"
              errorMessage: errorMessage
              description: description
              operator: operator
              taskId: taskId
              isSuccess: true
            testType: testType
            testId: testId
            state: null
            url: https://openapi-generator.tech
            errors:
            - details: details
              message: message
            - details: details
              message: message
            fixtures:
              inputs:
                key: ""
              files:
                key: files
              trigger:
                variables:
                  key: "{}"
                id: id
                type: type
              tasks:
              - outputs:
                  key: "{}"
                description:
                  expression: expression
                  value: value
                id: id
                state: null
                value: value
              - outputs:
                  key: "{}"
                description:
                  expression: expression
                  value: value
                id: id
                state: null
                value: value
          startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        requestMade:
          $ref: "#/components/schemas/TestSuiteService.RunByQueryRequest"
        tenantId:
          type: string
        numberOfTestSuitesToBeRun:
          format: int32
          type: integer
        numberOfTestCasesToBeRun:
          format: int32
          type: integer
        results:
          items:
            $ref: "#/components/schemas/TestSuiteRunResult"
          type: array
      required:
      - numberOfTestCasesToBeRun
      - numberOfTestSuitesToBeRun
      - requestMade
      - results
      - tenantId
      type: object
    TimeWindow:
      example:
        default: default
        max: max
      properties:
        default:
          type: string
        max:
          type: string
      type: object
    Trigger:
      allOf:
      - $ref: "#/components/schemas/TriggerContext"
      - properties:
          executionId:
            nullable: true
            type: string
          updatedDate:
            format: date-time
            nullable: true
            type: string
          evaluateRunningDate:
            format: date-time
            nullable: true
            type: string
          workerId:
            nullable: true
            type: string
        type: object
      example:
        date: 2000-01-23T04:56:07.000+00:00
        workerId: workerId
        nextExecutionDate: 2000-01-23T04:56:07.000+00:00
        stopAfter:
        - CREATED
        - CREATED
        triggerId: triggerId
        updatedDate: 2000-01-23T04:56:07.000+00:00
        executionId: executionId
        tenantId: tenantId
        namespace: namespace
        backfill: ""
        evaluateRunningDate: 2000-01-23T04:56:07.000+00:00
        disabled: true
        flowId: flowId
      type: object
    TriggerContext:
      properties:
        disabled:
          type: boolean
        tenantId:
          pattern: "^[a-z0-9][a-z0-9_-]"
          type: string
        namespace:
          type: string
        flowId:
          type: string
        triggerId:
          type: string
        date:
          format: date-time
          type: string
        nextExecutionDate:
          format: date-time
          nullable: true
          type: string
        backfill:
          allOf:
          - $ref: "#/components/schemas/Backfill"
          nullable: true
        stopAfter:
          items:
            $ref: "#/components/schemas/State.Type"
          nullable: true
          type: array
      required:
      - date
      - flowId
      - namespace
      - triggerId
      type: object
    TriggerController.SetDisabledRequest:
      properties:
        triggers:
          items:
            $ref: "#/components/schemas/Trigger"
          minItems: 1
          type: array
        disabled:
          type: boolean
      required:
      - disabled
      - triggers
      type: object
    TriggerController.Triggers:
      example:
        triggerContext:
          date: 2000-01-23T04:56:07.000+00:00
          workerId: workerId
          nextExecutionDate: 2000-01-23T04:56:07.000+00:00
          stopAfter:
          - CREATED
          - CREATED
          triggerId: triggerId
          updatedDate: 2000-01-23T04:56:07.000+00:00
          executionId: executionId
          tenantId: tenantId
          namespace: namespace
          backfill: ""
          evaluateRunningDate: 2000-01-23T04:56:07.000+00:00
          disabled: true
          flowId: flowId
        abstractTrigger:
          minLogLevel: ""
          stopAfter:
          - CREATED
          - CREATED
          description: description
          type: type
          logToFile: true
          version: version
          labels:
          - The_labels_to_pass_to_the_execution_created_
          - The_labels_to_pass_to_the_execution_created_
          failOnTriggerError: true
          logLevel: null
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          conditions:
          - type: type
          - type: type
      properties:
        abstractTrigger:
          $ref: "#/components/schemas/AbstractTrigger"
        triggerContext:
          $ref: "#/components/schemas/Trigger"
      required:
      - abstractTrigger
      - triggerContext
      type: object
    TriggerFixture:
      example:
        variables:
          key: "{}"
        id: id
        type: type
      properties:
        id:
          type: string
        type:
          type: string
        variables:
          additionalProperties:
            type: object
          type: object
      required:
      - id
      - type
      type: object
    Type:
      enum:
      - STRING
      - ENUM
      - SELECT
      - INT
      - FLOAT
      - BOOLEAN
      - BOOL
      - DATETIME
      - DATE
      - TIME
      - DURATION
      - FILE
      - JSON
      - URI
      - SECRET
      - ARRAY
      - MULTISELECT
      - YAML
      - EMAIL
      type: string
    UnitTest:
      example:
        description: description
        disabled: true
        id: id
        assertions:
        - isNotNull:
            expression: expression
            value: true
          in:
            expression: expression
            value:
            - value
            - value
          errorMessage:
            expression: expression
            value: value
          equalTo:
            expression: expression
            value: "{}"
          greaterThanOrEqualTo:
            expression: expression
            value: 0.8008281904610115
          description:
            expression: expression
            value: value
          contains:
            expression: expression
            value: value
          lessThan:
            expression: expression
            value: 0.8008281904610115
          isNull:
            expression: expression
            value: true
          endsWith:
            expression: expression
            value: value
          notIn:
            expression: expression
            value:
            - value
            - value
          value:
            expression: expression
            value: "{}"
          taskId: taskId
          lessThanOrEqualTo:
            expression: expression
            value: 0.8008281904610115
          startsWith:
            expression: expression
            value: value
          notEqualTo:
            expression: expression
            value: "{}"
          greaterThan:
            expression: expression
            value: 0.8008281904610115
        - isNotNull:
            expression: expression
            value: true
          in:
            expression: expression
            value:
            - value
            - value
          errorMessage:
            expression: expression
            value: value
          equalTo:
            expression: expression
            value: "{}"
          greaterThanOrEqualTo:
            expression: expression
            value: 0.8008281904610115
          description:
            expression: expression
            value: value
          contains:
            expression: expression
            value: value
          lessThan:
            expression: expression
            value: 0.8008281904610115
          isNull:
            expression: expression
            value: true
          endsWith:
            expression: expression
            value: value
          notIn:
            expression: expression
            value:
            - value
            - value
          value:
            expression: expression
            value: "{}"
          taskId: taskId
          lessThanOrEqualTo:
            expression: expression
            value: 0.8008281904610115
          startsWith:
            expression: expression
            value: value
          notEqualTo:
            expression: expression
            value: "{}"
          greaterThan:
            expression: expression
            value: 0.8008281904610115
        type: type
        fixtures:
          inputs:
            key: ""
          files:
            key: files
          trigger:
            variables:
              key: "{}"
            id: id
            type: type
          tasks:
          - outputs:
              key: "{}"
            description:
              expression: expression
              value: value
            id: id
            state: null
            value: value
          - outputs:
              key: "{}"
            description:
              expression: expression
              value: value
            id: id
            state: null
            value: value
      properties:
        id:
          type: string
        type:
          type: string
        disabled:
          type: boolean
        description:
          type: string
        fixtures:
          $ref: "#/components/schemas/Fixtures"
        assertions:
          items:
            $ref: "#/components/schemas/Assertion"
          type: array
      required:
      - assertions
      - id
      - type
      type: object
    UnitTestResult:
      example:
        executionId: executionId
        assertionResults:
        - actual: "{}"
          expected: "{}"
          errorMessage: errorMessage
          description: description
          operator: operator
          taskId: taskId
          isSuccess: true
        - actual: "{}"
          expected: "{}"
          errorMessage: errorMessage
          description: description
          operator: operator
          taskId: taskId
          isSuccess: true
        testType: testType
        testId: testId
        state: null
        url: https://openapi-generator.tech
        errors:
        - details: details
          message: message
        - details: details
          message: message
        fixtures:
          inputs:
            key: ""
          files:
            key: files
          trigger:
            variables:
              key: "{}"
            id: id
            type: type
          tasks:
          - outputs:
              key: "{}"
            description:
              expression: expression
              value: value
            id: id
            state: null
            value: value
          - outputs:
              key: "{}"
            description:
              expression: expression
              value: value
            id: id
            state: null
            value: value
      properties:
        testId:
          type: string
        testType:
          type: string
        executionId:
          type: string
        url:
          format: uri
          type: string
        state:
          $ref: "#/components/schemas/TestState"
        assertionResults:
          items:
            $ref: "#/components/schemas/AssertionResult"
          type: array
        errors:
          items:
            $ref: "#/components/schemas/AssertionRunError"
          type: array
        fixtures:
          $ref: "#/components/schemas/Fixtures"
      required:
      - assertionResults
      - errors
      - executionId
      - fixtures
      - state
      - testId
      - testType
      - url
      type: object
    UsageEE:
      allOf:
      - $ref: "#/components/schemas/MiscController.ApiUsage"
      example:
        tenants:
          count: 7
        roles:
          count: 2
        groups:
          count: 0
        users:
          count: 6
          oidcCount: 5
          apiKeyCount: 1
          basicAuthCount: 5
      properties:
        groups:
          $ref: "#/components/schemas/GroupUsage"
        users:
          $ref: "#/components/schemas/UserUsage"
        roles:
          $ref: "#/components/schemas/RoleUsage"
        tenants:
          $ref: "#/components/schemas/TenantUsage"
      type: object
    UserGroup:
      properties:
        value:
          type: string
        ref:
          type: string
        display:
          type: string
        type:
          $ref: "#/components/schemas/UserGroup.Type"
      type: object
    UserGroup.Type:
      enum:
      - DIRECT
      - INDIRECT
      type: string
    UserType:
      enum:
      - STANDARD
      - SERVICE_ACCOUNT
      type: string
    UserUsage:
      example:
        count: 6
        oidcCount: 5
        apiKeyCount: 1
        basicAuthCount: 5
      properties:
        count:
          format: int64
          type: integer
        apiKeyCount:
          format: int64
          type: integer
        oidcCount:
          format: int64
          type: integer
        basicAuthCount:
          format: int64
          type: integer
      required:
      - apiKeyCount
      - basicAuthCount
      - count
      - oidcCount
      type: object
    UsernamePasswordCredentials:
      properties:
        username:
          minLength: 1
          type: string
        password:
          minLength: 1
          type: string
        identity:
          nullable: true
          type: string
        secret:
          nullable: true
          type: string
      required:
      - password
      - username
      type: object
    ValidateConstraintViolation:
      example:
        outdated: true
        warnings:
        - warnings
        - warnings
        namespace: namespace
        index: 0
        deprecationPaths:
        - deprecationPaths
        - deprecationPaths
        constraints: constraints
        flow: flow
        infos:
        - infos
        - infos
      properties:
        flow:
          type: string
        namespace:
          type: string
        index:
          format: int32
          type: integer
        constraints:
          type: string
        outdated:
          type: boolean
        deprecationPaths:
          items:
            type: string
          type: array
        warnings:
          items:
            type: string
          type: array
        infos:
          items:
            type: string
          type: array
      required:
      - constraints
      - deprecationPaths
      - flow
      - index
      - infos
      - namespace
      - outdated
      - warnings
      type: object
    ValuePathExpression:
      properties:
        attributePath:
          $ref: "#/components/schemas/AttributeReference"
        attributeExpression:
          type: object
      required:
      - attributePath
      type: object
    WorkerGroup:
      example:
        fallback: FAIL
        key: key
      properties:
        key:
          type: string
        fallback:
          $ref: "#/components/schemas/WorkerGroup.Fallback"
      type: object
    WorkerGroup.Fallback:
      enum:
      - FAIL
      - WAIT
      - CANCEL
      type: string
    WorkerTaskRestartStrategy:
      enum:
      - NEVER
      - IMMEDIATELY
      - AFTER_TERMINATION_GRACE_PERIOD
      type: string
    uploadVersionedPlugins_request:
      properties:
        file:
          format: binary
          type: string
        forceInstallOnExistingVersions:
          nullable: true
          type: boolean
      required:
      - file
      type: object
    setLogo_request:
      properties:
        logo:
          description: The logo file
          format: binary
          type: string
      type: object
    bulkImportApps_request:
      properties:
        fileUpload:
          description: "The file to import, can be a ZIP archive or a multi-objects\
            \ YAML file"
          format: binary
          type: string
      type: object
    previewApp_request:
      properties:
        parameters:
          $ref: "#/components/schemas/HttpParameters"
      type: object
    deleteExecutionsByQuery_request:
      properties:
        filters:
          description: Filters
          items:
            $ref: "#/components/schemas/QueryFilter"
          nullable: true
          type: array
      type: object
    updateFlowsInNamespaceFromJson_200_response:
      oneOf:
      - items:
          $ref: "#/components/schemas/Flow"
        type: array
      - items:
          $ref: "#/components/schemas/FlowInterface"
        type: array
    updateFlow_200_response:
      oneOf:
      - $ref: "#/components/schemas/FlowWithSource"
      - $ref: "#/components/schemas/Flow"
    createNamespaceFile_request:
      properties:
        fileContent:
          description: The file to upload
          format: binary
          type: string
      type: object
    AbstractFlow_labels:
      oneOf:
      - items:
          description: TODO default missing array inner type to string
          type: string
        type: array
      - $ref: "#/components/schemas/Map_Object.Object_"
    The_labels_to_pass_to_the_execution_created_:
      oneOf:
      - items:
          description: TODO default missing array inner type to string
          type: string
        type: array
      - $ref: "#/components/schemas/Map_Object.Object_"
      title: The labels to pass to the execution created.
    DailyExecutionStatistics_executionCounts:
      properties:
        CREATED:
          format: int64
          type: integer
        RUNNING:
          format: int64
          type: integer
        PAUSED:
          format: int64
          type: integer
        RESTARTED:
          format: int64
          type: integer
        KILLING:
          format: int64
          type: integer
        SUCCESS:
          format: int64
          type: integer
        WARNING:
          format: int64
          type: integer
        FAILED:
          format: int64
          type: integer
        KILLED:
          format: int64
          type: integer
        CANCELLED:
          format: int64
          type: integer
        QUEUED:
          format: int64
          type: integer
        RETRYING:
          format: int64
          type: integer
        RETRIED:
          format: int64
          type: integer
        SKIPPED:
          format: int64
          type: integer
        BREAKPOINT:
          format: int64
          type: integer
      type: object
    Flow_allOf_labels:
      oneOf:
      - items:
          description: TODO default missing array inner type to string
          type: string
        type: array
      - $ref: "#/components/schemas/Map_Object.Object_"
    FlowForExecution_allOf_labels:
      oneOf:
      - items:
          description: TODO default missing array inner type to string
          type: string
        type: array
      - $ref: "#/components/schemas/Map_Object.Object_"
    FlowWithSource_allOf_labels:
      oneOf:
      - items:
          description: TODO default missing array inner type to string
          type: string
        type: array
      - $ref: "#/components/schemas/Map_Object.Object_"
    IAMRoleController_ApiRoleCreateOrUpdateRequest_permissions:
      example:
        NAMESPACE:
        - NAMESPACE
        - NAMESPACE
        APPEXECUTION:
        - APPEXECUTION
        - APPEXECUTION
        APP:
        - APP
        - APP
        TENANT_ACCESS:
        - TENANT_ACCESS
        - TENANT_ACCESS
        SERVICE_ACCOUNT:
        - SERVICE_ACCOUNT
        - SERVICE_ACCOUNT
        BLUEPRINT:
        - BLUEPRINT
        - BLUEPRINT
        EXECUTION:
        - EXECUTION
        - EXECUTION
        USER:
        - USER
        - USER
        FLOW:
        - FLOW
        - FLOW
        GROUP_MEMBERSHIP:
        - GROUP_MEMBERSHIP
        - GROUP_MEMBERSHIP
        ROLE:
        - ROLE
        - ROLE
        INVITATION:
        - INVITATION
        - INVITATION
        GROUP:
        - GROUP
        - GROUP
        TEST:
        - TEST
        - TEST
        DASHBOARD:
        - DASHBOARD
        - DASHBOARD
        IMPERSONATE:
        - IMPERSONATE
        - IMPERSONATE
        TEMPLATE:
        - TEMPLATE
        - TEMPLATE
        AUDITLOG:
        - AUDITLOG
        - AUDITLOG
        SETTING:
        - SETTING
        - SETTING
        INFRASTRUCTURE:
        - INFRASTRUCTURE
        - INFRASTRUCTURE
        KVSTORE:
        - KVSTORE
        - KVSTORE
        UNKNOWN:
        - UNKNOWN
        - UNKNOWN
        BINDING:
        - BINDING
        - BINDING
        SECRET:
        - SECRET
        - SECRET
      properties:
        FLOW:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        BLUEPRINT:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        TEMPLATE:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        NAMESPACE:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        EXECUTION:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        USER:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        GROUP:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        ROLE:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        BINDING:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        AUDITLOG:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        SECRET:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        KVSTORE:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        IMPERSONATE:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        SETTING:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        INFRASTRUCTURE:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        APP:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        APPEXECUTION:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        TEST:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        DASHBOARD:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        TENANT_ACCESS:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        SERVICE_ACCOUNT:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        INVITATION:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        GROUP_MEMBERSHIP:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        UNKNOWN:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
      type: object
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
    bearerAuth:
      bearerFormat: Bearer
      scheme: bearer
      type: http

